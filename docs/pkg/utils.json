{
    "Name": "utils",
    "CanonicalImportPath": "github.com/ghetzel/go-stockutil/utils",
    "ImportPath": "utils",
    "ParentPackage": "stockutil",
    "URL": "https://github.com/ghetzel/go-stockutil",
    "Synopsis": "",
    "MainFunction": false,
    "CommentWordCount": 355,
    "LineCount": 1528,
    "SourceLineCount": 1240,
    "FunctionCount": 46,
    "TypeCount": 4,
    "ConstantCount": 12,
    "VariableCount": 10,
    "Statistics": {
        "Mean": 0.2632,
        "StdDev": 0.4403,
        "GeometricMean": 0,
        "HarmonicMean": 0,
        "Median": 0,
        "Minimum": 0,
        "Maximum": 1
    },
    "Files": [
        {
            "Name": "convert.go",
            "Imports": [
                {
                    "PackageName": "errors",
                    "Alias": "errors"
                },
                {
                    "PackageName": "fmt",
                    "Alias": "fmt"
                },
                {
                    "PackageName": "io",
                    "Alias": "io"
                },
                {
                    "PackageName": "io/ioutil",
                    "Alias": "ioutil"
                },
                {
                    "PackageName": "reflect",
                    "Alias": "reflect"
                },
                {
                    "PackageName": "regexp",
                    "Alias": "regexp"
                },
                {
                    "PackageName": "strconv",
                    "Alias": "strconv"
                },
                {
                    "PackageName": "strings",
                    "Alias": "strings"
                },
                {
                    "PackageName": "time",
                    "Alias": "time"
                },
                {
                    "PackageName": "unicode",
                    "Alias": "unicode"
                },
                {
                    "PackageName": "unicode/utf8",
                    "Alias": "utf8"
                },
                {
                    "PackageName": "github.com/ghetzel/go-stockutil/rxutil",
                    "Alias": "rxutil"
                }
            ],
            "Size": 13918,
            "LineCount": 609,
            "SourceLineCount": 506,
            "FunctionCount": 18,
            "TypeCount": 2,
            "ConstantCount": 9,
            "VariableCount": 5
        },
        {
            "Name": "convert_test.go",
            "Imports": [
                {
                    "PackageName": "testing",
                    "Alias": "testing"
                },
                {
                    "PackageName": "github.com/ghetzel/testify/require",
                    "Alias": "require"
                }
            ],
            "Size": 4048,
            "LineCount": 131,
            "SourceLineCount": 105,
            "FunctionCount": 0,
            "TypeCount": 0,
            "ConstantCount": 0,
            "VariableCount": 0
        },
        {
            "Name": "detect.go",
            "Imports": [
                {
                    "PackageName": "reflect",
                    "Alias": "reflect"
                },
                {
                    "PackageName": "strconv",
                    "Alias": "strconv"
                },
                {
                    "PackageName": "strings",
                    "Alias": "strings"
                }
            ],
            "Size": 2050,
            "LineCount": 121,
            "SourceLineCount": 95,
            "FunctionCount": 8,
            "TypeCount": 0,
            "ConstantCount": 0,
            "VariableCount": 0
        },
        {
            "Name": "detect_test.go",
            "Imports": [
                {
                    "PackageName": "testing",
                    "Alias": "testing"
                },
                {
                    "PackageName": "github.com/ghetzel/testify/require",
                    "Alias": "require"
                }
            ],
            "Size": 3450,
            "LineCount": 121,
            "SourceLineCount": 107,
            "FunctionCount": 0,
            "TypeCount": 0,
            "ConstantCount": 0,
            "VariableCount": 0
        },
        {
            "Name": "io.go",
            "Imports": [
                {
                    "PackageName": "io",
                    "Alias": "io"
                },
                {
                    "PackageName": "time",
                    "Alias": "time"
                }
            ],
            "Size": 2418,
            "LineCount": 104,
            "SourceLineCount": 72,
            "FunctionCount": 12,
            "TypeCount": 1,
            "ConstantCount": 0,
            "VariableCount": 0
        },
        {
            "Name": "reflect.go",
            "Imports": [
                {
                    "PackageName": "reflect",
                    "Alias": "reflect"
                }
            ],
            "Size": 1593,
            "LineCount": 93,
            "SourceLineCount": 73,
            "FunctionCount": 3,
            "TypeCount": 0,
            "ConstantCount": 0,
            "VariableCount": 2
        },
        {
            "Name": "reflect_test.go",
            "Imports": [
                {
                    "PackageName": "reflect",
                    "Alias": "reflect"
                },
                {
                    "PackageName": "testing",
                    "Alias": "testing"
                },
                {
                    "PackageName": "github.com/ghetzel/testify/require",
                    "Alias": "require"
                }
            ],
            "Size": 252,
            "LineCount": 16,
            "SourceLineCount": 11,
            "FunctionCount": 0,
            "TypeCount": 0,
            "ConstantCount": 0,
            "VariableCount": 0
        },
        {
            "Name": "slice.go",
            "Imports": [
                {
                    "PackageName": "fmt",
                    "Alias": "fmt"
                },
                {
                    "PackageName": "reflect",
                    "Alias": "reflect"
                }
            ],
            "Size": 2968,
            "LineCount": 152,
            "SourceLineCount": 126,
            "FunctionCount": 2,
            "TypeCount": 1,
            "ConstantCount": 0,
            "VariableCount": 2
        },
        {
            "Name": "utils.go",
            "Imports": [
                {
                    "PackageName": "encoding/json",
                    "Alias": "json"
                },
                {
                    "PackageName": "fmt",
                    "Alias": "fmt"
                },
                {
                    "PackageName": "reflect",
                    "Alias": "reflect"
                },
                {
                    "PackageName": "strings",
                    "Alias": "strings"
                },
                {
                    "PackageName": "time",
                    "Alias": "time"
                },
                {
                    "PackageName": "github.com/fatih/structs",
                    "Alias": "structs"
                },
                {
                    "PackageName": "github.com/hashicorp/go-multierror",
                    "Alias": "multierror"
                },
                {
                    "PackageName": "k8s.io/client-go/util/jsonpath",
                    "Alias": "jsonpath"
                }
            ],
            "Size": 2890,
            "LineCount": 127,
            "SourceLineCount": 101,
            "FunctionCount": 3,
            "TypeCount": 0,
            "ConstantCount": 0,
            "VariableCount": 1
        },
        {
            "Name": "utils_test.go",
            "Imports": [
                {
                    "PackageName": "testing",
                    "Alias": "testing"
                },
                {
                    "PackageName": "time",
                    "Alias": "time"
                },
                {
                    "PackageName": "github.com/ghetzel/testify/require",
                    "Alias": "require"
                }
            ],
            "Size": 904,
            "LineCount": 54,
            "SourceLineCount": 44,
            "FunctionCount": 0,
            "TypeCount": 0,
            "ConstantCount": 3,
            "VariableCount": 0
        }
    ],
    "Constants": [
        {
            "Name": "Boolean",
            "Immutable": true
        },
        {
            "Name": "Bytes",
            "Immutable": true
        },
        {
            "Name": "Float",
            "Immutable": true
        },
        {
            "Name": "Integer",
            "Immutable": true
        },
        {
            "Name": "Invalid",
            "Type": "ConvertType",
            "Immutable": true,
            "Expression": "iota"
        },
        {
            "Name": "Nil",
            "Immutable": true
        },
        {
            "Name": "String",
            "Immutable": true
        },
        {
            "Name": "Time",
            "Immutable": true
        },
        {
            "Name": "UserDefined",
            "Immutable": true
        },
        {
            "Name": "Value1",
            "Type": "testEnum",
            "Immutable": true,
            "Expression": "iota"
        },
        {
            "Name": "Value2",
            "Immutable": true
        },
        {
            "Name": "Value3",
            "Immutable": true
        }
    ],
    "Variables": [
        {
            "Name": "BooleanFalseValues",
            "Expression": "[]string{`false`, `no`, `off`}"
        },
        {
            "Name": "BooleanTrueValues",
            "Expression": "[]string{`true`, `yes`, `on`}"
        },
        {
            "Name": "CompoundTypes"
        },
        {
            "Name": "EachChanMaxItems",
            "Expression": "1048576"
        },
        {
            "Name": "NilStrings"
        },
        {
            "Name": "PassthroughType",
            "Expression": "errors.New(`passthrough`)"
        },
        {
            "Name": "ReferenceTime",
            "Type": "time.Time"
        },
        {
            "Name": "SliceTypes",
            "Expression": "[]reflect.Kind{reflect.Slice, reflect.Array}"
        },
        {
            "Name": "Stop",
            "Expression": "fmt.Errorf(\"stop iterating\")"
        },
        {
            "Name": "TimeFormats"
        }
    ],
    "Functions": [
        {
            "Name": "AppendError",
            "Comment": "Appends on error to another, allowing for operations that return multiple errors\nto remain compatible within a single-valued context.",
            "Arguments": [
                {
                    "Name": "base",
                    "Type": "error"
                },
                {
                    "Name": "err",
                    "Type": "error"
                }
            ],
            "Returns": [
                {
                    "Type": "error"
                }
            ],
            "Signature": "AppendError(base error, err error) error",
            "Source": "ewoJaWYgZXJyID09IG5pbCB7CgkJcmV0dXJuIGJhc2UKCX0gZWxzZSB7CgkJcmV0dXJuIG11bHRpZXJyb3IuQXBwZW5kKGJhc2UsIGVycikKCX0KfQ==",
            "IsPackageLevel": true
        },
        {
            "Name": "Autotype",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "interface{}"
                }
            ],
            "Signature": "Autotype(in interface{}) interface{}",
            "Source": "ewoJXywgdmFsdWUgOj0gRGV0ZWN0KGluKQoJcmV0dXJuIHZhbHVlCn0=",
            "IsPackageLevel": true
        },
        {
            "Name": "ConvertCustomType",
            "Comment": "Returns the given value, converted according to any handlers set via RegisterTypeHandler.",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "interface{}"
                },
                {
                    "Type": "error"
                }
            ],
            "Signature": "ConvertCustomType(in interface{}) (interface{}, error)",
            "Source": "ewoJdmFyIGNvbnZlcnQgVHlwZUNvbnZlcnRGdW5jCgl2YXIgaW5WIHJlZmxlY3QuVmFsdWUKCWlmIHRWLCBvayA6PSBpbi4ocmVmbGVjdC5WYWx1ZSk7IG9rIHsKCQlpblYgPSB0VgoJfSBlbHNlIHsKCQlpblYgPSByZWZsZWN0LlZhbHVlT2YoaW4pCgl9CglpZiBpblYuSXNWYWxpZCgpIHsKCQlpZiBoYW5kbGVyLCBvayA6PSB0eXBlSGFuZGxlcnNbaW5WLlR5cGUoKS5TdHJpbmcoKV07IG9rIHsKCQkJY29udmVydCA9IGhhbmRsZXIKCQl9IGVsc2UgaWYgaGFuZGxlciwgb2sgOj0gdHlwZUhhbmRsZXJzW2luVi5LaW5kKCkuU3RyaW5nKCldOyBvayB7CgkJCWNvbnZlcnQgPSBoYW5kbGVyCgkJfSBlbHNlIGlmIGhhbmRsZXIsIG9rIDo9IHR5cGVIYW5kbGVyc1tgKmBdOyBvayB7CgkJCWNvbnZlcnQgPSBoYW5kbGVyCgkJfQoJCWlmIGNvbnZlcnQgIT0gbmlsIHsKCQkJaWYgb3V0LCBlcnIgOj0gY29udmVydChpbik7IGVyciA9PSBuaWwgewoJCQkJcmV0dXJuIG91dCwgbmlsCgkJCX0gZWxzZSB7CgkJCQlyZXR1cm4gbmlsLCBlcnIKCQkJfQoJCX0KCX0KCXJldHVybiBpbiwgUGFzc3Rocm91Z2hUeXBlCn0=",
            "IsPackageLevel": true
        },
        {
            "Name": "ConvertHexToInteger",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "int64"
                },
                {
                    "Type": "error"
                }
            ],
            "Signature": "ConvertHexToInteger(in interface{}) (int64, error)",
            "Source": "ewoJaWYgSXNIZXhhZGVjaW1hbChpbikgewoJCWlmIGluUywgZXJyIDo9IFRvU3RyaW5nKGluKTsgZXJyID09IG5pbCB7CgkJCWluUyA9IHN0cmluZ3MuVG9Mb3dlcihpblMpCgkJCWluUyA9IHN0cmluZ3MuVHJpbVByZWZpeChpblMsIGAweGApCgkJCXJldHVybiBzdHJjb252LlBhcnNlSW50KGluUywgMTYsIDY0KQoJCX0gZWxzZSB7CgkJCXJldHVybiAwLCBlcnIKCQl9Cgl9IGVsc2UgewoJCXJldHVybiAwLCBmbXQuRXJyb3JmKCJpbnZhbGlkIGhleGFkZWNpbWFsIHZhbHVlICcldiciLCBpbikKCX0KfQ==",
            "IsPackageLevel": true
        },
        {
            "Name": "ConvertTo",
            "Arguments": [
                {
                    "Name": "toType",
                    "Type": "ConvertType"
                },
                {
                    "Name": "inI",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "interface{}"
                },
                {
                    "Type": "error"
                }
            ],
            "Signature": "ConvertTo(toType ConvertType, inI interface{}) (interface{}, error)",
            "Source": "ewoJdmFyIGluUyBzdHJpbmcKCXZhciBpblNlcnIgZXJyb3IKCWlmIGluViwgb2sgOj0gaW5JLihyZWZsZWN0LlZhbHVlKTsgb2sgewoJCWlmIGluVi5DYW5JbnRlcmZhY2UoKSB7CgkJCWluSSA9IGluVi5JbnRlcmZhY2UoKQoJCX0gZWxzZSB7CgkJCXJldHVybiBuaWwsIGZtdC5FcnJvcmYoInJlZmxlY3QuVmFsdWUgZ2l2ZW4sIGJ1dCBjYW5ub3QgcmV0cmlldmUgaW50ZXJmYWNlIHZhbHVlIikKCQl9Cgl9CglpblMsIGluU2VyciA9IFRvU3RyaW5nKGluSSkKCXN3aXRjaCB0b1R5cGUgewoJY2FzZSBGbG9hdDoKCQlpZiBpblMgPT0gYGAgewoJCQlyZXR1cm4gZmxvYXQ2NCgwKSwgbmlsCgkJfSBlbHNlIGlmIHYsIG9rIDo9IGluSS4oZmxvYXQzMik7IG9rIHsKCQkJcmV0dXJuIGZsb2F0NjQodiksIG5pbAoJCX0gZWxzZSBpZiB2LCBvayA6PSBpbkkuKGZsb2F0NjQpOyBvayB7CgkJCXJldHVybiBmbG9hdDY0KHYpLCBuaWwKCQl9IGVsc2UgaWYgdiwgb2sgOj0gaW5JLihpbnQpOyBvayB7CgkJCXJldHVybiBmbG9hdDY0KHYpLCBuaWwKCQl9IGVsc2UgaWYgdiwgb2sgOj0gaW5JLihpbnQ4KTsgb2sgewoJCQlyZXR1cm4gZmxvYXQ2NCh2KSwgbmlsCgkJfSBlbHNlIGlmIHYsIG9rIDo9IGluSS4oaW50MTYpOyBvayB7CgkJCXJldHVybiBmbG9hdDY0KHYpLCBuaWwKCQl9IGVsc2UgaWYgdiwgb2sgOj0gaW5JLihpbnQzMik7IG9rIHsKCQkJcmV0dXJuIGZsb2F0NjQodiksIG5pbAoJCX0gZWxzZSBpZiB2LCBvayA6PSBpbkkuKGludDY0KTsgb2sgewoJCQlyZXR1cm4gZmxvYXQ2NCh2KSwgbmlsCgkJfSBlbHNlIGlmIHYsIG9rIDo9IGluSS4odWludCk7IG9rIHsKCQkJcmV0dXJuIGZsb2F0NjQodiksIG5pbAoJCX0gZWxzZSBpZiB2LCBvayA6PSBpbkkuKHVpbnQ4KTsgb2sgewoJCQlyZXR1cm4gZmxvYXQ2NCh2KSwgbmlsCgkJfSBlbHNlIGlmIHYsIG9rIDo9IGluSS4odWludDE2KTsgb2sgewoJCQlyZXR1cm4gZmxvYXQ2NCh2KSwgbmlsCgkJfSBlbHNlIGlmIHYsIG9rIDo9IGluSS4odWludDMyKTsgb2sgewoJCQlyZXR1cm4gZmxvYXQ2NCh2KSwgbmlsCgkJfSBlbHNlIGlmIHYsIG9rIDo9IGluSS4odWludDY0KTsgb2sgewoJCQlyZXR1cm4gZmxvYXQ2NCh2KSwgbmlsCgkJfSBlbHNlIGlmIElzSGV4YWRlY2ltYWwoaW5JKSB7CgkJCXYsIGVyciA6PSBDb252ZXJ0SGV4VG9JbnRlZ2VyKGluSSkKCQkJcmV0dXJuIGZsb2F0NjQodiksIGVycgoJCX0KCQlyZXR1cm4gc3RyY29udi5QYXJzZUZsb2F0KGluUywgNjQpCgljYXNlIEludGVnZXI6CgkJaWYgaW5UaW1lLCBvayA6PSBpbkkuKHRpbWUuVGltZSk7IG9rIHsKCQkJcmV0dXJuIGludDY0KGluVGltZS5Vbml4TmFubygpKSwgbmlsCgkJfSBlbHNlIGlmIGluUyA9PSBgYCB7CgkJCXJldHVybiBpbnQ2NCgwKSwgbmlsCgkJfSBlbHNlIGlmIGxheW91dCA6PSBEZXRlY3RUaW1lRm9ybWF0KGluUyk7IGxheW91dCAhPSBgYCAmJiBsYXlvdXQgIT0gYGVwb2NoYCB7CgkJCWlmIHRtLCBlcnIgOj0gdGltZS5QYXJzZShsYXlvdXQsIGluUyk7IGVyciA9PSBuaWwgewoJCQkJcmV0dXJuIHRtLlVuaXhOYW5vKCksIG5pbAoJCQl9IGVsc2UgewoJCQkJcmV0dXJuIG5pbCwgZXJyCgkJCX0KCQl9IGVsc2UgaWYgSXNIZXhhZGVjaW1hbChpbkkpIHsKCQkJcmV0dXJuIENvbnZlcnRIZXhUb0ludGVnZXIoaW5JKQoJCX0KCQlpZiB2LCBvayA6PSBpbkkuKGludCk7IG9rIHsKCQkJcmV0dXJuIGludDY0KHYpLCBuaWwKCQl9IGVsc2UgaWYgdiwgb2sgOj0gaW5JLihpbnQ4KTsgb2sgewoJCQlyZXR1cm4gaW50NjQodiksIG5pbAoJCX0gZWxzZSBpZiB2LCBvayA6PSBpbkkuKGludDE2KTsgb2sgewoJCQlyZXR1cm4gaW50NjQodiksIG5pbAoJCX0gZWxzZSBpZiB2LCBvayA6PSBpbkkuKGludDMyKTsgb2sgewoJCQlyZXR1cm4gaW50NjQodiksIG5pbAoJCX0gZWxzZSBpZiB2LCBvayA6PSBpbkkuKGludDY0KTsgb2sgewoJCQlyZXR1cm4gaW50NjQodiksIG5pbAoJCX0gZWxzZSBpZiB2LCBvayA6PSBpbkkuKHVpbnQpOyBvayB7CgkJCXJldHVybiBpbnQ2NCh2KSwgbmlsCgkJfSBlbHNlIGlmIHYsIG9rIDo9IGluSS4odWludDgpOyBvayB7CgkJCXJldHVybiBpbnQ2NCh2KSwgbmlsCgkJfSBlbHNlIGlmIHYsIG9rIDo9IGluSS4odWludDE2KTsgb2sgewoJCQlyZXR1cm4gaW50NjQodiksIG5pbAoJCX0gZWxzZSBpZiB2LCBvayA6PSBpbkkuKHVpbnQzMik7IG9rIHsKCQkJcmV0dXJuIGludDY0KHYpLCBuaWwKCQl9IGVsc2UgaWYgdiwgb2sgOj0gaW5JLih1aW50NjQpOyBvayB7CgkJCXJldHVybiBpbnQ2NCh2KSwgbmlsCgkJfQoJCXJldHVybiBzdHJjb252LlBhcnNlSW50KGluUywgMTAsIDY0KQoJY2FzZSBCb29sZWFuOgoJCWlmIGluSSA9PSBuaWwgewoJCQlyZXR1cm4gZmFsc2UsIG5pbAoJCX0KCQlpZiBJc0Jvb2xlYW5UcnVlKGluUykgewoJCQlyZXR1cm4gdHJ1ZSwgbmlsCgkJfSBlbHNlIGlmIElzQm9vbGVhbkZhbHNlKGluUykgewoJCQlyZXR1cm4gZmFsc2UsIG5pbAoJCX0gZWxzZSB7CgkJCXJldHVybiBuaWwsIGZtdC5FcnJvcmYoIkNhbm5vdCBjb252ZXJ0ICclcycgaW50byBhIGJvb2xlYW4gdmFsdWUiLCBpblMpCgkJfQoJY2FzZSBUaW1lOgoJCWlmIGluVGltZSwgb2sgOj0gaW5JLih0aW1lLlRpbWUpOyBvayB7CgkJCXJldHVybiBpblRpbWUsIG5pbAoJCX0KCQlpblMgPSBzdHJpbmdzLlRyaW0oc3RyaW5ncy5UcmltU3BhY2UoaW5TKSwgYCInYCkKCQlpZiBEZXRlY3RUaW1lRm9ybWF0KGluUykgPT0gYGVwb2NoYCB7CgkJCWlmIHYsIGVyciA6PSBzdHJjb252LlBhcnNlSW50KGluUywgMTAsIDY0KTsgZXJyID09IG5pbCB7CgkJCQlyZXR1cm4gdGltZS5Vbml4KHYsIDApLCBuaWwKCQkJfQoJCX0KCQlmb3IgXywgZm9ybWF0IDo9IHJhbmdlIFRpbWVGb3JtYXRzIHsKCQkJaWYgdG0sIGVyciA6PSB0aW1lLlBhcnNlKGZvcm1hdCwgc3RyaW5ncy5UcmltU3BhY2UoaW5TKSk7IGVyciA9PSBuaWwgewoJCQkJcmV0dXJuIHRtLCBuaWwKCQkJfQoJCX0KCQlzd2l0Y2ggaW5TIHsKCQljYXNlIGBub3dgOgoJCQlyZXR1cm4gdGltZS5Ob3coKSwgbmlsCgkJZGVmYXVsdDoKCQkJdG1TIDo9IHN0cmluZ3MuTWFwKGZ1bmMociBydW5lKSBydW5lIHsKCQkJCXN3aXRjaCByIHsKCQkJCWNhc2UgJy0nLCAnOicsICcgJywgJ1QnLCAnWic6CgkJCQkJcmV0dXJuICcwJwoJCQkJfQoJCQkJcmV0dXJuIHIKCQkJfSwgaW5TKQoJCQlpZiB2LCBlcnIgOj0gc3RyY29udi5QYXJzZUludCh0bVMsIDEwLCA2NCk7IGVyciA9PSBuaWwgJiYgdiA9PSAwIHsKCQkJCXJldHVybiB0aW1lLlRpbWV7fSwgbmlsCgkJCX0KCQkJcmV0dXJuIG5pbCwgZm10LkVycm9yZigiQ2Fubm90IGNvbnZlcnQgJyVzJyBpbnRvIGEgZGF0ZS90aW1lIHZhbHVlIiwgaW5TKQoJCX0KCWNhc2UgQnl0ZXM6CgkJaWYgaW5JID09IG5pbCB7CgkJCXJldHVybiBbXWJ5dGV7fSwgbmlsCgkJfSBlbHNlIGlmIGluUiwgb2sgOj0gaW5JLihpby5SZWFkZXIpOyBvayB7CgkJCWlmIGRhdGEsIGVyciA6PSBpb3V0aWwuUmVhZEFsbChpblIpOyBlcnIgPT0gbmlsIHsKCQkJCXJldHVybiBkYXRhLCBuaWwKCQkJfSBlbHNlIHsKCQkJCXJldHVybiBgYCwgZm10LkVycm9yZigiQ2Fubm90IGNvbnZlcnQgaW8uUmVhZGVyIHRvIFtdYnl0ZTogJXYiLCBlcnIpCgkJCX0KCQl9IGVsc2UgaWYgaW5CLCBvayA6PSBpbkkuKFtdYnl0ZSk7IG9rIHsKCQkJcmV0dXJuIGluQiwgbmlsCgkJfSBlbHNlIGlmIGluQiwgb2sgOj0gaW5JLihbXXVpbnQ4KTsgb2sgewoJCQlvdXRCIDo9IG1ha2UoW11ieXRlLCBsZW4oaW5CKSkKCQkJZm9yIGksIHYgOj0gcmFuZ2UgaW5CIHsKCQkJCW91dEJbaV0gPSBieXRlKHYpCgkJCX0KCQkJcmV0dXJuIG91dEIsIG5pbAoJCX0gZWxzZSBpZiBJc0tpbmQoaW5JLCByZWZsZWN0LlNsaWNlLCByZWZsZWN0LkFycmF5KSB7CgkJCW91dEIgOj0gbWFrZShbXWJ5dGUsIDApCgkJCWlmIGVyciA6PSBTbGljZUVhY2goaW5JLCBmdW5jKGkgaW50LCB2YWx1ZSBpbnRlcmZhY2V7fSkgZXJyb3IgewoJCQkJaWYgYmIsIGVyciA6PSBDb252ZXJ0VG9JbnRlZ2VyKHZhbHVlKTsgZXJyID09IG5pbCB7CgkJCQkJb3V0QiA9IGFwcGVuZChvdXRCLCBieXRlKGJiKSkKCQkJCQlyZXR1cm4gbmlsCgkJCQl9IGVsc2UgewoJCQkJCXJldHVybiBlcnIKCQkJCX0KCQkJfSk7IGVyciA9PSBuaWwgewoJCQkJcmV0dXJuIG91dEIsIG5pbAoJCQl9IGVsc2UgewoJCQkJcmV0dXJuIG5pbCwgZXJyCgkJCX0KCQl9IGVsc2UgaWYgaW5TZXJyID09IG5pbCB7CgkJCXJldHVybiBbXWJ5dGUoaW5TKSwgaW5TZXJyCgkJfSBlbHNlIHsKCQkJcmV0dXJuIG5pbCwgaW5TZXJyCgkJfQoJY2FzZSBTdHJpbmc6CgkJaWYgaW5JID09IG5pbCB7CgkJCXJldHVybiBgYCwgbmlsCgkJfSBlbHNlIGlmIGluUiwgb2sgOj0gaW5JLihpby5SZWFkZXIpOyBvayB7CgkJCWlmIGRhdGEsIGVyciA6PSBpb3V0aWwuUmVhZEFsbChpblIpOyBlcnIgPT0gbmlsIHsKCQkJCXJldHVybiBzdHJpbmcoZGF0YSksIG5pbAoJCQl9IGVsc2UgewoJCQkJcmV0dXJuIGBgLCBmbXQuRXJyb3JmKCJDYW5ub3QgY29udmVydCBpby5SZWFkZXIgdG8gc3RyaW5nOiAldiIsIGVycikKCQkJfQoJCX0gZWxzZSBpZiBpbkIsIG9rIDo9IGluSS4oW11ieXRlKTsgb2sgewoJCQlyZXR1cm4gc3RyaW5nKGluQiksIG5pbAoJCX0gZWxzZSBpZiBpblNyLCBvayA6PSBpbkkuKGZtdC5TdHJpbmdlcik7IG9rIHsKCQkJcmV0dXJuIGluU3IuU3RyaW5nKCksIG5pbAoJCX0gZWxzZSBpZiBpblYgOj0gcmVmbGVjdC5WYWx1ZU9mKGluSSk7IGluVi5LaW5kKCkgPT0gcmVmbGVjdC5QdHIgewoJCQlpblMsIGluU2VyciA9IFRvU3RyaW5nKGluVi5FbGVtKCkpCgkJfQoJCXJldHVybiBpblMsIGluU2VycgoJZGVmYXVsdDoKCQlyZXR1cm4gaW5JLCBuaWwKCX0KfQ==",
            "IsPackageLevel": true
        },
        {
            "Name": "ConvertToBool",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "bool"
                },
                {
                    "Type": "error"
                }
            ],
            "Signature": "ConvertToBool(in interface{}) (bool, error)",
            "Source": "ewoJaWYgdiwgZXJyIDo9IENvbnZlcnRUbyhCb29sZWFuLCBpbik7IGVyciA9PSBuaWwgewoJCXJldHVybiB2Lihib29sKSwgbmlsCgl9IGVsc2UgewoJCXJldHVybiBmYWxzZSwgZXJyCgl9Cn0=",
            "IsPackageLevel": true
        },
        {
            "Name": "ConvertToBytes",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "[]byte"
                },
                {
                    "Type": "error"
                }
            ],
            "Signature": "ConvertToBytes(in interface{}) ([]byte, error)",
            "Source": "ewoJaWYgdiwgZXJyIDo9IENvbnZlcnRUbyhCeXRlcywgaW4pOyBlcnIgPT0gbmlsIHsKCQlyZXR1cm4gdi4oW11ieXRlKSwgbmlsCgl9IGVsc2UgewoJCXJldHVybiBuaWwsIGVycgoJfQp9",
            "IsPackageLevel": true
        },
        {
            "Name": "ConvertToFloat",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "float64"
                },
                {
                    "Type": "error"
                }
            ],
            "Signature": "ConvertToFloat(in interface{}) (float64, error)",
            "Source": "ewoJaWYgdiwgZXJyIDo9IENvbnZlcnRUbyhGbG9hdCwgaW4pOyBlcnIgPT0gbmlsIHsKCQlyZXR1cm4gdi4oZmxvYXQ2NCksIG5pbAoJfSBlbHNlIHsKCQlyZXR1cm4gZmxvYXQ2NCgwLjApLCBlcnIKCX0KfQ==",
            "IsPackageLevel": true
        },
        {
            "Name": "ConvertToInteger",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "int64"
                },
                {
                    "Type": "error"
                }
            ],
            "Signature": "ConvertToInteger(in interface{}) (int64, error)",
            "Source": "ewoJaWYgdiwgZXJyIDo9IENvbnZlcnRUbyhJbnRlZ2VyLCBpbik7IGVyciA9PSBuaWwgewoJCXJldHVybiB2LihpbnQ2NCksIG5pbAoJfSBlbHNlIHsKCQlyZXR1cm4gaW50NjQoMCksIGVycgoJfQp9",
            "IsPackageLevel": true
        },
        {
            "Name": "ConvertToString",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "string"
                },
                {
                    "Type": "error"
                }
            ],
            "Signature": "ConvertToString(in interface{}) (string, error)",
            "Source": "ewoJaWYgdiwgZXJyIDo9IENvbnZlcnRUbyhTdHJpbmcsIGluKTsgZXJyID09IG5pbCB7CgkJcmV0dXJuIHYuKHN0cmluZyksIG5pbAoJfSBlbHNlIHsKCQlyZXR1cm4gYGAsIGVycgoJfQp9",
            "IsPackageLevel": true
        },
        {
            "Name": "ConvertToTime",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "time.Time"
                },
                {
                    "Type": "error"
                }
            ],
            "Signature": "ConvertToTime(in interface{}) (time.Time, error)",
            "Source": "ewoJc3dpdGNoIGluLih0eXBlKSB7CgljYXNlIHRpbWUuVGltZToKCQlyZXR1cm4gaW4uKHRpbWUuVGltZSksIG5pbAoJZGVmYXVsdDoKCQlpZiB2LCBlcnIgOj0gQ29udmVydFRvKFRpbWUsIGluKTsgZXJyID09IG5pbCB7CgkJCXJldHVybiB2Lih0aW1lLlRpbWUpLCBuaWwKCQl9IGVsc2UgewoJCQlyZXR1cm4gdGltZS5UaW1le30sIGVycgoJCX0KCX0KfQ==",
            "IsPackageLevel": true
        },
        {
            "Name": "DetectTimeFormat",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "string"
                }
            ],
            "Returns": [
                {
                    "Type": "string"
                }
            ],
            "Signature": "DetectTimeFormat(in string) string",
            "Source": "ewoJaWYgSXNJbnRlZ2VyKGluKSB7CgkJcmV0dXJuIGBlcG9jaGAKCX0KCWZvciBfLCBsYXlvdXQgOj0gcmFuZ2UgVGltZUZvcm1hdHMgewoJCWlmIF8sIGVyciA6PSB0aW1lLlBhcnNlKGxheW91dCwgaW4pOyBlcnIgPT0gbmlsIHsKCQkJcmV0dXJuIGxheW91dAoJCX0KCX0KCXJldHVybiBgYAp9",
            "IsPackageLevel": true
        },
        {
            "Name": "GenericMarshalJSON",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "interface{}"
                },
                {
                    "Name": "extraData",
                    "Type": "...map[string]interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "[]byte"
                },
                {
                    "Type": "error"
                }
            ],
            "Signature": "GenericMarshalJSON(in interface{}, extraData ...map[string]interface{}) ([]byte, error)",
            "Source": "ewoJc3ZhbCA6PSBzdHJ1Y3RzLk5ldyhpbikKCW91dHB1dCA6PSBtYWtlKG1hcFtzdHJpbmddaW50ZXJmYWNle30pCkZpZWxkTG9vcDoKCWZvciBfLCBmaWVsZCA6PSByYW5nZSBzdmFsLkZpZWxkcygpIHsKCQlpZiBmaWVsZC5Jc0V4cG9ydGVkKCkgewoJCQlrZXkgOj0gZmllbGQuTmFtZSgpCgkJCXZhbHVlIDo9IGZpZWxkLlZhbHVlKCkKCQkJaWYgdlRpbWUsIG9rIDo9IHZhbHVlLih0aW1lLlRpbWUpOyBvayB7CgkJCQlpZiB2VGltZS5Jc1plcm8oKSB7CgkJCQkJdmFsdWUgPSBuaWwKCQkJCX0gZWxzZSB7CgkJCQkJdmFsdWUgPSB2VGltZS5Gb3JtYXQodGltZS5SRkMzMzM5TmFubykKCQkJCX0KCQkJfSBlbHNlIGlmIF8sIG9rIDo9IHZhbHVlLihmbXQuU3RyaW5nZXIpOyBvayB7CgkJCQl2YWx1ZSA9IGZtdC5TcHJpbnRmKCIldiIsIHZhbHVlKQoJCQl9CgkJCWlmIHBhcnRzIDo9IHN0cmluZ3MuU3BsaXQoZmllbGQuVGFnKGBqc29uYCksIGAsYCk7IGxlbihwYXJ0cykgPiAwIHsKCQkJCWlmIHBhcnRzWzBdICE9IGBgIHsKCQkJCQlrZXkgPSBwYXJ0c1swXQoJCQkJfQoJCQkJaWYgbGVuKHBhcnRzKSA+IDEgewoJCQkJCWZvciBfLCBmbGFnIDo9IHJhbmdlIHBhcnRzWzE6XSB7CgkJCQkJCXN3aXRjaCBmbGFnIHsKCQkJCQkJY2FzZSBgb21pdGVtcHR5YDoKCQkJCQkJCWlmIGZpZWxkLklzWmVybygpIHsKCQkJCQkJCQljb250aW51ZSBGaWVsZExvb3AKCQkJCQkJCX0KCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJfQoJCQlvdXRwdXRba2V5XSA9IHZhbHVlCgkJfQoJfQoJaWYgbGVuKGV4dHJhRGF0YSkgPiAwICYmIGxlbihleHRyYURhdGFbMF0pID4gMCB7CgkJZm9yIGssIHYgOj0gcmFuZ2UgZXh0cmFEYXRhWzBdIHsKCQkJb3V0cHV0W2tdID0gdgoJCX0KCX0KCXJldHVybiBqc29uLk1hcnNoYWwob3V0cHV0KQp9",
            "IsPackageLevel": true
        },
        {
            "Name": "IsBoolean",
            "Arguments": [
                {
                    "Name": "inI",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "bool"
                }
            ],
            "Signature": "IsBoolean(inI interface{}) bool",
            "Source": "ewoJaWYgaW4sIGVyciA6PSBUb1N0cmluZyhpbkkpOyBlcnIgPT0gbmlsIHsKCQlpbiA9IHN0cmluZ3MuVG9Mb3dlcihpbikKCQlyZXR1cm4gKElzQm9vbGVhblRydWUoaW4pIHx8IElzQm9vbGVhbkZhbHNlKGluKSkKCX0KCXJldHVybiBmYWxzZQp9",
            "IsPackageLevel": true
        },
        {
            "Name": "IsBooleanFalse",
            "Arguments": [
                {
                    "Name": "inI",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "bool"
                }
            ],
            "Signature": "IsBooleanFalse(inI interface{}) bool",
            "Source": "ewoJaWYgaW4sIGVyciA6PSBUb1N0cmluZyhpbkkpOyBlcnIgPT0gbmlsIHsKCQlpbiA9IHN0cmluZ3MuVG9Mb3dlcihpbikKCQlmb3IgXywgdmFsIDo9IHJhbmdlIEJvb2xlYW5GYWxzZVZhbHVlcyB7CgkJCWlmIGluID09IHZhbCB7CgkJCQlyZXR1cm4gdHJ1ZQoJCQl9CgkJfQoJfQoJcmV0dXJuIGZhbHNlCn0=",
            "IsPackageLevel": true
        },
        {
            "Name": "IsBooleanTrue",
            "Arguments": [
                {
                    "Name": "inI",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "bool"
                }
            ],
            "Signature": "IsBooleanTrue(inI interface{}) bool",
            "Source": "ewoJaWYgaW4sIGVyciA6PSBUb1N0cmluZyhpbkkpOyBlcnIgPT0gbmlsIHsKCQlpbiA9IHN0cmluZ3MuVG9Mb3dlcihpbikKCQlmb3IgXywgdmFsIDo9IHJhbmdlIEJvb2xlYW5UcnVlVmFsdWVzIHsKCQkJaWYgaW4gPT0gdmFsIHsKCQkJCXJldHVybiB0cnVlCgkJCX0KCQl9Cgl9CglyZXR1cm4gZmFsc2UKfQ==",
            "IsPackageLevel": true
        },
        {
            "Name": "IsFloat",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "bool"
                }
            ],
            "Signature": "IsFloat(in interface{}) bool",
            "Source": "ewoJaW5WIDo9IHJlZmxlY3QuVmFsdWVPZihpbikKCXN3aXRjaCBpblYuS2luZCgpIHsKCWNhc2UgcmVmbGVjdC5GbG9hdDMyLCByZWZsZWN0LkZsb2F0NjQ6CgkJcmV0dXJuIHRydWUKCWRlZmF1bHQ6CgkJaWYgYXNTdHIsIGVyciA6PSBUb1N0cmluZyhpbik7IGVyciA9PSBuaWwgewoJCQlpZiBfLCBlcnIgOj0gc3RyY29udi5QYXJzZUZsb2F0KGFzU3RyLCA2NCk7IGVyciA9PSBuaWwgewoJCQkJcmV0dXJuIHRydWUKCQkJfQoJCX0KCX0KCXJldHVybiBmYWxzZQp9",
            "IsPackageLevel": true
        },
        {
            "Name": "IsHexadecimal",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "bool"
                }
            ],
            "Signature": "IsHexadecimal(in interface{}) bool",
            "Source": "ewoJaWYgaW5TLCBlcnIgOj0gVG9TdHJpbmcoaW4pOyBlcnIgPT0gbmlsIHsKCQlpblMgPSBzdHJpbmdzLlRvTG93ZXIoaW5TKQoJCWlmIHN0cmluZ3MuSGFzUHJlZml4KGluUywgYDB4YCkgewoJCQlpblMgPSBzdHJpbmdzLlRyaW1QcmVmaXgoaW5TLCBgMHhgKQoJCX0gZWxzZSB7CgkJCXJldHVybiBmYWxzZQoJCX0KCQlmb3IgXywgciA6PSByYW5nZSBpblMgewoJCQlpZiByID49ICcwJyAmJiByIDw9ICc5JyB8fCByID49ICdhJyAmJiByIDw9ICdmJyB7CgkJCQljb250aW51ZQoJCQl9IGVsc2UgewoJCQkJcmV0dXJuIGZhbHNlCgkJCX0KCQl9Cgl9IGVsc2UgewoJCXJldHVybiBmYWxzZQoJfQoJcmV0dXJuIHRydWUKfQ==",
            "IsPackageLevel": true
        },
        {
            "Name": "IsInteger",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "bool"
                }
            ],
            "Signature": "IsInteger(in interface{}) bool",
            "Source": "ewoJaW5WIDo9IHJlZmxlY3QuVmFsdWVPZihpbikKCXN3aXRjaCBpblYuS2luZCgpIHsKCWNhc2UgcmVmbGVjdC5JbnQsIHJlZmxlY3QuSW50OCwgcmVmbGVjdC5JbnQxNiwgcmVmbGVjdC5JbnQzMiwgcmVmbGVjdC5JbnQ2NCwgcmVmbGVjdC5VaW50LCByZWZsZWN0LlVpbnQ4LCByZWZsZWN0LlVpbnQxNiwgcmVmbGVjdC5VaW50MzIsIHJlZmxlY3QuVWludDY0LCByZWZsZWN0LlVpbnRwdHI6CgkJcmV0dXJuIHRydWUKCWRlZmF1bHQ6CgkJaWYgYXNTdHIsIGVyciA6PSBUb1N0cmluZyhpbik7IGVyciA9PSBuaWwgewoJCQlpZiBfLCBlcnIgOj0gc3RyY29udi5BdG9pKGFzU3RyKTsgZXJyID09IG5pbCB7CgkJCQlyZXR1cm4gdHJ1ZQoJCQl9CgkJfQoJfQoJcmV0dXJuIGZhbHNlCn0=",
            "IsPackageLevel": true
        },
        {
            "Name": "IsKind",
            "Comment": "Dectect whether the concrete underlying value of the given input is one or more\nKinds of value.",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "interface{}"
                },
                {
                    "Name": "kinds",
                    "Type": "...reflect.Kind"
                }
            ],
            "Returns": [
                {
                    "Type": "bool"
                }
            ],
            "Signature": "IsKind(in interface{}, kinds ...reflect.Kind) bool",
            "Source": "ewoJdmFyIGluVCByZWZsZWN0LlR5cGUKCWlmIHYsIG9rIDo9IGluLihyZWZsZWN0LlZhbHVlKTsgb2sgJiYgdi5Jc1ZhbGlkKCkgewoJCWluVCA9IHYuVHlwZSgpCgl9IGVsc2UgaWYgdiwgb2sgOj0gaW4uKHJlZmxlY3QuVHlwZSk7IG9rIHsKCQlpblQgPSB2Cgl9IGVsc2UgewoJCWluID0gUmVzb2x2ZVZhbHVlKGluKQoJCWluVCA9IHJlZmxlY3QuVHlwZU9mKGluKQoJfQoJaWYgaW5UID09IG5pbCB7CgkJcmV0dXJuIGZhbHNlCgl9Cglmb3IgXywgayA6PSByYW5nZSBraW5kcyB7CgkJaWYgaW5ULktpbmQoKSA9PSBrIHsKCQkJcmV0dXJuIHRydWUKCQl9Cgl9CglyZXR1cm4gZmFsc2UKfQ==",
            "IsPackageLevel": true
        },
        {
            "Name": "IsNumeric",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "bool"
                }
            ],
            "Signature": "IsNumeric(in interface{}) bool",
            "Source": "ewoJcmV0dXJuIElzRmxvYXQoaW4pCn0=",
            "IsPackageLevel": true
        },
        {
            "Name": "IsTime",
            "Arguments": [
                {
                    "Name": "inI",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "bool"
                }
            ],
            "Signature": "IsTime(inI interface{}) bool",
            "Source": "ewoJaWYgaW4sIGVyciA6PSBUb1N0cmluZyhpbkkpOyBlcnIgPT0gbmlsIHsKCQlpZiBmIDo9IERldGVjdFRpbWVGb3JtYXQoaW4pOyBmICE9IGBgICYmIGYgIT0gYGVwb2NoYCB7CgkJCXJldHVybiB0cnVlCgkJfQoJfQoJcmV0dXJuIGZhbHNlCn0=",
            "IsPackageLevel": true
        },
        {
            "Name": "IsZero",
            "Comment": "Returns whether the given value represents the underlying type's zero value",
            "Arguments": [
                {
                    "Name": "value",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "bool"
                }
            ],
            "Signature": "IsZero(value interface{}) bool",
            "Source": "ewoJaWYgdmFsdWUgPT0gbmlsIHsKCQlyZXR1cm4gdHJ1ZQoJfSBlbHNlIGlmIHZhbHVlViwgb2sgOj0gdmFsdWUuKHJlZmxlY3QuVmFsdWUpOyBvayAmJiB2YWx1ZVYuSXNWYWxpZCgpIHsKCQlpZiB2YWx1ZVYuQ2FuSW50ZXJmYWNlKCkgewoJCQl2YWx1ZSA9IHZhbHVlVi5JbnRlcmZhY2UoKQoJCX0KCX0KCXJldHVybiByZWZsZWN0LkRlZXBFcXVhbCh2YWx1ZSwgcmVmbGVjdC5aZXJvKHJlZmxlY3QuVHlwZU9mKHZhbHVlKSkuSW50ZXJmYWNlKCkpCn0=",
            "IsPackageLevel": true
        },
        {
            "Name": "JSONPath",
            "Comment": "Performs a JSONPath query against the given object and returns the results.\nJSONPath description, syntax, and examples are available at http://goessner.net/articles/JsonPath/.",
            "Arguments": [
                {
                    "Name": "data",
                    "Type": "interface{}"
                },
                {
                    "Name": "query",
                    "Type": "string"
                },
                {
                    "Name": "autowrap",
                    "Type": "bool"
                }
            ],
            "Returns": [
                {
                    "Type": "interface{}"
                },
                {
                    "Type": "error"
                }
            ],
            "Signature": "JSONPath(data interface{}, query string, autowrap bool) (interface{}, error)",
            "Source": "ewoJaWYgcmVmbGVjdC5UeXBlT2YoZGF0YSkuS2luZCgpID09IHJlZmxlY3QuTWFwICYmIHF1ZXJ5ICE9IGBgIHsKCQlmb3IgXywgbGluZSA6PSByYW5nZSBzdHJpbmdzLlNwbGl0KHF1ZXJ5LCAiXG4iKSB7CgkJCWxpbmUgPSBzdHJpbmdzLlRyaW1TcGFjZShsaW5lKQoJCQlpZiBsaW5lID09IGBgIHsKCQkJCWNvbnRpbnVlCgkJCX0gZWxzZSBpZiBhdXRvd3JhcCB7CgkJCQlsaW5lID0gc3RyaW5ncy5UcmltUHJlZml4KGxpbmUsIGB7YCkKCQkJCWxpbmUgPSBzdHJpbmdzLlRyaW1TdWZmaXgobGluZSwgYH1gKQoJCQkJbGluZSA9IGB7YCArIGxpbmUgKyBgfWAKCQkJfQoJCQl2YXIganAgPSBqc29ucGF0aC5OZXcoYGApLkFsbG93TWlzc2luZ0tleXModHJ1ZSkKCQkJaWYgZXJyIDo9IGpwLlBhcnNlKGxpbmUpOyBlcnIgPT0gbmlsIHsKCQkJCXZhciB2YWx1ZXMgW11pbnRlcmZhY2V7fQoJCQkJaWYgcmVzdWx0cywgZXJyIDo9IGpwLkZpbmRSZXN1bHRzKGRhdGEpOyBlcnIgPT0gbmlsIHsKCQkJCQlmb3IgXywgcGFpciA6PSByYW5nZSByZXN1bHRzIHsKCQkJCQkJZm9yIF8sIHAgOj0gcmFuZ2UgcGFpciB7CgkJCQkJCQlpZiBwLklzVmFsaWQoKSAmJiBwLkNhbkludGVyZmFjZSgpIHsKCQkJCQkJCQl2YWx1ZXMgPSBhcHBlbmQodmFsdWVzLCBwLkludGVyZmFjZSgpKQoJCQkJCQkJfQoJCQkJCQl9CgkJCQkJfQoJCQkJfSBlbHNlIHsKCQkJCQlyZXR1cm4gbmlsLCBlcnIKCQkJCX0KCQkJCXN3aXRjaCBsZW4odmFsdWVzKSB7CgkJCQljYXNlIDA6CgkJCQkJZGF0YSA9IG5pbAoJCQkJY2FzZSAxOgoJCQkJCWRhdGEgPSB2YWx1ZXNbMF0KCQkJCWRlZmF1bHQ6CgkJCQkJZGF0YSA9IHZhbHVlcwoJCQkJfQoJCQl9IGVsc2UgewoJCQkJcmV0dXJuIG5pbCwgZXJyCgkJCX0KCQl9Cgl9CglyZXR1cm4gZGF0YSwgbmlsCn0=",
            "IsPackageLevel": true
        },
        {
            "Name": "ParseDuration",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "string"
                }
            ],
            "Returns": [
                {
                    "Type": "time.Duration"
                },
                {
                    "Type": "error"
                }
            ],
            "Signature": "ParseDuration(in string) (time.Duration, error)",
            "Source": "ewoJaWYgaW4gPT0gYGAgewoJCXJldHVybiAwLCBuaWwKCX0KCXZhciBpIGludAoJdmFyIHRvdGFsSG91cnMgaW50CglpbiA9IHN0cmluZ3MuTWFwKGZ1bmMociBydW5lKSBydW5lIHsKCQlpZiB1bmljb2RlLklzU3BhY2UocikgewoJCQlyZXR1cm4gLTEKCQl9CgkJcmV0dXJuIHIKCX0sIGluKQoJZm9yIHsKCQlpKysKCQlpZiBtYXRjaCA6PSByeHV0aWwuTWF0Y2gocnhFeHRlbmRlZER1cmF0aW9ucywgaW4pOyBtYXRjaCAhPSBuaWwgewoJCQlpZiBudW0sIGVyciA6PSBDb252ZXJ0VG9JbnRlZ2VyKG1hdGNoLkdyb3VwKGBudW1iZXJgKSk7IGVyciA9PSBuaWwgewoJCQkJdmFyIGhvdXJzIGludAoJCQkJc3dpdGNoIHN0cmluZ3MuVG9Mb3dlcihtYXRjaC5Hcm91cChgc3VmZml4YCkpIHsKCQkJCWNhc2UgYHllYXJgLCBgeWVhcnNgLCBgeWA6CgkJCQkJaG91cnMgPSA4NzYwCgkJCQljYXNlIGB3ZWVrYCwgYHdlZWtzYCwgYHdrYCwgYHdrc2AsIGB3YDoKCQkJCQlob3VycyA9IDE2OAoJCQkJY2FzZSBgZGF5YCwgYGRheXNgLCBgZGA6CgkJCQkJaG91cnMgPSAyNAoJCQkJY2FzZSBgaG91cmAsIGBob3Vyc2AsIGBocmAsIGBocnNgLCBgaGA6CgkJCQkJaG91cnMgPSAxCgkJCQljYXNlIGBtaW51dGVgLCBgbWludXRlc2AsIGBtaW5gOgoJCQkJCWluID0gbWF0Y2guUmVwbGFjZUdyb3VwKGBzdWZmaXhgLCBgbWApCgkJCQlkZWZhdWx0OgoJCQkJCWJyZWFrCgkJCQl9CgkJCQlpZiBob3VycyA+IDAgewoJCQkJCWluID0gbWF0Y2guUmVwbGFjZUdyb3VwKDEsIGBgKQoJCQkJfQoJCQkJdG90YWxIb3VycyArPSBpbnQobnVtKSAqIGhvdXJzCgkJCX0gZWxzZSB7CgkJCQlyZXR1cm4gMCwgZm10LkVycm9yZigiSW52YWxpZCBudW1iZXI6ICV2IiwgZXJyKQoJCQl9CgkJfSBlbHNlIHsKCQkJYnJlYWsKCQl9CgkJaWYgaSA+PSBkdXJhdGlvbk1heE1hdGNoZXMgewoJCQlicmVhawoJCX0KCX0KCWlmIHRvdGFsSG91cnMgPiAwIHsKCQlpbiA9IGZtdC5TcHJpbnRmKCIlZGglcyIsIHRvdGFsSG91cnMsIGluKQoJfQoJcmV0dXJuIHRpbWUuUGFyc2VEdXJhdGlvbihpbikKfQ==",
            "IsPackageLevel": true
        },
        {
            "Name": "RegisterTypeHandler",
            "Comment": "Register's a handler used for converting one type to another. Type are checked in the following\nmanner:  The input value's reflect.Type String() value is matched, falling back to its\nreflect.Kind String() value, finally checking for a special \"*\" value that matches any type.\nIf the handler function returns nil, its value replaces the input value.  If the special error\ntype PassthroughType is returned, the original value is returned unmodified.",
            "Arguments": [
                {
                    "Name": "handler",
                    "Type": "TypeConvertFunc"
                },
                {
                    "Name": "types",
                    "Type": "...string"
                }
            ],
            "Signature": "RegisterTypeHandler(handler TypeConvertFunc, types ...string)",
            "Source": "ewoJZm9yIF8sIHQgOj0gcmFuZ2UgdHlwZXMgewoJCWlmIHQgIT0gYGAgewoJCQl0eXBlSGFuZGxlcnNbdF0gPSBoYW5kbGVyCgkJfQoJfQp9",
            "IsPackageLevel": true
        },
        {
            "Name": "ResolveValue",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "interface{}"
                }
            ],
            "Signature": "ResolveValue(in interface{}) interface{}",
            "Source": "ewoJdmFyIGluViByZWZsZWN0LlZhbHVlCglpZiB2Viwgb2sgOj0gaW4uKHJlZmxlY3QuVmFsdWUpOyBvayB7CgkJaW5WID0gdlYKCX0gZWxzZSB7CgkJaW5WID0gcmVmbGVjdC5WYWx1ZU9mKGluKQoJfQoJaWYgaW5WLklzVmFsaWQoKSB7CgkJaWYgaW5UIDo9IGluVi5UeXBlKCk7IGluVCA9PSBuaWwgewoJCQlyZXR1cm4gbmlsCgkJfQoJCXN3aXRjaCBpblYuS2luZCgpIHsKCQljYXNlIHJlZmxlY3QuUHRyLCByZWZsZWN0LkludGVyZmFjZToKCQkJcmV0dXJuIFJlc29sdmVWYWx1ZShpblYuRWxlbSgpKQoJCX0KCQlpbiA9IGluVi5JbnRlcmZhY2UoKQoJfQoJcmV0dXJuIGluCn0=",
            "IsPackageLevel": true
        },
        {
            "Name": "SliceEach",
            "Comment": "Iterate through each element of the given array, slice or channel; calling\niterFn exactly once for each element.  Otherwise, call iterFn one time\nwith the given input as the argument.",
            "Arguments": [
                {
                    "Name": "slice",
                    "Type": "interface{}"
                },
                {
                    "Name": "iterFn",
                    "Type": "IterationFunc"
                },
                {
                    "Name": "preserve",
                    "Type": "...reflect.Kind"
                }
            ],
            "Returns": [
                {
                    "Type": "error"
                }
            ],
            "Signature": "SliceEach(slice interface{}, iterFn IterationFunc, preserve ...reflect.Kind) error",
            "Source": "ewoJaWYgaXRlckZuID09IG5pbCB7CgkJcmV0dXJuIG5pbAoJfQoJc2xpY2UgPSBSZXNvbHZlVmFsdWUoc2xpY2UpCglpZiBpblQgOj0gcmVmbGVjdC5UeXBlT2Yoc2xpY2UpOyBpblQgIT0gbmlsIHsKCQlzd2l0Y2ggaW5ULktpbmQoKSB7CgkJY2FzZSByZWZsZWN0LlNsaWNlLCByZWZsZWN0LkFycmF5OgoJCQlzbGljZVYgOj0gcmVmbGVjdC5WYWx1ZU9mKHNsaWNlKQoJCQlmb3IgaSA6PSAwOyBpIDwgc2xpY2VWLkxlbigpOyBpKysgewoJCQkJaWYgZXJyIDo9IGl0ZXJGbihpLCBzbGljZVYuSW5kZXgoaSkuSW50ZXJmYWNlKCkpOyBlcnIgIT0gbmlsIHsKCQkJCQlpZiBlcnIgPT0gU3RvcCB7CgkJCQkJCXJldHVybiBuaWwKCQkJCQl9IGVsc2UgewoJCQkJCQlyZXR1cm4gZXJyCgkJCQkJfQoJCQkJfQoJCQl9CgkJY2FzZSByZWZsZWN0Lk1hcDoKCQkJZm9yIF8sIHAgOj0gcmFuZ2UgcHJlc2VydmUgewoJCQkJaWYgcCA9PSByZWZsZWN0Lk1hcCB7CgkJCQkJaWYgZXJyIDo9IGl0ZXJGbigwLCBzbGljZSk7IGVyciAhPSBuaWwgewoJCQkJCQlpZiBlcnIgPT0gU3RvcCB7CgkJCQkJCQlyZXR1cm4gbmlsCgkJCQkJCX0gZWxzZSB7CgkJCQkJCQlyZXR1cm4gZXJyCgkJCQkJCX0KCQkJCQl9IGVsc2UgewoJCQkJCQlyZXR1cm4gbmlsCgkJCQkJfQoJCQkJfQoJCQl9CgkJCW1hcFYgOj0gcmVmbGVjdC5WYWx1ZU9mKHNsaWNlKQoJCQlmb3IgaSwga2V5IDo9IHJhbmdlIG1hcFYuTWFwS2V5cygpIHsKCQkJCWlmIHZhbHVlViA6PSBtYXBWLk1hcEluZGV4KGtleSk7IHZhbHVlVi5Jc1ZhbGlkKCkgJiYgdmFsdWVWLkNhbkludGVyZmFjZSgpIHsKCQkJCQlpZiBlcnIgOj0gaXRlckZuKGksIHZhbHVlVi5JbnRlcmZhY2UoKSk7IGVyciAhPSBuaWwgewoJCQkJCQlpZiBlcnIgPT0gU3RvcCB7CgkJCQkJCQlyZXR1cm4gbmlsCgkJCQkJCX0gZWxzZSB7CgkJCQkJCQlyZXR1cm4gZXJyCgkJCQkJCX0KCQkJCQl9CgkJCQl9CgkJCX0KCQljYXNlIHJlZmxlY3QuU3RydWN0OgoJCQlmb3IgXywgcCA6PSByYW5nZSBwcmVzZXJ2ZSB7CgkJCQlpZiBwID09IHJlZmxlY3QuU3RydWN0IHsKCQkJCQlpZiBlcnIgOj0gaXRlckZuKDAsIHNsaWNlKTsgZXJyICE9IG5pbCB7CgkJCQkJCWlmIGVyciA9PSBTdG9wIHsKCQkJCQkJCXJldHVybiBuaWwKCQkJCQkJfSBlbHNlIHsKCQkJCQkJCXJldHVybiBlcnIKCQkJCQkJfQoJCQkJCX0gZWxzZSB7CgkJCQkJCXJldHVybiBuaWwKCQkJCQl9CgkJCQl9CgkJCX0KCQkJc3RydWN0ViA6PSByZWZsZWN0LlZhbHVlT2Yoc2xpY2UpCgkJCWZvciBpIDo9IDA7IGkgPCBzdHJ1Y3RWLlR5cGUoKS5OdW1GaWVsZCgpOyBpKysgewoJCQkJZmllbGQgOj0gc3RydWN0Vi5UeXBlKCkuRmllbGQoaSkKCQkJCWlmIGZpZWxkLk5hbWUgIT0gYGAgewoJCQkJCWlmIHZhbHVlViA6PSBzdHJ1Y3RWLkZpZWxkKGkpOyB2YWx1ZVYuSXNWYWxpZCgpICYmIHZhbHVlVi5DYW5JbnRlcmZhY2UoKSB7CgkJCQkJCWlmIGVyciA6PSBpdGVyRm4oaSwgdmFsdWVWLkludGVyZmFjZSgpKTsgZXJyICE9IG5pbCB7CgkJCQkJCQlpZiBlcnIgPT0gU3RvcCB7CgkJCQkJCQkJcmV0dXJuIG5pbAoJCQkJCQkJfSBlbHNlIHsKCQkJCQkJCQlyZXR1cm4gZXJyCgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9CgkJCQl9CgkJCX0KCQljYXNlIHJlZmxlY3QuQ2hhbjoKCQkJc2xpY2VDIDo9IHJlZmxlY3QuVmFsdWVPZihzbGljZSkKCQkJdmFyIGkgaW50CgkJCWZvciB7CgkJCQlpZiBpdGVtLCBvayA6PSBzbGljZUMuUmVjdigpOyBvayB7CgkJCQkJaWYgaXRlbS5Jc1ZhbGlkKCkgJiYgaXRlbS5DYW5JbnRlcmZhY2UoKSB7CgkJCQkJCWlmIGVyciA6PSBpdGVyRm4oaSwgaXRlbS5JbnRlcmZhY2UoKSk7IGVyciAhPSBuaWwgewoJCQkJCQkJaWYgZXJyID09IFN0b3AgewoJCQkJCQkJCXJldHVybiBuaWwKCQkJCQkJCX0gZWxzZSB7CgkJCQkJCQkJcmV0dXJuIGVycgoJCQkJCQkJfQoJCQkJCQl9IGVsc2UgewoJCQkJCQkJaSsrCgkJCQkJCX0KCQkJCQl9CgkJCQl9IGVsc2UgaWYgaSA+PSBFYWNoQ2hhbk1heEl0ZW1zIHsKCQkJCQlicmVhawoJCQkJfSBlbHNlIHsKCQkJCQlicmVhawoJCQkJfQoJCQl9CgkJZGVmYXVsdDoKCQkJaWYgZXJyIDo9IGl0ZXJGbigwLCBzbGljZSk7IGVyciAhPSBuaWwgewoJCQkJaWYgZXJyID09IFN0b3AgewoJCQkJCXJldHVybiBuaWwKCQkJCX0gZWxzZSB7CgkJCQkJcmV0dXJuIGVycgoJCQkJfQoJCQl9CgkJfQoJfQoJcmV0dXJuIG5pbAp9",
            "IsPackageLevel": true
        },
        {
            "Name": "Sliceify",
            "Comment": "Takes some input value and returns it as a slice.",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "[]interface{}"
                }
            ],
            "Signature": "Sliceify(in interface{}) []interface{}",
            "Source": "ewoJaWYgaW4gPT0gbmlsIHsKCQlyZXR1cm4gbmlsCgl9Cgl2YXIgb3V0ID0gbWFrZShbXWludGVyZmFjZXt9LCAwKQoJU2xpY2VFYWNoKGluLCBmdW5jKF8gaW50LCB2IGludGVyZmFjZXt9KSBlcnJvciB7CgkJb3V0ID0gYXBwZW5kKG91dCwgdikKCQlyZXR1cm4gbmlsCgl9KQoJcmV0dXJuIG91dAp9",
            "IsPackageLevel": true
        },
        {
            "Name": "ToString",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "interface{}"
                }
            ],
            "Returns": [
                {
                    "Type": "string"
                },
                {
                    "Type": "error"
                }
            ],
            "Signature": "ToString(in interface{}) (string, error)",
            "Source": "ewoJaWYgaW4gPT0gbmlsIHsKCQlyZXR1cm4gYGAsIG5pbAoJfSBlbHNlIGlmIGVyciwgb2sgOj0gaW4uKGVycm9yKTsgb2sgewoJCXJldHVybiBlcnIuRXJyb3IoKSwgbmlsCgl9IGVsc2UgaWYgcywgb2sgOj0gaW4uKGZtdC5TdHJpbmdlcik7IG9rIHsKCQlyZXR1cm4gcy5TdHJpbmcoKSwgbmlsCgl9Cgl2YXIgYXNCeXRlcyBbXWJ5dGUKCWlmIHU4LCBvayA6PSBpbi4oW111aW50OCk7IG9rIHsKCQlhc0J5dGVzID0gW11ieXRlKHU4KQoJfSBlbHNlIGlmIGIsIG9rIDo9IGluLihbXWJ5dGUpOyBvayB7CgkJYXNCeXRlcyA9IGIKCX0gZWxzZSBpZiByLCBvayA6PSBpbi4oW11ydW5lKTsgb2sgewoJCXJldHVybiBzdHJpbmcociksIG5pbAoJfQoJaWYgbGVuKGFzQnl0ZXMpID4gMCB7CgkJaWYgb3V0IDo9IHN0cmluZyhhc0J5dGVzKTsgdXRmOC5WYWxpZFN0cmluZyhvdXQpIHsKCQkJcmV0dXJuIG91dCwgbmlsCgkJfSBlbHNlIHsKCQkJcmV0dXJuIGBgLCBmbXQuRXJyb3JmKCJHaXZlbiAlVCBpcyBub3QgYSB2YWxpZCBVVEYtOCBzdHJpbmciLCBpbikKCQl9Cgl9CglpZiBpblQgOj0gcmVmbGVjdC5UeXBlT2YoaW4pOyBpblQgIT0gbmlsIHsKCQlzd2l0Y2ggaW5ULktpbmQoKSB7CgkJY2FzZSByZWZsZWN0LkZsb2F0MzI6CgkJCXJldHVybiBzdHJjb252LkZvcm1hdEZsb2F0KHJlZmxlY3QuVmFsdWVPZihpbikuRmxvYXQoKSwgJ2YnLCAtMSwgMzIpLCBuaWwKCQljYXNlIHJlZmxlY3QuRmxvYXQ2NDoKCQkJcmV0dXJuIHN0cmNvbnYuRm9ybWF0RmxvYXQocmVmbGVjdC5WYWx1ZU9mKGluKS5GbG9hdCgpLCAnZicsIC0xLCA2NCksIG5pbAoJCWNhc2UgcmVmbGVjdC5Cb29sOgoJCQlyZXR1cm4gc3RyY29udi5Gb3JtYXRCb29sKGluLihib29sKSksIG5pbAoJCWNhc2UgcmVmbGVjdC5TdHJpbmc6CgkJCWlmIGluU3RyLCBvayA6PSBpbi4oc3RyaW5nKTsgb2sgewoJCQkJcmV0dXJuIGluU3RyLCBuaWwKCQkJfQoJCX0KCQlpZiAhSXNLaW5kKGluLCBDb21wb3VuZFR5cGVzLi4uKSB7CgkJCXJldHVybiBmbXQuU3ByaW50ZigiJXYiLCBpbiksIG5pbAoJCX0KCX0KCXJldHVybiBgYCwgZm10LkVycm9yZigiVW5hYmxlIHRvIGNvbnZlcnQgdHlwZSAnJVQnIHRvIHN0cmluZyIsIGluKQp9",
            "IsPackageLevel": true
        }
    ],
    "Tests": [
        {
            "Name": "TestConvertToInteger",
            "Arguments": [
                {
                    "Name": "t",
                    "Type": "*testing.T"
                }
            ],
            "Signature": "TestConvertToInteger(t *testing.T)",
            "Source": "ewoJYXNzZXJ0IDo9IHJlcXVpcmUuTmV3KHQpCgl2YXIgaSBpbnQ2NAoJdmFyIGVyciBlcnJvcgoJaSwgZXJyID0gQ29udmVydFRvSW50ZWdlcihgYCkKCWFzc2VydC5Ob0Vycm9yKGVycikKCWFzc2VydC5FcXVhbFZhbHVlcygwLCBpKQoJaSwgZXJyID0gQ29udmVydFRvSW50ZWdlcihgMGApCglhc3NlcnQuTm9FcnJvcihlcnIpCglhc3NlcnQuRXF1YWxWYWx1ZXMoMCwgaSkKCWksIGVyciA9IENvbnZlcnRUb0ludGVnZXIoYDEyM2ApCglhc3NlcnQuTm9FcnJvcihlcnIpCglhc3NlcnQuRXF1YWxWYWx1ZXMoMTIzLCBpKQoJaSwgZXJyID0gQ29udmVydFRvSW50ZWdlcihgMHgwYCkKCWFzc2VydC5Ob0Vycm9yKGVycikKCWFzc2VydC5FcXVhbFZhbHVlcygwLCBpKQoJaSwgZXJyID0gQ29udmVydFRvSW50ZWdlcihgMHgxYCkKCWFzc2VydC5Ob0Vycm9yKGVycikKCWFzc2VydC5FcXVhbFZhbHVlcygxLCBpKQoJaSwgZXJyID0gQ29udmVydFRvSW50ZWdlcihgMHhBYCkKCWFzc2VydC5Ob0Vycm9yKGVycikKCWFzc2VydC5FcXVhbFZhbHVlcygxMCwgaSkKCWksIGVyciA9IENvbnZlcnRUb0ludGVnZXIoYDB4RmApCglhc3NlcnQuTm9FcnJvcihlcnIpCglhc3NlcnQuRXF1YWxWYWx1ZXMoMTUsIGkpCglpLCBlcnIgPSBDb252ZXJ0VG9JbnRlZ2VyKGAweDEwYCkKCWFzc2VydC5Ob0Vycm9yKGVycikKCWFzc2VydC5FcXVhbFZhbHVlcygxNiwgaSkKCWksIGVyciA9IENvbnZlcnRUb0ludGVnZXIoYDB4R2ApCglhc3NlcnQuTm90TmlsKGVycikKfQ==",
            "IsPackageLevel": true
        },
        {
            "Name": "TestConvertTypeSpecificity",
            "Arguments": [
                {
                    "Name": "t",
                    "Type": "*testing.T"
                }
            ],
            "Signature": "TestConvertTypeSpecificity(t *testing.T)",
            "Source": "ewoJYXNzZXJ0IDo9IHJlcXVpcmUuTmV3KHQpCglhc3NlcnQuRmFsc2UoTmlsLklzU3VwZXJzZXRPZihOaWwpKQoJYXNzZXJ0LkZhbHNlKE5pbC5Jc1N1cGVyc2V0T2YoQnl0ZXMpKQoJYXNzZXJ0LkZhbHNlKE5pbC5Jc1N1cGVyc2V0T2YoU3RyaW5nKSkKCWFzc2VydC5GYWxzZShOaWwuSXNTdXBlcnNldE9mKEZsb2F0KSkKCWFzc2VydC5GYWxzZShOaWwuSXNTdXBlcnNldE9mKEludGVnZXIpKQoJYXNzZXJ0LkZhbHNlKE5pbC5Jc1N1cGVyc2V0T2YoVGltZSkpCglhc3NlcnQuRmFsc2UoTmlsLklzU3VwZXJzZXRPZihCb29sZWFuKSkKCWFzc2VydC5GYWxzZShCeXRlcy5Jc1N1cGVyc2V0T2YoQnl0ZXMpKQoJYXNzZXJ0LlRydWUoQnl0ZXMuSXNTdXBlcnNldE9mKFN0cmluZykpCglhc3NlcnQuVHJ1ZShCeXRlcy5Jc1N1cGVyc2V0T2YoRmxvYXQpKQoJYXNzZXJ0LlRydWUoQnl0ZXMuSXNTdXBlcnNldE9mKEludGVnZXIpKQoJYXNzZXJ0LlRydWUoQnl0ZXMuSXNTdXBlcnNldE9mKFRpbWUpKQoJYXNzZXJ0LlRydWUoQnl0ZXMuSXNTdXBlcnNldE9mKEJvb2xlYW4pKQoJYXNzZXJ0LlRydWUoQnl0ZXMuSXNTdXBlcnNldE9mKE5pbCkpCglhc3NlcnQuRmFsc2UoU3RyaW5nLklzU3VwZXJzZXRPZihCeXRlcykpCglhc3NlcnQuRmFsc2UoU3RyaW5nLklzU3VwZXJzZXRPZihTdHJpbmcpKQoJYXNzZXJ0LlRydWUoU3RyaW5nLklzU3VwZXJzZXRPZihGbG9hdCkpCglhc3NlcnQuVHJ1ZShTdHJpbmcuSXNTdXBlcnNldE9mKEludGVnZXIpKQoJYXNzZXJ0LlRydWUoU3RyaW5nLklzU3VwZXJzZXRPZihUaW1lKSkKCWFzc2VydC5UcnVlKFN0cmluZy5Jc1N1cGVyc2V0T2YoQm9vbGVhbikpCglhc3NlcnQuVHJ1ZShTdHJpbmcuSXNTdXBlcnNldE9mKE5pbCkpCglhc3NlcnQuRmFsc2UoRmxvYXQuSXNTdXBlcnNldE9mKEJ5dGVzKSkKCWFzc2VydC5GYWxzZShGbG9hdC5Jc1N1cGVyc2V0T2YoU3RyaW5nKSkKCWFzc2VydC5GYWxzZShGbG9hdC5Jc1N1cGVyc2V0T2YoRmxvYXQpKQoJYXNzZXJ0LlRydWUoRmxvYXQuSXNTdXBlcnNldE9mKEludGVnZXIpKQoJYXNzZXJ0LlRydWUoRmxvYXQuSXNTdXBlcnNldE9mKFRpbWUpKQoJYXNzZXJ0LlRydWUoRmxvYXQuSXNTdXBlcnNldE9mKEJvb2xlYW4pKQoJYXNzZXJ0LlRydWUoRmxvYXQuSXNTdXBlcnNldE9mKE5pbCkpCglhc3NlcnQuRmFsc2UoSW50ZWdlci5Jc1N1cGVyc2V0T2YoQnl0ZXMpKQoJYXNzZXJ0LkZhbHNlKEludGVnZXIuSXNTdXBlcnNldE9mKFN0cmluZykpCglhc3NlcnQuRmFsc2UoSW50ZWdlci5Jc1N1cGVyc2V0T2YoRmxvYXQpKQoJYXNzZXJ0LkZhbHNlKEludGVnZXIuSXNTdXBlcnNldE9mKEludGVnZXIpKQoJYXNzZXJ0LlRydWUoSW50ZWdlci5Jc1N1cGVyc2V0T2YoVGltZSkpCglhc3NlcnQuVHJ1ZShJbnRlZ2VyLklzU3VwZXJzZXRPZihCb29sZWFuKSkKCWFzc2VydC5UcnVlKEludGVnZXIuSXNTdXBlcnNldE9mKE5pbCkpCn0=",
            "IsPackageLevel": true
        },
        {
            "Name": "TestDetectConvertType",
            "Arguments": [
                {
                    "Name": "t",
                    "Type": "*testing.T"
                }
            ],
            "Signature": "TestDetectConvertType(t *testing.T)",
            "Source": "ewoJYXNzZXJ0IDo9IHJlcXVpcmUuTmV3KHQpCglhc3NlcnQuRXF1YWwoTmlsLCBEZXRlY3RDb252ZXJ0VHlwZShuaWwpKQoJYXNzZXJ0LkVxdWFsKE5pbCwgRGV0ZWN0Q29udmVydFR5cGUoYGApKQoJYXNzZXJ0LkVxdWFsKFN0cmluZywgRGV0ZWN0Q29udmVydFR5cGUoYDA3NzUzYCkpCglhc3NlcnQuRXF1YWwoU3RyaW5nLCBEZXRlY3RDb252ZXJ0VHlwZShgdGVzdGApKQoJYXNzZXJ0LkVxdWFsKFRpbWUsIERldGVjdENvbnZlcnRUeXBlKGAyMDE1LTA1LTAxIDAwOjE1OjE2YCkpCglhc3NlcnQuRXF1YWwoVGltZSwgRGV0ZWN0Q29udmVydFR5cGUoYEZyaSBNYXkgMSAwMDoxNToxNiBVVEMgMjAxNWApKQoJYXNzZXJ0LkVxdWFsKFRpbWUsIERldGVjdENvbnZlcnRUeXBlKGBGcmkgTWF5IDAxIDAwOjE1OjE2ICswMDAwIDIwMTVgKSkKCWFzc2VydC5FcXVhbChUaW1lLCBEZXRlY3RDb252ZXJ0VHlwZShgMDEgTWF5IDE1IDAwOjE1IFVUQ2ApKQoJYXNzZXJ0LkVxdWFsKFRpbWUsIERldGVjdENvbnZlcnRUeXBlKGAwMSBNYXkgMTUgMDA6MTUgKzAwMDBgKSkKCWFzc2VydC5FcXVhbChUaW1lLCBEZXRlY3RDb252ZXJ0VHlwZShgRnJpZGF5LCAwMS1NYXktMTUgMDA6MTU6MTYgVVRDYCkpCglhc3NlcnQuRXF1YWwoVGltZSwgRGV0ZWN0Q29udmVydFR5cGUoYDIwMDMtMDYtMDhUMTE6NTZgKSkKCWFzc2VydC5FcXVhbChUaW1lLCBEZXRlY3RDb252ZXJ0VHlwZShgMjAwMy0wNi0wOFQxMTo1NjozNmApKQoJYXNzZXJ0LkVxdWFsKFRpbWUsIERldGVjdENvbnZlcnRUeXBlKGAyMDAzLTA2LTA4IDExOjU2YCkpCglhc3NlcnQuRXF1YWwoVGltZSwgRGV0ZWN0Q29udmVydFR5cGUoYDIwMDMtMDYtMDggMTE6NTY6MzZgKSkKCWFzc2VydC5FcXVhbChJbnRlZ2VyLCBEZXRlY3RDb252ZXJ0VHlwZShgMTEzNjIzOTQ0NWApKQoJYXNzZXJ0LkVxdWFsKEludGVnZXIsIERldGVjdENvbnZlcnRUeXBlKGAxMTM2MjM5NDQ1MDAwYCkpCglhc3NlcnQuRXF1YWwoSW50ZWdlciwgRGV0ZWN0Q29udmVydFR5cGUoYDExMzYyMzk0NDUwMDAwMDBgKSkKCWFzc2VydC5FcXVhbChJbnRlZ2VyLCBEZXRlY3RDb252ZXJ0VHlwZShgMGApKQoJYXNzZXJ0LkVxdWFsKEludGVnZXIsIERldGVjdENvbnZlcnRUeXBlKGAxYCkpCglhc3NlcnQuRXF1YWwoSW50ZWdlciwgRGV0ZWN0Q29udmVydFR5cGUoYDE3NzUzYCkpCglhc3NlcnQuRXF1YWwoSW50ZWdlciwgRGV0ZWN0Q29udmVydFR5cGUoYDB4ZGVhZGJlZWZgKSkKCWFzc2VydC5FcXVhbChJbnRlZ2VyLCBEZXRlY3RDb252ZXJ0VHlwZShgMHhERUFEQkVFRmApKQoJYXNzZXJ0LkVxdWFsKFN0cmluZywgRGV0ZWN0Q29udmVydFR5cGUoYGRlYWRiZWVmYCkpCglhc3NlcnQuRXF1YWwoU3RyaW5nLCBEZXRlY3RDb252ZXJ0VHlwZShgREVBREJFRUZgKSkKCWFzc2VydC5FcXVhbChGbG9hdCwgRGV0ZWN0Q29udmVydFR5cGUoYDAuMGApKQoJYXNzZXJ0LkVxdWFsKEZsb2F0LCBEZXRlY3RDb252ZXJ0VHlwZShgMy4xNDE1YCkpCglhc3NlcnQuRXF1YWwoRmxvYXQsIERldGVjdENvbnZlcnRUeXBlKGAzLjAwMDFgKSkKCWFzc2VydC5FcXVhbChGbG9hdCwgRGV0ZWN0Q29udmVydFR5cGUoYDMuMTAwMGApKQp9",
            "IsPackageLevel": true
        },
        {
            "Name": "TestGenericMarshalJSON",
            "Arguments": [
                {
                    "Name": "t",
                    "Type": "*testing.T"
                }
            ],
            "Signature": "TestGenericMarshalJSON(t *testing.T)",
            "Source": "ewoJYXNzZXJ0IDo9IHJlcXVpcmUuTmV3KHQpCglkYXRhLCBlcnIgOj0gR2VuZXJpY01hcnNoYWxKU09OKCZ0ZXN0TWFyc2hhbHtOYW1lOiBgdGVzdGAsIENyZWF0ZWRBdDogdGltZS5EYXRlKDIwMDksIHRpbWUuTm92ZW1iZXIsIDEwLCAyMywgMCwgMCwgMCwgdGltZS5VVEMpLCBUaGluZzogVmFsdWUyfSkKCWFzc2VydC5Ob0Vycm9yKGVycikKCWFzc2VydC5FcXVhbChgeyJDcmVhdGVkQXQiOiIyMDA5LTExLTEwVDIzOjAwOjAwWiIsImVudW0iOiJ2YWx1ZS0yIiwibmFtZSI6InRlc3QifWAsIHN0cmluZyhkYXRhKSkKfQ==",
            "IsPackageLevel": true
        },
        {
            "Name": "TestIsFloat",
            "Arguments": [
                {
                    "Name": "t",
                    "Type": "*testing.T"
                }
            ],
            "Signature": "TestIsFloat(t *testing.T)",
            "Source": "ewoJYXNzZXJ0IDo9IHJlcXVpcmUuTmV3KHQpCglhc3NlcnQuRmFsc2UoSXNGbG9hdChuaWwpKQoJYXNzZXJ0LkZhbHNlKElzRmxvYXQoYGApKQoJYXNzZXJ0LkZhbHNlKElzRmxvYXQoYCBgKSkKCWFzc2VydC5GYWxzZShJc0Zsb2F0KGAgMCBgKSkKCWFzc2VydC5GYWxzZShJc0Zsb2F0KGAxIGApKQoJYXNzZXJ0LkZhbHNlKElzRmxvYXQoYG9idmlvdXNseSBub3QgYSBudW1iZXJgKSkKCWFzc2VydC5UcnVlKElzRmxvYXQoYDMuMTRgKSkKCWFzc2VydC5UcnVlKElzRmxvYXQoMy4xNCkpCglhc3NlcnQuVHJ1ZShJc0Zsb2F0KDApKQoJYXNzZXJ0LlRydWUoSXNGbG9hdCgxKSkKCWFzc2VydC5UcnVlKElzRmxvYXQoYDBgKSkKCWFzc2VydC5UcnVlKElzRmxvYXQoYDFgKSkKfQ==",
            "IsPackageLevel": true
        },
        {
            "Name": "TestIsHexadecimal",
            "Arguments": [
                {
                    "Name": "t",
                    "Type": "*testing.T"
                }
            ],
            "Signature": "TestIsHexadecimal(t *testing.T)",
            "Source": "ewoJYXNzZXJ0IDo9IHJlcXVpcmUuTmV3KHQpCglhc3NlcnQuRmFsc2UoSXNIZXhhZGVjaW1hbChuaWwpKQoJYXNzZXJ0LkZhbHNlKElzSGV4YWRlY2ltYWwoYGApKQoJYXNzZXJ0LkZhbHNlKElzSGV4YWRlY2ltYWwoYCBgKSkKCWFzc2VydC5GYWxzZShJc0hleGFkZWNpbWFsKGAgMCBgKSkKCWFzc2VydC5GYWxzZShJc0hleGFkZWNpbWFsKGAxIGApKQoJYXNzZXJ0LkZhbHNlKElzSGV4YWRlY2ltYWwoYG9idmlvdXNseSBub3QgYSBudW1iZXJgKSkKCWFzc2VydC5GYWxzZShJc0hleGFkZWNpbWFsKGAzLjE0YCkpCglhc3NlcnQuRmFsc2UoSXNIZXhhZGVjaW1hbCgzLjE0KSkKCWFzc2VydC5GYWxzZShJc0hleGFkZWNpbWFsKDApKQoJYXNzZXJ0LkZhbHNlKElzSGV4YWRlY2ltYWwoMSkpCglhc3NlcnQuRmFsc2UoSXNIZXhhZGVjaW1hbChgMGApKQoJYXNzZXJ0LkZhbHNlKElzSGV4YWRlY2ltYWwoYDFgKSkKCWFzc2VydC5GYWxzZShJc0hleGFkZWNpbWFsKDB4MCkpCglhc3NlcnQuRmFsc2UoSXNIZXhhZGVjaW1hbCgweDEpKQoJYXNzZXJ0LkZhbHNlKElzSGV4YWRlY2ltYWwoMHhBKSkKCWFzc2VydC5UcnVlKElzSGV4YWRlY2ltYWwoYDB4MGApKQoJYXNzZXJ0LlRydWUoSXNIZXhhZGVjaW1hbChgMHgxYCkpCglhc3NlcnQuVHJ1ZShJc0hleGFkZWNpbWFsKGAweDJgKSkKCWFzc2VydC5UcnVlKElzSGV4YWRlY2ltYWwoYDB4M2ApKQoJYXNzZXJ0LlRydWUoSXNIZXhhZGVjaW1hbChgMHg0YCkpCglhc3NlcnQuVHJ1ZShJc0hleGFkZWNpbWFsKGAweDVgKSkKCWFzc2VydC5UcnVlKElzSGV4YWRlY2ltYWwoYDB4NmApKQoJYXNzZXJ0LlRydWUoSXNIZXhhZGVjaW1hbChgMHg3YCkpCglhc3NlcnQuVHJ1ZShJc0hleGFkZWNpbWFsKGAweDhgKSkKCWFzc2VydC5UcnVlKElzSGV4YWRlY2ltYWwoYDB4OWApKQoJYXNzZXJ0LlRydWUoSXNIZXhhZGVjaW1hbChgMHhBYCkpCglhc3NlcnQuVHJ1ZShJc0hleGFkZWNpbWFsKGAweEJgKSkKCWFzc2VydC5UcnVlKElzSGV4YWRlY2ltYWwoYDB4Q2ApKQoJYXNzZXJ0LlRydWUoSXNIZXhhZGVjaW1hbChgMHhEYCkpCglhc3NlcnQuVHJ1ZShJc0hleGFkZWNpbWFsKGAweEVgKSkKCWFzc2VydC5UcnVlKElzSGV4YWRlY2ltYWwoYDB4RmApKQoJYXNzZXJ0LkZhbHNlKElzSGV4YWRlY2ltYWwoYDB4R2ApKQoJYXNzZXJ0LlRydWUoSXNIZXhhZGVjaW1hbChgMHhhYCkpCglhc3NlcnQuVHJ1ZShJc0hleGFkZWNpbWFsKGAweGJgKSkKCWFzc2VydC5UcnVlKElzSGV4YWRlY2ltYWwoYDB4Y2ApKQoJYXNzZXJ0LlRydWUoSXNIZXhhZGVjaW1hbChgMHhkYCkpCglhc3NlcnQuVHJ1ZShJc0hleGFkZWNpbWFsKGAweGVgKSkKCWFzc2VydC5UcnVlKElzSGV4YWRlY2ltYWwoYDB4ZmApKQoJYXNzZXJ0LkZhbHNlKElzSGV4YWRlY2ltYWwoYDB4Z2ApKQoJYXNzZXJ0LkZhbHNlKElzSGV4YWRlY2ltYWwoYDBgKSkKCWFzc2VydC5GYWxzZShJc0hleGFkZWNpbWFsKGAxYCkpCglhc3NlcnQuRmFsc2UoSXNIZXhhZGVjaW1hbChgMmApKQoJYXNzZXJ0LkZhbHNlKElzSGV4YWRlY2ltYWwoYDNgKSkKCWFzc2VydC5GYWxzZShJc0hleGFkZWNpbWFsKGA0YCkpCglhc3NlcnQuRmFsc2UoSXNIZXhhZGVjaW1hbChgNWApKQoJYXNzZXJ0LkZhbHNlKElzSGV4YWRlY2ltYWwoYDZgKSkKCWFzc2VydC5GYWxzZShJc0hleGFkZWNpbWFsKGA3YCkpCglhc3NlcnQuRmFsc2UoSXNIZXhhZGVjaW1hbChgOGApKQoJYXNzZXJ0LkZhbHNlKElzSGV4YWRlY2ltYWwoYDlgKSkKCWFzc2VydC5GYWxzZShJc0hleGFkZWNpbWFsKGBBYCkpCglhc3NlcnQuRmFsc2UoSXNIZXhhZGVjaW1hbChgQmApKQoJYXNzZXJ0LkZhbHNlKElzSGV4YWRlY2ltYWwoYENgKSkKCWFzc2VydC5GYWxzZShJc0hleGFkZWNpbWFsKGBEYCkpCglhc3NlcnQuRmFsc2UoSXNIZXhhZGVjaW1hbChgRWApKQoJYXNzZXJ0LkZhbHNlKElzSGV4YWRlY2ltYWwoYEZgKSkKCWFzc2VydC5GYWxzZShJc0hleGFkZWNpbWFsKGBHYCkpCglhc3NlcnQuRmFsc2UoSXNIZXhhZGVjaW1hbChgYWApKQoJYXNzZXJ0LkZhbHNlKElzSGV4YWRlY2ltYWwoYGJgKSkKCWFzc2VydC5GYWxzZShJc0hleGFkZWNpbWFsKGBjYCkpCglhc3NlcnQuRmFsc2UoSXNIZXhhZGVjaW1hbChgZGApKQoJYXNzZXJ0LkZhbHNlKElzSGV4YWRlY2ltYWwoYGVgKSkKCWFzc2VydC5GYWxzZShJc0hleGFkZWNpbWFsKGBmYCkpCglhc3NlcnQuRmFsc2UoSXNIZXhhZGVjaW1hbChgZ2ApKQoJYXNzZXJ0LkZhbHNlKElzSGV4YWRlY2ltYWwoYGRFYURiRWVGYCkpCglhc3NlcnQuVHJ1ZShJc0hleGFkZWNpbWFsKGAweGRFYURiRWVGYCkpCglhc3NlcnQuRmFsc2UoSXNIZXhhZGVjaW1hbChgREVBREJFRUZgKSkKCWFzc2VydC5UcnVlKElzSGV4YWRlY2ltYWwoYDB4REVBREJFRUZgKSkKCWFzc2VydC5GYWxzZShJc0hleGFkZWNpbWFsKGBkZWFkYmVlZmApKQoJYXNzZXJ0LlRydWUoSXNIZXhhZGVjaW1hbChgMHhkZWFkYmVlZmApKQp9",
            "IsPackageLevel": true
        },
        {
            "Name": "TestIsInteger",
            "Arguments": [
                {
                    "Name": "t",
                    "Type": "*testing.T"
                }
            ],
            "Signature": "TestIsInteger(t *testing.T)",
            "Source": "ewoJYXNzZXJ0IDo9IHJlcXVpcmUuTmV3KHQpCglhc3NlcnQuRmFsc2UoSXNJbnRlZ2VyKG5pbCkpCglhc3NlcnQuRmFsc2UoSXNJbnRlZ2VyKGBgKSkKCWFzc2VydC5GYWxzZShJc0ludGVnZXIoYCBgKSkKCWFzc2VydC5GYWxzZShJc0ludGVnZXIoYCAwIGApKQoJYXNzZXJ0LkZhbHNlKElzSW50ZWdlcihgb2J2aW91c2x5IG5vdCBhIG51bWJlcmApKQoJYXNzZXJ0LkZhbHNlKElzSW50ZWdlcihgMSBgKSkKCWFzc2VydC5GYWxzZShJc0ludGVnZXIoYDMuMTRgKSkKCWFzc2VydC5GYWxzZShJc0ludGVnZXIoMy4xNCkpCglhc3NlcnQuVHJ1ZShJc0ludGVnZXIoMCkpCglhc3NlcnQuVHJ1ZShJc0ludGVnZXIoMSkpCglhc3NlcnQuVHJ1ZShJc0ludGVnZXIoYDBgKSkKCWFzc2VydC5UcnVlKElzSW50ZWdlcihgMWApKQp9",
            "IsPackageLevel": true
        },
        {
            "Name": "TestIsKind",
            "Arguments": [
                {
                    "Name": "t",
                    "Type": "*testing.T"
                }
            ],
            "Signature": "TestIsKind(t *testing.T)",
            "Source": "ewoJYXNzZXJ0IDo9IHJlcXVpcmUuTmV3KHQpCglhc3NlcnQuRmFsc2UoSXNLaW5kKG5pbCwgcmVmbGVjdC5TdHJpbmcpKQoJYXNzZXJ0LkZhbHNlKElzS2luZChyZWZsZWN0LlZhbHVlT2YobmlsKSwgcmVmbGVjdC5TdHJpbmcpKQp9",
            "IsPackageLevel": true
        }
    ],
    "Types": {
        "ConvertType": {
            "Name": "ConvertType",
            "MetaType": "int",
            "Methods": [
                {
                    "Name": "IsSupersetOf",
                    "ReceiverName": "self",
                    "Arguments": [
                        {
                            "Name": "other",
                            "Type": "ConvertType"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "bool"
                        }
                    ],
                    "Signature": "IsSupersetOf(other ConvertType) bool",
                    "IsPackageLevel": false
                },
                {
                    "Name": "String",
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "string"
                        }
                    ],
                    "Signature": "String() string",
                    "IsPackageLevel": false
                },
                {
                    "Name": "Detect",
                    "Arguments": [
                        {
                            "Name": "in",
                            "Type": "interface{}"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "ConvertType"
                        },
                        {
                            "Type": "interface{}"
                        }
                    ],
                    "Signature": "Detect(in interface{}) (ConvertType, interface{})",
                    "Source": "ewoJaWYgdiwgZXJyIDo9IENvbnZlcnRDdXN0b21UeXBlKGluKTsgZXJyID09IG5pbCB7CgkJcmV0dXJuIFVzZXJEZWZpbmVkLCB2Cgl9IGVsc2UgaWYgZXJyICE9IFBhc3N0aHJvdWdoVHlwZSB7CgkJcGFuaWMoZXJyLkVycm9yKCkpCgl9CglpZiBpbiA9PSBuaWwgewoJCXJldHVybiBOaWwsIG5pbAoJfQoJaWYgSXNUaW1lKGluKSB7CgkJaWYgdiwgZXJyIDo9IENvbnZlcnRUbyhUaW1lLCBpbik7IGVyciA9PSBuaWwgewoJCQlyZXR1cm4gVGltZSwgdgoJCX0KCX0KCWlmIHZTdHIsIG9rIDo9IGluLihzdHJpbmcpOyBvayB7CgkJaWYgcnhMZWFkaW5nWmVyb2VzLk1hdGNoU3RyaW5nKHZTdHIpIHsKCQkJcmV0dXJuIFN0cmluZywgdlN0cgoJCX0KCQlmb3IgXywgbmlsU3RyIDo9IHJhbmdlIE5pbFN0cmluZ3MgewoJCQlpZiB2U3RyID09IG5pbFN0ciB7CgkJCQlyZXR1cm4gTmlsLCBuaWwKCQkJfQoJCX0KCX0KCWZvciBfLCBjdHlwZSA6PSByYW5nZSBbXUNvbnZlcnRUeXBle0Jvb2xlYW4sIEludGVnZXIsIEZsb2F0LCBTdHJpbmd9IHsKCQlpZiB2YWx1ZSwgZXJyIDo9IENvbnZlcnRUbyhjdHlwZSwgaW4pOyBlcnIgPT0gbmlsIHsKCQkJcmV0dXJuIGN0eXBlLCB2YWx1ZQoJCX0KCX0KCXJldHVybiBJbnZhbGlkLCBpbgp9",
                    "IsPackageLevel": true
                },
                {
                    "Name": "DetectConvertType",
                    "Arguments": [
                        {
                            "Name": "in",
                            "Type": "interface{}"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "ConvertType"
                        }
                    ],
                    "Signature": "DetectConvertType(in interface{}) ConvertType",
                    "Source": "ewoJY3R5cGUsIF8gOj0gRGV0ZWN0KGluKQoJcmV0dXJuIGN0eXBlCn0=",
                    "IsPackageLevel": true
                }
            ],
            "Source": "dHlwZSBDb252ZXJ0VHlwZSBpbnQ="
        },
        "IterationFunc": {
            "Name": "IterationFunc",
            "Source": "dHlwZSBJdGVyYXRpb25GdW5jIGZ1bmMoaSBpbnQsIHZhbHVlIGludGVyZmFjZXt9KSBlcnJvcg=="
        },
        "TimedReadCloser": {
            "Name": "TimedReadCloser",
            "MetaType": "struct",
            "Methods": [
                {
                    "Name": "BytesRead",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "int64"
                        }
                    ],
                    "Signature": "BytesRead() int64",
                    "IsPackageLevel": false
                },
                {
                    "Name": "Close",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Name": "err",
                            "Type": "error"
                        }
                    ],
                    "Signature": "Close() err error",
                    "IsPackageLevel": false
                },
                {
                    "Name": "CloseDuration",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "time.Duration"
                        }
                    ],
                    "Signature": "CloseDuration() time.Duration",
                    "IsPackageLevel": false
                },
                {
                    "Name": "Duration",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "time.Duration"
                        }
                    ],
                    "Signature": "Duration() time.Duration",
                    "IsPackageLevel": false
                },
                {
                    "Name": "LastReadAt",
                    "Comment": "Return the time of the last call to Read()",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "time.Time"
                        }
                    ],
                    "Signature": "LastReadAt() time.Time",
                    "IsPackageLevel": false
                },
                {
                    "Name": "NewTimedReadCloser",
                    "Arguments": [
                        {
                            "Name": "rc",
                            "Type": "io.ReadCloser"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "*TimedReadCloser"
                        }
                    ],
                    "Signature": "NewTimedReadCloser(rc io.ReadCloser) *TimedReadCloser",
                    "Source": "ewoJcmV0dXJuICZUaW1lZFJlYWRDbG9zZXJ7cmM6IHJjfQp9",
                    "IsPackageLevel": true
                },
                {
                    "Name": "Read",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Arguments": [
                        {
                            "Name": "b",
                            "Type": "[]byte"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "int"
                        },
                        {
                            "Type": "error"
                        }
                    ],
                    "Signature": "Read(b []byte) (int, error)",
                    "IsPackageLevel": false
                },
                {
                    "Name": "ReadDuration",
                    "Comment": "Return a running duration of how long reading has been happening.  Updated on\nevery call to Read().",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "time.Duration"
                        }
                    ],
                    "Signature": "ReadDuration() time.Duration",
                    "IsPackageLevel": false
                },
                {
                    "Name": "Reset",
                    "Comment": "Reset the internal counters to zero.  Useful after calling SetReadCloser().",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Signature": "Reset()",
                    "IsPackageLevel": false
                },
                {
                    "Name": "SetReadCloser",
                    "Comment": "Set the underlying io.ReadCloser.  Does not call Reset(), so multiple ReadClosers\ncan be cumulitively tracked.",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Arguments": [
                        {
                            "Name": "rc",
                            "Type": "io.ReadCloser"
                        }
                    ],
                    "Signature": "SetReadCloser(rc io.ReadCloser)",
                    "IsPackageLevel": false
                },
                {
                    "Name": "SinceLastRead",
                    "Comment": "Return the duration of time since the last Read() occurred.",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "time.Duration"
                        }
                    ],
                    "Signature": "SinceLastRead() time.Duration",
                    "IsPackageLevel": false
                },
                {
                    "Name": "StartedAt",
                    "Comment": "Return the time of the first call to Read().",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "time.Time"
                        }
                    ],
                    "Signature": "StartedAt() time.Time",
                    "IsPackageLevel": false
                }
            ],
            "Comment": "A TimedReadCloser wraps an io.ReadCloser, keeping track of how long actually\nreading from and closing the ReadCloser took, as well as how many bytes were read.\n\nMeasurement starts from the first call to Read(), and ends when Close() is called.",
            "Source": "dHlwZSBUaW1lZFJlYWRDbG9zZXIgc3RydWN0IHsKCn0vLyBBIFRpbWVkUmVhZENsb3NlciB3cmFwcyBhbiBpby5SZWFkQ2xvc2VyLCBrZWVwaW5nIHRyYWNrIG9mIGhvdyBsb25nIGFjdHVhbGx5Ci8vIHJlYWRpbmcgZnJvbSBhbmQgY2xvc2luZyB0aGUgUmVhZENsb3NlciB0b29rLCBhcyB3ZWxsIGFzIGhvdyBtYW55IGJ5dGVzIHdlcmUgcmVhZC4KLy8KLy8gTWVhc3VyZW1lbnQgc3RhcnRzIGZyb20gdGhlIGZpcnN0IGNhbGwgdG8gUmVhZCgpLCBhbmQgZW5kcyB3aGVuIENsb3NlKCkgaXMgY2FsbGVkLgoK",
            "HasUnexportedFields": true
        },
        "TypeConvertFunc": {
            "Name": "TypeConvertFunc",
            "Source": "dHlwZSBUeXBlQ29udmVydEZ1bmMgZnVuYyhpbiBpbnRlcmZhY2V7fSkgKGludGVyZmFjZXt9LCBlcnJvcik="
        }
    }
}
