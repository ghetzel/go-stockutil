{
    "Name": "structutil",
    "CanonicalImportPath": "github.com/ghetzel/go-stockutil/structutil",
    "ImportPath": "structutil",
    "ParentPackage": "stockutil",
    "URL": "https://github.com/ghetzel/go-stockutil",
    "Synopsis": "Utilities for working with and manipulating structs.\n",
    "MainFunction": false,
    "CommentWordCount": 92,
    "LineCount": 536,
    "SourceLineCount": 428,
    "FunctionCount": 13,
    "TypeCount": 5,
    "ConstantCount": 0,
    "VariableCount": 2,
    "Statistics": {
        "Mean": 0.1739,
        "StdDev": 0.379,
        "GeometricMean": 0,
        "HarmonicMean": 0,
        "Median": 0,
        "Minimum": 0,
        "Maximum": 1
    },
    "Files": [
        {
            "Name": "s.go",
            "Imports": [
                {
                    "PackageName": "fmt",
                    "Alias": "fmt"
                },
                {
                    "PackageName": "reflect",
                    "Alias": "reflect"
                },
                {
                    "PackageName": "strings",
                    "Alias": "strings"
                },
                {
                    "PackageName": "github.com/ghetzel/go-stockutil/maputil",
                    "Alias": "maputil"
                },
                {
                    "PackageName": "github.com/ghetzel/go-stockutil/sliceutil",
                    "Alias": "sliceutil"
                },
                {
                    "PackageName": "github.com/ghetzel/go-stockutil/stringutil",
                    "Alias": "stringutil"
                },
                {
                    "PackageName": "github.com/ghetzel/go-stockutil/typeutil",
                    "Alias": "typeutil"
                }
            ],
            "Size": 3484,
            "LineCount": 171,
            "SourceLineCount": 135,
            "FunctionCount": 10,
            "TypeCount": 2,
            "ConstantCount": 0,
            "VariableCount": 1
        },
        {
            "Name": "s_test.go",
            "Imports": [
                {
                    "PackageName": "testing",
                    "Alias": "testing"
                },
                {
                    "PackageName": "github.com/ghetzel/testify/require",
                    "Alias": "require"
                }
            ],
            "Size": 2804,
            "LineCount": 126,
            "SourceLineCount": 107,
            "FunctionCount": 0,
            "TypeCount": 0,
            "ConstantCount": 0,
            "VariableCount": 0
        },
        {
            "Name": "structutil.go",
            "Imports": [
                {
                    "PackageName": "errors",
                    "Alias": "errors"
                },
                {
                    "PackageName": "fmt",
                    "Alias": "fmt"
                },
                {
                    "PackageName": "reflect",
                    "Alias": "reflect"
                },
                {
                    "PackageName": "github.com/ghetzel/go-stockutil/typeutil",
                    "Alias": "typeutil"
                }
            ],
            "Size": 3999,
            "LineCount": 165,
            "SourceLineCount": 126,
            "FunctionCount": 3,
            "TypeCount": 2,
            "ConstantCount": 0,
            "VariableCount": 1
        },
        {
            "Name": "structutil_test.go",
            "Imports": [
                {
                    "PackageName": "reflect",
                    "Alias": "reflect"
                },
                {
                    "PackageName": "testing",
                    "Alias": "testing"
                },
                {
                    "PackageName": "github.com/ghetzel/testify/require",
                    "Alias": "require"
                }
            ],
            "Size": 1092,
            "LineCount": 74,
            "SourceLineCount": 60,
            "FunctionCount": 0,
            "TypeCount": 1,
            "ConstantCount": 0,
            "VariableCount": 0
        }
    ],
    "Variables": [
        {
            "Name": "StopIterating",
            "Expression": "errors.New(`stop iterating`)"
        },
        {
            "Name": "StructTag",
            "Type": "string",
            "Expression": "`structutil`",
            "Value": "structutil"
        }
    ],
    "Functions": [
        {
            "Name": "CopyFunc",
            "Arguments": [
                {
                    "Name": "dest",
                    "Type": "any"
                },
                {
                    "Name": "source",
                    "Type": "any"
                },
                {
                    "Name": "fn",
                    "Type": "StructValueFunc"
                }
            ],
            "Returns": [
                {
                    "Type": "error"
                }
            ],
            "Signature": "CopyFunc(dest any, source any, fn StructValueFunc) error",
            "Source": "ewoJaWYgZGVzdCA9PSBuaWwgfHwgc291cmNlID09IG5pbCB8fCBmbiA9PSBuaWwgewoJCXJldHVybiBuaWwKCX0KCXZhciBkZXN0ViByZWZsZWN0LlZhbHVlCgl2YXIgc3JjViByZWZsZWN0LlZhbHVlCglpZiBkViwgb2sgOj0gZGVzdC4ocmVmbGVjdC5WYWx1ZSk7IG9rIHsKCQlkZXN0ViA9IGRWCgl9IGVsc2UgewoJCWRlc3RWID0gcmVmbGVjdC5WYWx1ZU9mKGRlc3QpCgl9CglpZiBzViwgb2sgOj0gc291cmNlLihyZWZsZWN0LlZhbHVlKTsgb2sgewoJCXNyY1YgPSBzVgoJfSBlbHNlIHsKCQlzcmNWID0gcmVmbGVjdC5WYWx1ZU9mKHNvdXJjZSkKCX0KCWlmIGRWLCBlcnIgOj0gdmFsaWRhdGVQdHJUb1N0cnVjdChgZGVzdGluYXRpb25gLCBkZXN0Vik7IGVyciA9PSBuaWwgewoJCWRlc3RWID0gZFYKCX0gZWxzZSB7CgkJcmV0dXJuIGVycgoJfQoJaWYgc1YsIGVyciA6PSB2YWxpZGF0ZVB0clRvU3RydWN0KGBzb3VyY2VgLCBzcmNWKTsgZXJyID09IG5pbCB7CgkJc3JjViA9IHNWCgl9IGVsc2UgewoJCXJldHVybiBlcnIKCX0KCXZhciBkZXN0VCA9IGRlc3RWLlR5cGUoKQoJdmFyIHNyY1QgPSBzcmNWLlR5cGUoKQoJZm9yIHMgOj0gMDsgcyA8IHNyY1QuTnVtRmllbGQoKTsgcysrIHsKCQl2YXIgc0ZpZWxkVCA9IHNyY1QuRmllbGQocykKCQl2YXIgc0ZpZWxkViA9IHNyY1YuRmllbGQocykKCQlpZiBzRmllbGRULlBrZ1BhdGggIT0gYGAgewoJCQljb250aW51ZQoJCX0KCQlpZiBkRmllbGRULCBvayA6PSBkZXN0VC5GaWVsZEJ5TmFtZShzRmllbGRULk5hbWUpOyBvayB7CgkJCXZhciBkRmllbGRWID0gZGVzdFYuRmllbGRCeU5hbWUoZEZpZWxkVC5OYW1lKQoJCQlpZiBkRmllbGRULkFub255bW91cyB7CgkJCQlpZiBlcnIgOj0gQ29weUZ1bmMoZEZpZWxkViwgc0ZpZWxkViwgZm4pOyBlcnIgIT0gbmlsIHsKCQkJCQlyZXR1cm4gZXJyCgkJCQl9CgkJCX0gZWxzZSB7CgkJCQlpZiBzRmllbGRWLkNhbkludGVyZmFjZSgpICYmIGRGaWVsZFYuQ2FuSW50ZXJmYWNlKCkgewoJCQkJCWlmIHJlcGwsIG9rIDo9IGZuKGRGaWVsZFQuTmFtZSwgc0ZpZWxkVi5JbnRlcmZhY2UoKSwgZEZpZWxkVi5JbnRlcmZhY2UoKSk7IG9rIHsKCQkJCQkJaWYgZEZpZWxkVi5DYW5TZXQoKSB7CgkJCQkJCQlpZiBlcnIgOj0gdHlwZXV0aWwuU2V0VmFsdWUoZEZpZWxkViwgcmVwbCk7IGVyciAhPSBuaWwgewoJCQkJCQkJCXJldHVybiBlcnIKCQkJCQkJCX0KCQkJCQkJfSBlbHNlIHsKCQkJCQkJCXJldHVybiBmbXQuRXJyb3JmKCJmaWVsZCAlcSBpcyBub3Qgc2V0dGFibGUiLCBkRmllbGRULk5hbWUpCgkJCQkJCX0KCQkJCQl9CgkJCQl9IGVsc2UgewoJCQkJCXJldHVybiBmbXQuRXJyb3JmKCJDYW5ub3QgcmV0cmlldmUgZmllbGQgdmFsdWUgJXEiLCBkRmllbGRULk5hbWUpCgkJCQl9CgkJCX0KCQl9Cgl9CglyZXR1cm4gbmlsCn0=",
            "IsPackageLevel": true
        },
        {
            "Name": "CopyNonZero",
            "Comment": "Copy all values from the source into the destination, provided the source value for the corresponding\nfield is not that type's zero value.",
            "Arguments": [
                {
                    "Name": "dest",
                    "Type": "any"
                },
                {
                    "Name": "source",
                    "Type": "any"
                }
            ],
            "Returns": [
                {
                    "Type": "error"
                }
            ],
            "Signature": "CopyNonZero(dest any, source any) error",
            "Source": "ewoJcmV0dXJuIENvcHlGdW5jKGRlc3QsIHNvdXJjZSwgZnVuYyhuYW1lIHN0cmluZywgcyBhbnksIGQgYW55KSAoYW55LCBib29sKSB7CgkJaWYgdHlwZXV0aWwuSXNaZXJvKHMpIHsKCQkJcmV0dXJuIG5pbCwgZmFsc2UKCQl9IGVsc2UgewoJCQlyZXR1cm4gcywgdHJ1ZQoJCX0KCX0pCn0=",
            "IsPackageLevel": true
        },
        {
            "Name": "FieldsFunc",
            "Comment": "Iterates over all exported and embedded fields in the given struct, calling fn for each field.",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "any"
                },
                {
                    "Name": "fn",
                    "Type": "StructFieldFunc"
                }
            ],
            "Returns": [
                {
                    "Type": "error"
                }
            ],
            "Signature": "FieldsFunc(in any, fn StructFieldFunc) error",
            "Source": "ewoJaWYgaW4gPT0gbmlsIHx8IGZuID09IG5pbCB7CgkJcmV0dXJuIG5pbAoJfQoJdmFyIGluVmFsdSByZWZsZWN0LlZhbHVlCglpZiB2LCBvayA6PSBpbi4ocmVmbGVjdC5WYWx1ZSk7IG9rIHsKCQlpblZhbHUgPSB2Cgl9IGVsc2UgewoJCWluVmFsdSA9IHJlZmxlY3QuVmFsdWVPZihpbikKCX0KCWlmIGluVmFsdS5LaW5kKCkgPT0gcmVmbGVjdC5QdHIgewoJCWluVmFsdSA9IGluVmFsdS5FbGVtKCkKCX0KCXZhciBpblR5cGUgPSBpblZhbHUuVHlwZSgpCkZpZWxkTG9vcDoKCWZvciBpIDo9IDA7IGkgPCBpblR5cGUuTnVtRmllbGQoKTsgaSsrIHsKCQl2YXIgZmllbGRUID0gaW5UeXBlLkZpZWxkKGkpCgkJdmFyIGZpZWxkViA9IGluVmFsdS5GaWVsZChpKQoJCWlmIGZpZWxkVC5Bbm9ueW1vdXMgewoJCQlpZiBlcnIgOj0gRmllbGRzRnVuYyhmaWVsZFYsIGZuKTsgZXJyICE9IG5pbCB7CgkJCQlyZXR1cm4gZXJyCgkJCX0KCQl9CgkJaWYgZmllbGRULlBrZ1BhdGggIT0gYGAgewoJCQljb250aW51ZQoJCX0KCQlzd2l0Y2ggZXJyIDo9IGZuKCZmaWVsZFQsIGZpZWxkVik7IGVyciB7CgkJY2FzZSBTdG9wSXRlcmF0aW5nOgoJCQlicmVhayBGaWVsZExvb3AKCQljYXNlIG5pbDoKCQkJY29udGludWUKCQlkZWZhdWx0OgoJCQlyZXR1cm4gZXJyCgkJfQoJfQoJcmV0dXJuIG5pbAp9",
            "IsPackageLevel": true
        }
    ],
    "Tests": [
        {
            "Name": "TestCopyFunc",
            "Arguments": [
                {
                    "Name": "t",
                    "Type": "*testing.T"
                }
            ],
            "Signature": "TestCopyFunc(t *testing.T)",
            "Source": "ewoJdmFyIGFzc2VydCA9IHJlcXVpcmUuTmV3KHQpCgl2YXIgZGVzdCA9IHRQZXJzb257VEJhc2U6ICZUQmFzZXtFbmFibGVkOiB0cnVlfX0KCXZhciBzcmMgPSB0UGVyc29ue1RCYXNlOiAmVEJhc2V7TmFtZTogYEJvYiBKb2huc29uYCwgQWdlOiA0Mn0sIEFkZHJlc3M6IGAxMjMgRmFrZSBTdC5gfQoJYXNzZXJ0Lk5vRXJyb3IoQ29weU5vblplcm8oJmRlc3QsICZzcmMpKQoJYXNzZXJ0LkVxdWFsKHRQZXJzb257QWRkcmVzczogYDEyMyBGYWtlIFN0LmAsIFRCYXNlOiAmVEJhc2V7QWdlOiA0MiwgRW5hYmxlZDogdHJ1ZSwgTmFtZTogYEJvYiBKb2huc29uYH19LCBkZXN0KQp9",
            "IsPackageLevel": true
        },
        {
            "Name": "TestFieldsFunc",
            "Arguments": [
                {
                    "Name": "t",
                    "Type": "*testing.T"
                }
            ],
            "Signature": "TestFieldsFunc(t *testing.T)",
            "Source": "ewoJdmFyIGFzc2VydCA9IHJlcXVpcmUuTmV3KHQpCgl2YXIgb3V0ID0gbWFrZShtYXBbc3RyaW5nXWFueSkKCUZpZWxkc0Z1bmMoJlRCYXNle05hbWU6IGBoZWxsb2AsIEFnZTogMzIsIEVuYWJsZWQ6IHRydWUsIGhpZGRlbjogdHJ1ZX0sIGZ1bmMoZmllbGQgKnJlZmxlY3QuU3RydWN0RmllbGQsIHZhbHVlIHJlZmxlY3QuVmFsdWUpIGVycm9yIHsKCQlpZiB2YWx1ZS5DYW5JbnRlcmZhY2UoKSB7CgkJCW91dFtmaWVsZC5OYW1lXSA9IHZhbHVlLkludGVyZmFjZSgpCgkJfQoJCXJldHVybiBuaWwKCX0pCglhc3NlcnQuRXF1YWwobWFwW3N0cmluZ11hbnl7YE5hbWVgOiBgaGVsbG9gLCBgQWdlYDogMzIsIGBFbmFibGVkYDogdHJ1ZX0sIG91dCkKfQ==",
            "IsPackageLevel": true
        },
        {
            "Name": "TestS",
            "Arguments": [
                {
                    "Name": "t",
                    "Type": "*testing.T"
                }
            ],
            "Signature": "TestS(t *testing.T)",
            "Source": "ewoJdmFyIGJhc2UgPSAmdFN0cnVjdENoaWxke3RTdHJ1Y3RCYXNlOiAmdFN0cnVjdEJhc2V7TmFtZTogYHRlc3RgLCBBZ2U6IDQyLCBXb3JkczogW11zdHJpbmd7YGhlbGxvYCwgYHRoZXJlYH0sIFBocmFzZTogW11zdHJpbmd7YG1heWAsIGB0aGVgLCBgZm9yY2VgLCBgYmVgLCBgd2l0aGAsIGB5b3VgfX0sIEFkZHJlc3M6IGAxMjMgRmFrZSBTdC5gLCBEZXRhaWxzOiBtYXBbc3RyaW5nXWFueXtgZ2xvYmFsYDogbWFwW3N0cmluZ11hbnl7YG5hbWVgOiBgYmFzZWAsIGB2YWx1ZXNgOiBbXWludHsyLCA0LCA2fX19fQoJdmFyIHMgPSBTKGJhc2UpCgl2YXIgZmllbGRzID0gcy5GaWVsZHMoKQoJcmVxdWlyZS5MZW4odCwgZmllbGRzLCA3KQoJZm9yIGksIGZpZWxkIDo9IHJhbmdlIGZpZWxkcyB7CgkJdmFyIG5hbWUgPSBmaWVsZC5OYW1lCgkJdmFyIHR5cG4gPSBmaWVsZC5UeXBlLlN0cmluZygpCgkJc3dpdGNoIGkgewoJCWNhc2UgMDoKCQkJcmVxdWlyZS5FcXVhbCh0LCBgTmFtZWAsIG5hbWUpCgkJCXJlcXVpcmUuRXF1YWwodCwgYHN0cmluZ2AsIHR5cG4pCgkJCXJlcXVpcmUuRXF1YWwodCwgYHRlc3RgLCBmaWVsZC5WKCkuU3RyaW5nKCkpCgkJY2FzZSAxOgoJCQlyZXF1aXJlLkVxdWFsKHQsIGBBZ2VgLCBuYW1lKQoJCQlyZXF1aXJlLkVxdWFsKHQsIGBpbnRgLCB0eXBuKQoJCQlyZXF1aXJlLkVxdWFsKHQsIGludDY0KDQyKSwgZmllbGQuVigpLkludCgpKQoJCWNhc2UgMjoKCQkJcmVxdWlyZS5FcXVhbCh0LCBgRW5hYmxlZGAsIG5hbWUpCgkJCXJlcXVpcmUuRXF1YWwodCwgYGJvb2xgLCB0eXBuKQoJCQlyZXF1aXJlLkVxdWFsKHQsIGZhbHNlLCBmaWVsZC5WKCkuQm9vbCgpKQoJCWNhc2UgMzoKCQkJcmVxdWlyZS5FcXVhbCh0LCBgV29yZHNgLCBuYW1lKQoJCQlyZXF1aXJlLkVxdWFsKHQsIGBbXXN0cmluZ2AsIHR5cG4pCgkJCXJlcXVpcmUuRXF1YWwodCwgW11zdHJpbmd7YGhlbGxvYCwgYHRoZXJlYH0sIGZpZWxkLlYoKS5TdHJpbmdzKCkpCgkJCXZhciB0YWcsIGF0dHJzLCBvayA9IGZpZWxkLkdldFRhZyhgdGVzdGluZ2ApCgkJCXJlcXVpcmUuVHJ1ZSh0LCBvaykKCQkJcmVxdWlyZS5FcXVhbCh0LCBgV09SRFNgLCB0YWcpCgkJCXJlcXVpcmUuRXF1YWwodCwgW11zdHJpbmd7YG9taXRlbXB0eWB9LCBhdHRycykKCQkJdGFnLCBhdHRycywgb2sgPSBmaWVsZC5HZXRUYWcoYG90aGVyYCkKCQkJcmVxdWlyZS5GYWxzZSh0LCBvaykKCQkJcmVxdWlyZS5FcXVhbCh0LCBgYCwgdGFnKQoJCQlyZXF1aXJlLkVtcHR5KHQsIGF0dHJzKQoJCWNhc2UgNDoKCQkJcmVxdWlyZS5FcXVhbCh0LCBgUGhyYXNlYCwgbmFtZSkKCQkJcmVxdWlyZS5FcXVhbCh0LCBgW11zdHJpbmdgLCB0eXBuKQoJCQlyZXF1aXJlLkVxdWFsKHQsIFtdc3RyaW5ne2BtYXlgLCBgdGhlYCwgYGZvcmNlYCwgYGJlYCwgYHdpdGhgLCBgeW91YH0sIGZpZWxkLlYoKS5TdHJpbmdzKCkpCgkJY2FzZSA1OgoJCQlyZXF1aXJlLkVxdWFsKHQsIGBBZGRyZXNzYCwgbmFtZSkKCQkJcmVxdWlyZS5FcXVhbCh0LCBgc3RyaW5nYCwgdHlwbikKCQkJcmVxdWlyZS5FcXVhbCh0LCBgMTIzIEZha2UgU3QuYCwgZmllbGQuVigpLlN0cmluZygpKQoJCWNhc2UgNjoKCQkJcmVxdWlyZS5FcXVhbCh0LCBgRGV0YWlsc2AsIG5hbWUpCgkJCXJlcXVpcmUuRXF1YWwodCwgYG1hcFtzdHJpbmddaW50ZXJmYWNlIHt9YCwgdHlwbikKCQkJcmVxdWlyZS5MZW4odCwgYmFzZS5EZXRhaWxzLCAxKQoJCX0KCX0KCXJlcXVpcmUuTm9FcnJvcih0LCBzLk1lcmdlKCZ0U3RydWN0Q2hpbGR7dFN0cnVjdEJhc2U6ICZ0U3RydWN0QmFzZXtXb3JkczogW11zdHJpbmd7YGdlbmVyYWxgLCBga2Vub2JpYH0sIFBocmFzZTogW11zdHJpbmd7YGFuZGAsIGBhbHNvYCwgYHdpdGhgLCBgeW91YH19LCBBZGRyZXNzOiBgOTg3IEx1bHogTGFuZWAsIERldGFpbHM6IG1hcFtzdHJpbmddYW55e2BnbG9iYWxgOiBtYXBbc3RyaW5nXWFueXtgbmFtZWA6IGByZXBsYWNlZGAsIGB2YWx1ZXNgOiBbXWludHsxLCAzLCA1fX19fSkpCglyZXF1aXJlLkVxdWFsKHQsIFtdc3RyaW5ne2BoZWxsb2AsIGB0aGVyZWAsIGBnZW5lcmFsYCwgYGtlbm9iaWB9LCBiYXNlLldvcmRzKQoJcmVxdWlyZS5FcXVhbCh0LCBbXXN0cmluZ3tgYW5kYCwgYGFsc29gLCBgd2l0aGAsIGB5b3VgfSwgYmFzZS5QaHJhc2UpCglyZXF1aXJlLkVxdWFsKHQsIG1hcFtzdHJpbmddYW55e2BnbG9iYWxgOiBtYXBbc3RyaW5nXWFueXtgbmFtZWA6IGByZXBsYWNlZGAsIGB2YWx1ZXNgOiBbXWFueXsxLCAzLCA1fX19LCBiYXNlLkRldGFpbHMpCn0=",
            "IsPackageLevel": true
        }
    ],
    "Types": {
        "Field": {
            "Name": "Field",
            "MetaType": "struct",
            "Methods": [
                {
                    "Name": "GetTag",
                    "Comment": "Retrieve the field name and attributes associated with the given field tag.",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Arguments": [
                        {
                            "Name": "label",
                            "Type": "string"
                        },
                        {
                            "Name": "fallback",
                            "Type": "...any"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "string"
                        },
                        {
                            "Type": "[]string"
                        },
                        {
                            "Type": "bool"
                        }
                    ],
                    "Signature": "GetTag(label string, fallback ...any) (string, []string, bool)",
                    "IsPackageLevel": false
                },
                {
                    "Name": "Kind",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "reflect.Kind"
                        }
                    ],
                    "Signature": "Kind() reflect.Kind",
                    "IsPackageLevel": false
                },
                {
                    "Name": "MergeValue",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Arguments": [
                        {
                            "Name": "in",
                            "Type": "any"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "error"
                        }
                    ],
                    "Signature": "MergeValue(in any) error",
                    "IsPackageLevel": false
                },
                {
                    "Name": "Set",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Arguments": [
                        {
                            "Name": "value",
                            "Type": "any"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "error"
                        }
                    ],
                    "Signature": "Set(value any) error",
                    "IsPackageLevel": false
                },
                {
                    "Name": "V",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "typeutil.Variant"
                        }
                    ],
                    "Signature": "V() typeutil.Variant",
                    "IsPackageLevel": false
                },
                {
                    "Name": "Value",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "reflect.Value"
                        }
                    ],
                    "Signature": "Value() reflect.Value",
                    "IsPackageLevel": false
                }
            ],
            "Fields": [
                {
                    "Name": "Struct",
                    "Type": "*Struct"
                }
            ],
            "Source": "dHlwZSBGaWVsZCBzdHJ1Y3QgewoJKnJlZmxlY3QuU3RydWN0RmllbGQKCVN0cnVjdCAqU3RydWN0Cn0="
        },
        "Struct": {
            "Name": "Struct",
            "MetaType": "struct",
            "Methods": [
                {
                    "Name": "Field",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Arguments": [
                        {
                            "Name": "name",
                            "Type": "string"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "*Field"
                        },
                        {
                            "Type": "bool"
                        }
                    ],
                    "Signature": "Field(name string) (*Field, bool)",
                    "IsPackageLevel": false
                },
                {
                    "Name": "Fields",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "[]*Field"
                        }
                    ],
                    "Signature": "Fields() []*Field",
                    "IsPackageLevel": false
                },
                {
                    "Name": "Merge",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Arguments": [
                        {
                            "Name": "other",
                            "Type": "any"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "error"
                        }
                    ],
                    "Signature": "Merge(other any) error",
                    "IsPackageLevel": false
                },
                {
                    "Name": "S",
                    "Arguments": [
                        {
                            "Name": "src",
                            "Type": "any"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "*Struct"
                        }
                    ],
                    "Signature": "S(src any) *Struct",
                    "Source": "ewoJcmV0dXJuICZTdHJ1Y3R7U291cmNlOiBzcmMsIGZpZWxkczogbWFrZShbXSpGaWVsZCwgMCksIGZpZWxkbWFwOiBtYWtlKG1hcFtzdHJpbmddKkZpZWxkKX0KfQ==",
                    "IsPackageLevel": true
                }
            ],
            "Fields": [
                {
                    "Name": "Source",
                    "Type": "any"
                }
            ],
            "Comment": "A Struct, or \"S-object\", can be used to rapidly and safely inspect, iterate over, and modify values of a struct.",
            "Source": "dHlwZSBTdHJ1Y3Qgc3RydWN0IHsKCVNvdXJjZSBhbnkKCn0vLyBBIFN0cnVjdCwgb3IgIlMtb2JqZWN0IiwgY2FuIGJlIHVzZWQgdG8gcmFwaWRseSBhbmQgc2FmZWx5IGluc3BlY3QsIGl0ZXJhdGUgb3ZlciwgYW5kIG1vZGlmeSB2YWx1ZXMgb2YgYSBzdHJ1Y3QuCgo=",
            "HasUnexportedFields": true
        },
        "StructFieldFunc": {
            "Name": "StructFieldFunc",
            "Source": "dHlwZSBTdHJ1Y3RGaWVsZEZ1bmMgZnVuYyhmaWVsZCAqcmVmbGVjdC5TdHJ1Y3RGaWVsZCwgdmFsdWUgcmVmbGVjdC5WYWx1ZSkgZXJyb3I="
        },
        "StructValueFunc": {
            "Name": "StructValueFunc",
            "Source": "dHlwZSBTdHJ1Y3RWYWx1ZUZ1bmMgZnVuYyhmaWVsZCBzdHJpbmcsIHNvdXJjZVZhbHVlIGFueSwgZGVzdFZhbHVlIGFueSkgKGFueSwgYm9vbCkgLy8gUmVjZWl2ZXMgYSBzdHJ1Y3QgZmllbGQgbmFtZSwgdGhlIHZhbHVlIG9mIHRoYXQgZmllbGQgaW4gdGhlIHNvdXJjZSBzdHJ1Y3QsIGFuZCB0aGUgdmFsdWUgZm9yIHRoYXQgZmllbGQgaW4gdGhlIGRlc3RpbmF0aW9uIHN0cnVjdC4KLy8gUmV0dXJucyB0aGUgdmFsdWUgdGhhdCBzaG91bGQgYmUgcGxhY2VkIGluIHRoZSBkZXN0aW5hdGlvbiBzdHJ1Y3QgZmllbGRzLiAgSWYgdGhlIHJldHVybmVkIGJvb2wgaXMgZmFsc2UsIG5vIGNoYW5nZXMgd2lsbAovLyBiZSBtYWRlLgo="
        },
        "TBase": {
            "Name": "TBase",
            "MetaType": "struct",
            "Fields": [
                {
                    "Name": "Name",
                    "Type": "string"
                },
                {
                    "Name": "Age",
                    "Type": "int"
                },
                {
                    "Name": "Enabled",
                    "Type": "bool"
                }
            ],
            "Source": "dHlwZSBUQmFzZSBzdHJ1Y3QgewoJTmFtZSAgICBzdHJpbmcKCUFnZSAgICAgaW50CglFbmFibGVkIGJvb2wKCn0K",
            "HasUnexportedFields": true
        }
    }
}
