{
    "Name": "timeutil",
    "CanonicalImportPath": "github.com/ghetzel/go-stockutil/timeutil",
    "ImportPath": "timeutil",
    "ParentPackage": "stockutil",
    "URL": "https://github.com/ghetzel/go-stockutil",
    "Synopsis": "Utilities for messing with time.\n",
    "MainFunction": false,
    "CommentWordCount": 135,
    "LineCount": 191,
    "SourceLineCount": 130,
    "FunctionCount": 5,
    "TypeCount": 0,
    "ConstantCount": 0,
    "VariableCount": 0,
    "Statistics": {
        "Mean": 0.98,
        "StdDev": 0.04,
        "GeometricMean": 0.9791,
        "HarmonicMean": 0.9783,
        "Median": 1,
        "Minimum": 0.9,
        "Maximum": 1
    },
    "Files": [
        {
            "Name": "timeutil.go",
            "Imports": [
                {
                    "PackageName": "fmt",
                    "Alias": "fmt"
                },
                {
                    "PackageName": "strings",
                    "Alias": "strings"
                },
                {
                    "PackageName": "time",
                    "Alias": "time"
                },
                {
                    "PackageName": "github.com/ghetzel/go-stockutil/utils",
                    "Alias": "utils"
                }
            ],
            "Size": 1592,
            "LineCount": 59,
            "SourceLineCount": 34,
            "FunctionCount": 5,
            "TypeCount": 0,
            "ConstantCount": 0,
            "VariableCount": 0
        },
        {
            "Name": "timeutil_test.go",
            "Imports": [
                {
                    "PackageName": "fmt",
                    "Alias": "fmt"
                },
                {
                    "PackageName": "testing",
                    "Alias": "testing"
                },
                {
                    "PackageName": "time",
                    "Alias": "time"
                },
                {
                    "PackageName": "github.com/ghetzel/testify/require",
                    "Alias": "require"
                }
            ],
            "Size": 2803,
            "LineCount": 132,
            "SourceLineCount": 96,
            "FunctionCount": 0,
            "TypeCount": 0,
            "ConstantCount": 0,
            "VariableCount": 0
        }
    ],
    "Functions": [
        {
            "Name": "DurationHMS",
            "Comment": "Extracts the hours, minutes, and seconds from the given duration.",
            "Arguments": [
                {
                    "Name": "d",
                    "Type": "time.Duration"
                }
            ],
            "Returns": [
                {
                    "Type": "int"
                },
                {
                    "Type": "int"
                },
                {
                    "Type": "int"
                }
            ],
            "Signature": "DurationHMS(d time.Duration) (int, int, int)",
            "Source": "ewoJZCA9IGQuUm91bmQodGltZS5TZWNvbmQpCgl2YXIgaCA9IGQgLyB0aW1lLkhvdXIKCWQgLT0gaCAqIHRpbWUuSG91cgoJdmFyIG0gPSBkIC8gdGltZS5NaW51dGUKCWQgLT0gbSAqIHRpbWUuTWludXRlCgl2YXIgcyA9IGQgLyB0aW1lLlNlY29uZAoJcmV0dXJuIGludChoKSwgaW50KG0pLCBpbnQocykKfQ==",
            "IsPackageLevel": true
        },
        {
            "Name": "FormatTimer",
            "Comment": "Formats the given duration in a colon-separated timer format in the form\n[HH:]MM:SS.",
            "Arguments": [
                {
                    "Name": "d",
                    "Type": "time.Duration"
                }
            ],
            "Returns": [
                {
                    "Type": "string"
                }
            ],
            "Signature": "FormatTimer(d time.Duration) string",
            "Source": "ewoJaCwgbSwgcyA6PSBEdXJhdGlvbkhNUyhkKQoJdmFyIG91dCA9IGZtdC5TcHJpbnRmKCIlMDJkOiUwMmQ6JTAyZCIsIGgsIG0sIHMpCglvdXQgPSBzdHJpbmdzLlRyaW1QcmVmaXgob3V0LCBgMDA6YCkKCW91dCA9IHN0cmluZ3MuVHJpbVByZWZpeChvdXQsIGAwYCkKCXJldHVybiBvdXQKfQ==",
            "IsPackageLevel": true
        },
        {
            "Name": "FormatTimerf",
            "Comment": "Formats the given duration using the given format string.  The string follows\nthe same formatting rules as described in the fmt package, and will receive\nthree integer arguments: hours, minutes, and seconds.",
            "Arguments": [
                {
                    "Name": "format",
                    "Type": "string"
                },
                {
                    "Name": "d",
                    "Type": "time.Duration"
                }
            ],
            "Returns": [
                {
                    "Type": "string"
                }
            ],
            "Signature": "FormatTimerf(format string, d time.Duration) string",
            "Source": "ewoJaCwgbSwgcyA6PSBEdXJhdGlvbkhNUyhkKQoJdmFyIG91dCA9IGZtdC5TcHJpbnRmKGZvcm1hdCwgaCwgbSwgcykKCXJldHVybiBvdXQKfQ==",
            "IsPackageLevel": true
        },
        {
            "Name": "ParseDuration",
            "Comment": "Provides an API-compatible version of time.ParseDuration that accepts additional\nformats for parsing durations:\n\n\t1y, 3year, 5years: Expands to (n*24*365) hours\n\t1w, 3weeks, 5wks:  Expands to (n*24*7) hours\n\t1d, 1day, 5days:   Expands to (n*24) hours",
            "Arguments": [
                {
                    "Name": "in",
                    "Type": "string"
                }
            ],
            "Returns": [
                {
                    "Type": "time.Duration"
                },
                {
                    "Type": "error"
                }
            ],
            "Signature": "ParseDuration(in string) (time.Duration, error)",
            "Source": "ewoJcmV0dXJuIHV0aWxzLlBhcnNlRHVyYXRpb24oaW4pCn0=",
            "IsPackageLevel": true
        },
        {
            "Name": "ReferenceTime",
            "Comment": "Return the standard Golang reference time (2006-01-02T15:04:05.999999999Z07:00)",
            "Returns": [
                {
                    "Type": "time.Time"
                }
            ],
            "Signature": "ReferenceTime() time.Time",
            "Source": "ewoJcmV0dXJuIHV0aWxzLlJlZmVyZW5jZVRpbWUKfQ==",
            "IsPackageLevel": true
        }
    ],
    "Examples": [
        {
            "Name": "ExampleFormatTimer_complete",
            "Label": "Complete",
            "For": "FormatTimer",
            "Signature": "ExampleFormatTimer_complete()",
            "Source": "ewoJZm10LlByaW50KEZvcm1hdFRpbWVyKDIzKnRpbWUuSG91ciArIDQqdGltZS5NaW51dGUgKyAxMyp0aW1lLlNlY29uZCkpCn0=",
            "IsPackageLevel": true
        },
        {
            "Name": "ExampleFormatTimer_oneHour",
            "Label": "OneHour",
            "For": "FormatTimer",
            "Signature": "ExampleFormatTimer_oneHour()",
            "Source": "ewoJZm10LlByaW50KEZvcm1hdFRpbWVyKHRpbWUuSG91cikpCn0=",
            "IsPackageLevel": true
        },
        {
            "Name": "ExampleFormatTimer_oneMinute",
            "Label": "OneMinute",
            "For": "FormatTimer",
            "Signature": "ExampleFormatTimer_oneMinute()",
            "Source": "ewoJZm10LlByaW50KEZvcm1hdFRpbWVyKHRpbWUuTWludXRlKSkKfQ==",
            "IsPackageLevel": true
        },
        {
            "Name": "ExampleFormatTimer_oneSecond",
            "Label": "OneSecond",
            "For": "FormatTimer",
            "Signature": "ExampleFormatTimer_oneSecond()",
            "Source": "ewoJZm10LlByaW50KEZvcm1hdFRpbWVyKHRpbWUuU2Vjb25kKSkKfQ==",
            "IsPackageLevel": true
        },
        {
            "Name": "ExampleFormatTimer_overOneMinute",
            "Label": "OverOneMinute",
            "For": "FormatTimer",
            "Signature": "ExampleFormatTimer_overOneMinute()",
            "Source": "ewoJZm10LlByaW50KEZvcm1hdFRpbWVyKDExOSAqIHRpbWUuU2Vjb25kKSkKfQ==",
            "IsPackageLevel": true
        },
        {
            "Name": "ExampleFormatTimer_underOneMinute",
            "Label": "UnderOneMinute",
            "For": "FormatTimer",
            "Signature": "ExampleFormatTimer_underOneMinute()",
            "Source": "ewoJZm10LlByaW50KEZvcm1hdFRpbWVyKDU5ICogdGltZS5TZWNvbmQpKQp9",
            "IsPackageLevel": true
        },
        {
            "Name": "ExampleFormatTimer_zeroValue",
            "Label": "ZeroValue",
            "For": "FormatTimer",
            "Signature": "ExampleFormatTimer_zeroValue()",
            "Source": "ewoJZm10LlByaW50KEZvcm1hdFRpbWVyKDApKQp9",
            "IsPackageLevel": true
        }
    ],
    "Tests": [
        {
            "Name": "TestDurationHMS",
            "Arguments": [
                {
                    "Name": "t",
                    "Type": "*testing.T"
                }
            ],
            "Signature": "TestDurationHMS(t *testing.T)",
            "Source": "ewoJdmFyIGFzc2VydCA9IHJlcXVpcmUuTmV3KHQpCgloLCBtLCBzIDo9IER1cmF0aW9uSE1TKDApCglhc3NlcnQuRXF1YWwoMCwgaCkKCWFzc2VydC5FcXVhbCgwLCBtKQoJYXNzZXJ0LkVxdWFsKDAsIHMpCgloLCBtLCBzID0gRHVyYXRpb25ITVModGltZS5TZWNvbmQpCglhc3NlcnQuRXF1YWwoMCwgaCkKCWFzc2VydC5FcXVhbCgwLCBtKQoJYXNzZXJ0LkVxdWFsKDEsIHMpCgloLCBtLCBzID0gRHVyYXRpb25ITVModGltZS5NaW51dGUpCglhc3NlcnQuRXF1YWwoMCwgaCkKCWFzc2VydC5FcXVhbCgxLCBtKQoJYXNzZXJ0LkVxdWFsKDAsIHMpCgloLCBtLCBzID0gRHVyYXRpb25ITVModGltZS5Ib3VyKQoJYXNzZXJ0LkVxdWFsKDEsIGgpCglhc3NlcnQuRXF1YWwoMCwgbSkKCWFzc2VydC5FcXVhbCgwLCBzKQoJaCwgbSwgcyA9IER1cmF0aW9uSE1TKDU5ICogdGltZS5TZWNvbmQpCglhc3NlcnQuRXF1YWwoMCwgaCkKCWFzc2VydC5FcXVhbCgwLCBtKQoJYXNzZXJ0LkVxdWFsKDU5LCBzKQoJaCwgbSwgcyA9IER1cmF0aW9uSE1TKDExOSAqIHRpbWUuU2Vjb25kKQoJYXNzZXJ0LkVxdWFsKDAsIGgpCglhc3NlcnQuRXF1YWwoMSwgbSkKCWFzc2VydC5FcXVhbCg1OSwgcykKCWgsIG0sIHMgPSBEdXJhdGlvbkhNUygyMyp0aW1lLkhvdXIgKyA0KnRpbWUuTWludXRlICsgMTMqdGltZS5TZWNvbmQpCglhc3NlcnQuRXF1YWwoMjMsIGgpCglhc3NlcnQuRXF1YWwoNCwgbSkKCWFzc2VydC5FcXVhbCgxMywgcykKfQ==",
            "IsPackageLevel": true
        },
        {
            "Name": "TestFormatTimer",
            "Arguments": [
                {
                    "Name": "t",
                    "Type": "*testing.T"
                }
            ],
            "Signature": "TestFormatTimer(t *testing.T)",
            "Source": "ewoJdmFyIGFzc2VydCA9IHJlcXVpcmUuTmV3KHQpCgl2YXIgb3V0ID0gRm9ybWF0VGltZXIoMCkKCWFzc2VydC5FcXVhbChgMDowMGAsIG91dCkKCW91dCA9IEZvcm1hdFRpbWVyKHRpbWUuU2Vjb25kKQoJYXNzZXJ0LkVxdWFsKGAwOjAxYCwgb3V0KQoJb3V0ID0gRm9ybWF0VGltZXIodGltZS5NaW51dGUpCglhc3NlcnQuRXF1YWwoYDE6MDBgLCBvdXQpCglvdXQgPSBGb3JtYXRUaW1lcih0aW1lLkhvdXIpCglhc3NlcnQuRXF1YWwoYDE6MDA6MDBgLCBvdXQpCglvdXQgPSBGb3JtYXRUaW1lcig1OSAqIHRpbWUuU2Vjb25kKQoJYXNzZXJ0LkVxdWFsKGAwOjU5YCwgb3V0KQoJb3V0ID0gRm9ybWF0VGltZXIoMTE5ICogdGltZS5TZWNvbmQpCglhc3NlcnQuRXF1YWwoYDE6NTlgLCBvdXQpCglvdXQgPSBGb3JtYXRUaW1lcigyMyp0aW1lLkhvdXIgKyA0KnRpbWUuTWludXRlICsgMTMqdGltZS5TZWNvbmQpCglhc3NlcnQuRXF1YWwoYDIzOjA0OjEzYCwgb3V0KQp9",
            "IsPackageLevel": true
        },
        {
            "Name": "TestParseDuration",
            "Arguments": [
                {
                    "Name": "t",
                    "Type": "*testing.T"
                }
            ],
            "Signature": "TestParseDuration(t *testing.T)",
            "Source": "ewoJdmFyIGFzc2VydCA9IHJlcXVpcmUuTmV3KHQpCgl2LCBlcnIgOj0gUGFyc2VEdXJhdGlvbihgYCkKCWFzc2VydC5Ob0Vycm9yKGVycikKCWFzc2VydC5aZXJvKHYpCglmb3IgaW4sIG91dCA6PSByYW5nZSBtYXBbc3RyaW5nXXRpbWUuRHVyYXRpb257YDRoYDogdGltZS5EdXJhdGlvbig0ICogdGltZS5Ib3VyKSwgYDRIYDogdGltZS5EdXJhdGlvbig0ICogdGltZS5Ib3VyKSwgYDFkYDogdGltZS5EdXJhdGlvbigyNCAqIHRpbWUuSG91ciksIGAxZGF5YDogdGltZS5EdXJhdGlvbigyNCAqIHRpbWUuSG91ciksIGAxZGF5c2A6IHRpbWUuRHVyYXRpb24oMjQgKiB0aW1lLkhvdXIpLCBgNSB5ZWFycyA0IHdlZWtzIDMgZGF5cyAyIGhvdXJzIDEgbWludXRlYDogdGltZS5EdXJhdGlvbig0NDU0Nip0aW1lLkhvdXIpICsgdGltZS5NaW51dGUsIGAxZDFoYDogdGltZS5EdXJhdGlvbigyNSAqIHRpbWUuSG91ciksIGAxZCAxaGA6IHRpbWUuRHVyYXRpb24oMjUgKiB0aW1lLkhvdXIpfSB7CgkJdiwgZXJyIDo9IFBhcnNlRHVyYXRpb24oaW4pCgkJYXNzZXJ0Lk5vRXJyb3IoZXJyKQoJCWFzc2VydC5FcXVhbChvdXQsIHYsIGZtdC5TcHJpbnRmKCJpbj0ldiIsIGluKSkKCX0KfQ==",
            "IsPackageLevel": true
        }
    ]
}
