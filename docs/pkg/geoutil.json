{
    "Name": "geoutil",
    "CanonicalImportPath": "github.com/ghetzel/go-stockutil/geoutil",
    "ImportPath": "geoutil",
    "ParentPackage": "stockutil",
    "URL": "https://github.com/ghetzel/go-stockutil",
    "Synopsis": "Types and functions for working with Geospatial Data\n",
    "MainFunction": false,
    "CommentWordCount": 135,
    "LineCount": 2586,
    "SourceLineCount": 2453,
    "FunctionCount": 29,
    "TypeCount": 9,
    "ConstantCount": 286,
    "VariableCount": 3,
    "Statistics": {
        "Mean": 0.0632,
        "StdDev": 0.2328,
        "GeometricMean": 0,
        "HarmonicMean": 0,
        "Median": 0,
        "Minimum": 0,
        "Maximum": 1
    },
    "Files": [
        {
            "Name": "coordinates.go",
            "Imports": [
                {
                    "PackageName": "encoding/json",
                    "Alias": "json"
                },
                {
                    "PackageName": "fmt",
                    "Alias": "fmt"
                },
                {
                    "PackageName": "strings",
                    "Alias": "strings"
                },
                {
                    "PackageName": "time",
                    "Alias": "time"
                },
                {
                    "PackageName": "github.com/ghetzel/go-stockutil/maputil",
                    "Alias": "maputil"
                },
                {
                    "PackageName": "github.com/kellydunn/golang-geo",
                    "Alias": "geo"
                }
            ],
            "Size": 4069,
            "LineCount": 157,
            "SourceLineCount": 119,
            "FunctionCount": 10,
            "TypeCount": 3,
            "ConstantCount": 3,
            "VariableCount": 0
        },
        {
            "Name": "countries.go",
            "Imports": [
                {
                    "PackageName": "strings",
                    "Alias": "strings"
                },
                {
                    "PackageName": "github.com/ghetzel/go-stockutil/stringutil",
                    "Alias": "stringutil"
                },
                {
                    "PackageName": "github.com/ghetzel/go-stockutil/typeutil",
                    "Alias": "typeutil"
                }
            ],
            "Size": 46905,
            "LineCount": 2027,
            "SourceLineCount": 2014,
            "FunctionCount": 2,
            "TypeCount": 2,
            "ConstantCount": 262,
            "VariableCount": 1
        },
        {
            "Name": "countries_test.go",
            "Imports": [
                {
                    "PackageName": "testing",
                    "Alias": "testing"
                },
                {
                    "PackageName": "github.com/ghetzel/testify/assert",
                    "Alias": "assert"
                }
            ],
            "Size": 530,
            "LineCount": 18,
            "SourceLineCount": 13,
            "FunctionCount": 0,
            "TypeCount": 0,
            "ConstantCount": 0,
            "VariableCount": 0
        },
        {
            "Name": "direction.go",
            "Size": 948,
            "LineCount": 38,
            "SourceLineCount": 33,
            "FunctionCount": 1,
            "TypeCount": 1,
            "ConstantCount": 8,
            "VariableCount": 0
        },
        {
            "Name": "distance.go",
            "Imports": [
                {
                    "PackageName": "encoding/json",
                    "Alias": "json"
                },
                {
                    "PackageName": "fmt",
                    "Alias": "fmt"
                },
                {
                    "PackageName": "regexp",
                    "Alias": "regexp"
                },
                {
                    "PackageName": "strings",
                    "Alias": "strings"
                },
                {
                    "PackageName": "github.com/ghetzel/go-stockutil/rxutil",
                    "Alias": "rxutil"
                },
                {
                    "PackageName": "github.com/ghetzel/go-stockutil/typeutil",
                    "Alias": "typeutil"
                }
            ],
            "Size": 3585,
            "LineCount": 163,
            "SourceLineCount": 133,
            "FunctionCount": 10,
            "TypeCount": 1,
            "ConstantCount": 6,
            "VariableCount": 1
        },
        {
            "Name": "speed.go",
            "Imports": [
                {
                    "PackageName": "encoding/json",
                    "Alias": "json"
                },
                {
                    "PackageName": "fmt",
                    "Alias": "fmt"
                },
                {
                    "PackageName": "github.com/ghetzel/go-stockutil/typeutil",
                    "Alias": "typeutil"
                }
            ],
            "Size": 1606,
            "LineCount": 89,
            "SourceLineCount": 70,
            "FunctionCount": 6,
            "TypeCount": 1,
            "ConstantCount": 5,
            "VariableCount": 1
        },
        {
            "Name": "types.go",
            "Size": 194,
            "LineCount": 10,
            "SourceLineCount": 6,
            "FunctionCount": 0,
            "TypeCount": 1,
            "ConstantCount": 2,
            "VariableCount": 0
        },
        {
            "Name": "types_test.go",
            "Imports": [
                {
                    "PackageName": "testing",
                    "Alias": "testing"
                },
                {
                    "PackageName": "time",
                    "Alias": "time"
                },
                {
                    "PackageName": "github.com/ghetzel/testify/require",
                    "Alias": "require"
                }
            ],
            "Size": 3268,
            "LineCount": 84,
            "SourceLineCount": 65,
            "FunctionCount": 0,
            "TypeCount": 0,
            "ConstantCount": 0,
            "VariableCount": 0
        }
    ],
    "Constants": [
        {
            "Name": "Afghanistan",
            "Immutable": true,
            "Expression": "`af`",
            "Value": "af"
        },
        {
            "Name": "Albania",
            "Immutable": true,
            "Expression": "`al`",
            "Value": "al"
        },
        {
            "Name": "Algeria",
            "Immutable": true,
            "Expression": "`dz`",
            "Value": "dz"
        },
        {
            "Name": "AmericanSamoa",
            "Immutable": true,
            "Expression": "`as`",
            "Value": "as"
        },
        {
            "Name": "Andorra",
            "Immutable": true,
            "Expression": "`ad`",
            "Value": "ad"
        },
        {
            "Name": "Angola",
            "Immutable": true,
            "Expression": "`ao`",
            "Value": "ao"
        },
        {
            "Name": "Anguilla",
            "Immutable": true,
            "Expression": "`ai`",
            "Value": "ai"
        },
        {
            "Name": "Antarctica",
            "Immutable": true,
            "Expression": "`aq`",
            "Value": "aq"
        },
        {
            "Name": "AntiguaAndBarbuda",
            "Immutable": true,
            "Expression": "`ag`",
            "Value": "ag"
        },
        {
            "Name": "Argentina",
            "Immutable": true,
            "Expression": "`ar`",
            "Value": "ar"
        },
        {
            "Name": "Armenia",
            "Immutable": true,
            "Expression": "`am`",
            "Value": "am"
        },
        {
            "Name": "Aruba",
            "Immutable": true,
            "Expression": "`aw`",
            "Value": "aw"
        },
        {
            "Name": "Australia",
            "Immutable": true,
            "Expression": "`au`",
            "Value": "au"
        },
        {
            "Name": "Austria",
            "Immutable": true,
            "Expression": "`at`",
            "Value": "at"
        },
        {
            "Name": "Azerbaijan",
            "Immutable": true,
            "Expression": "`az`",
            "Value": "az"
        },
        {
            "Name": "Bahamas",
            "Immutable": true,
            "Expression": "`bs`",
            "Value": "bs"
        },
        {
            "Name": "Bahrain",
            "Immutable": true,
            "Expression": "`bh`",
            "Value": "bh"
        },
        {
            "Name": "Bangladesh",
            "Immutable": true,
            "Expression": "`bd`",
            "Value": "bd"
        },
        {
            "Name": "Barbados",
            "Immutable": true,
            "Expression": "`bb`",
            "Value": "bb"
        },
        {
            "Name": "Belarus",
            "Immutable": true,
            "Expression": "`by`",
            "Value": "by"
        },
        {
            "Name": "Belgium",
            "Immutable": true,
            "Expression": "`be`",
            "Value": "be"
        },
        {
            "Name": "Belize",
            "Immutable": true,
            "Expression": "`bz`",
            "Value": "bz"
        },
        {
            "Name": "Benin",
            "Immutable": true,
            "Expression": "`bj`",
            "Value": "bj"
        },
        {
            "Name": "Bermuda",
            "Immutable": true,
            "Expression": "`bm`",
            "Value": "bm"
        },
        {
            "Name": "Bhutan",
            "Immutable": true,
            "Expression": "`bt`",
            "Value": "bt"
        },
        {
            "Name": "Bolivia",
            "Immutable": true,
            "Expression": "`bo`",
            "Value": "bo"
        },
        {
            "Name": "BosniaAndHerzegovina",
            "Immutable": true,
            "Expression": "`ba`",
            "Value": "ba"
        },
        {
            "Name": "Botswana",
            "Immutable": true,
            "Expression": "`bw`",
            "Value": "bw"
        },
        {
            "Name": "BouvetIsland",
            "Immutable": true,
            "Expression": "`bv`",
            "Value": "bv"
        },
        {
            "Name": "Brazil",
            "Immutable": true,
            "Expression": "`br`",
            "Value": "br"
        },
        {
            "Name": "BritishIndianOceanTerritory",
            "Immutable": true,
            "Expression": "`io`",
            "Value": "io"
        },
        {
            "Name": "BritishVirginIslands",
            "Immutable": true,
            "Expression": "`vg`",
            "Value": "vg"
        },
        {
            "Name": "Brunei",
            "Immutable": true,
            "Expression": "`bn`",
            "Value": "bn"
        },
        {
            "Name": "Bulgaria",
            "Immutable": true,
            "Expression": "`bg`",
            "Value": "bg"
        },
        {
            "Name": "BurkinaFaso",
            "Immutable": true,
            "Expression": "`bf`",
            "Value": "bf"
        },
        {
            "Name": "Burma",
            "Immutable": true,
            "Expression": "`mm`",
            "Value": "mm"
        },
        {
            "Name": "Burundi",
            "Immutable": true,
            "Expression": "`bi`",
            "Value": "bi"
        },
        {
            "Name": "Cambodia",
            "Immutable": true,
            "Expression": "`kh`",
            "Value": "kh"
        },
        {
            "Name": "Cameroon",
            "Immutable": true,
            "Expression": "`cm`",
            "Value": "cm"
        },
        {
            "Name": "Canada",
            "Immutable": true,
            "Expression": "`ca`",
            "Value": "ca"
        },
        {
            "Name": "CapeVerde",
            "Immutable": true,
            "Expression": "`cv`",
            "Value": "cv"
        },
        {
            "Name": "CaymanIslands",
            "Immutable": true,
            "Expression": "`ky`",
            "Value": "ky"
        },
        {
            "Name": "CentralAfricanRepublic",
            "Immutable": true,
            "Expression": "`cf`",
            "Value": "cf"
        },
        {
            "Name": "Chad",
            "Immutable": true,
            "Expression": "`td`",
            "Value": "td"
        },
        {
            "Name": "Chile",
            "Immutable": true,
            "Expression": "`cl`",
            "Value": "cl"
        },
        {
            "Name": "China",
            "Immutable": true,
            "Expression": "`cn`",
            "Value": "cn"
        },
        {
            "Name": "ChristmasIsland",
            "Immutable": true,
            "Expression": "`cx`",
            "Value": "cx"
        },
        {
            "Name": "CocosIslands",
            "Immutable": true,
            "Expression": "`cc`",
            "Value": "cc"
        },
        {
            "Name": "Colombia",
            "Immutable": true,
            "Expression": "`co`",
            "Value": "co"
        },
        {
            "Name": "Comoros",
            "Immutable": true,
            "Expression": "`km`",
            "Value": "km"
        },
        {
            "Name": "CongoDRC",
            "Immutable": true,
            "Expression": "`cd`",
            "Value": "cd"
        },
        {
            "Name": "CongoRepublic",
            "Immutable": true,
            "Expression": "`cg`",
            "Value": "cg"
        },
        {
            "Name": "CookIslands",
            "Immutable": true,
            "Expression": "`ck`",
            "Value": "ck"
        },
        {
            "Name": "CostaRica",
            "Immutable": true,
            "Expression": "`cr`",
            "Value": "cr"
        },
        {
            "Name": "CoteDIvoire",
            "Immutable": true,
            "Expression": "`ci`",
            "Value": "ci"
        },
        {
            "Name": "Croatia",
            "Immutable": true,
            "Expression": "`hr`",
            "Value": "hr"
        },
        {
            "Name": "Cuba",
            "Immutable": true,
            "Expression": "`cu`",
            "Value": "cu"
        },
        {
            "Name": "Cyprus",
            "Immutable": true,
            "Expression": "`cy`",
            "Value": "cy"
        },
        {
            "Name": "CzechRepublic",
            "Immutable": true,
            "Expression": "`cz`",
            "Value": "cz"
        },
        {
            "Name": "CôtedIvoire",
            "Immutable": true,
            "Expression": "`ci`",
            "Value": "ci"
        },
        {
            "Name": "Denmark",
            "Immutable": true,
            "Expression": "`dk`",
            "Value": "dk"
        },
        {
            "Name": "Djibouti",
            "Immutable": true,
            "Expression": "`dj`",
            "Value": "dj"
        },
        {
            "Name": "Dominica",
            "Immutable": true,
            "Expression": "`dm`",
            "Value": "dm"
        },
        {
            "Name": "DominicanRepublic",
            "Immutable": true,
            "Expression": "`do`",
            "Value": "do"
        },
        {
            "Name": "EarthKarmanHeight",
            "Type": "Distance",
            "Immutable": true,
            "Expression": "100 * Kilometer"
        },
        {
            "Name": "EarthRadius",
            "Type": "Distance",
            "Immutable": true,
            "Expression": "geo.EARTH_RADIUS * Kilometer"
        },
        {
            "Name": "EarthStratosphereHeight",
            "Type": "Distance",
            "Immutable": true,
            "Expression": "60 * Kilometer"
        },
        {
            "Name": "East",
            "Immutable": true,
            "Expression": "`E`",
            "Value": "E"
        },
        {
            "Name": "Ecuador",
            "Immutable": true,
            "Expression": "`ec`",
            "Value": "ec"
        },
        {
            "Name": "Egypt",
            "Immutable": true,
            "Expression": "`eg`",
            "Value": "eg"
        },
        {
            "Name": "ElSalvador",
            "Immutable": true,
            "Expression": "`sv`",
            "Value": "sv"
        },
        {
            "Name": "EquatorialGuinea",
            "Immutable": true,
            "Expression": "`gq`",
            "Value": "gq"
        },
        {
            "Name": "Eritrea",
            "Immutable": true,
            "Expression": "`er`",
            "Value": "er"
        },
        {
            "Name": "Estonia",
            "Immutable": true,
            "Expression": "`ee`",
            "Value": "ee"
        },
        {
            "Name": "Ethiopia",
            "Immutable": true,
            "Expression": "`et`",
            "Value": "et"
        },
        {
            "Name": "FalklandIslands",
            "Immutable": true,
            "Expression": "`fk`",
            "Value": "fk"
        },
        {
            "Name": "FaroeIslands",
            "Immutable": true,
            "Expression": "`fo`",
            "Value": "fo"
        },
        {
            "Name": "FeetPerSecond",
            "Immutable": true,
            "Expression": "0.3048"
        },
        {
            "Name": "Fiji",
            "Immutable": true,
            "Expression": "`fj`",
            "Value": "fj"
        },
        {
            "Name": "Finland",
            "Immutable": true,
            "Expression": "`fi`",
            "Value": "fi"
        },
        {
            "Name": "Foot",
            "Immutable": true,
            "Expression": "0.3048"
        },
        {
            "Name": "France",
            "Immutable": true,
            "Expression": "`fr`",
            "Value": "fr"
        },
        {
            "Name": "FrenchGuiana",
            "Immutable": true,
            "Expression": "`gf`",
            "Value": "gf"
        },
        {
            "Name": "FrenchPolynesia",
            "Immutable": true,
            "Expression": "`pf`",
            "Value": "pf"
        },
        {
            "Name": "FrenchSouthernTerritories",
            "Immutable": true,
            "Expression": "`tf`",
            "Value": "tf"
        },
        {
            "Name": "Gabon",
            "Immutable": true,
            "Expression": "`ga`",
            "Value": "ga"
        },
        {
            "Name": "Gambia",
            "Immutable": true,
            "Expression": "`gm`",
            "Value": "gm"
        },
        {
            "Name": "GazaStrip",
            "Immutable": true,
            "Expression": "`gz`",
            "Value": "gz"
        },
        {
            "Name": "Georgia",
            "Immutable": true,
            "Expression": "`ge`",
            "Value": "ge"
        },
        {
            "Name": "Germany",
            "Immutable": true,
            "Expression": "`de`",
            "Value": "de"
        },
        {
            "Name": "Ghana",
            "Immutable": true,
            "Expression": "`gh`",
            "Value": "gh"
        },
        {
            "Name": "Gibraltar",
            "Immutable": true,
            "Expression": "`gi`",
            "Value": "gi"
        },
        {
            "Name": "GreatBritain",
            "Immutable": true,
            "Expression": "`gb`",
            "Value": "gb"
        },
        {
            "Name": "Greece",
            "Immutable": true,
            "Expression": "`gr`",
            "Value": "gr"
        },
        {
            "Name": "Greenland",
            "Immutable": true,
            "Expression": "`gl`",
            "Value": "gl"
        },
        {
            "Name": "Grenada",
            "Immutable": true,
            "Expression": "`gd`",
            "Value": "gd"
        },
        {
            "Name": "Guadeloupe",
            "Immutable": true,
            "Expression": "`gp`",
            "Value": "gp"
        },
        {
            "Name": "Guam",
            "Immutable": true,
            "Expression": "`gu`",
            "Value": "gu"
        },
        {
            "Name": "Guatemala",
            "Immutable": true,
            "Expression": "`gt`",
            "Value": "gt"
        },
        {
            "Name": "Guernsey",
            "Immutable": true,
            "Expression": "`gg`",
            "Value": "gg"
        },
        {
            "Name": "Guinea",
            "Immutable": true,
            "Expression": "`gn`",
            "Value": "gn"
        },
        {
            "Name": "GuineaBissau",
            "Immutable": true,
            "Expression": "`gw`",
            "Value": "gw"
        },
        {
            "Name": "Guyana",
            "Immutable": true,
            "Expression": "`gy`",
            "Value": "gy"
        },
        {
            "Name": "Haiti",
            "Immutable": true,
            "Expression": "`ht`",
            "Value": "ht"
        },
        {
            "Name": "HeardIslandAndMcDonaldIslands",
            "Immutable": true,
            "Expression": "`hm`",
            "Value": "hm"
        },
        {
            "Name": "Honduras",
            "Immutable": true,
            "Expression": "`hn`",
            "Value": "hn"
        },
        {
            "Name": "HongKong",
            "Immutable": true,
            "Expression": "`hk`",
            "Value": "hk"
        },
        {
            "Name": "Hungary",
            "Immutable": true,
            "Expression": "`hu`",
            "Value": "hu"
        },
        {
            "Name": "Iceland",
            "Immutable": true,
            "Expression": "`is`",
            "Value": "is"
        },
        {
            "Name": "Imperial",
            "Immutable": true,
            "Expression": "`imperial`",
            "Value": "imperial"
        },
        {
            "Name": "India",
            "Immutable": true,
            "Expression": "`in`",
            "Value": "in"
        },
        {
            "Name": "Indonesia",
            "Immutable": true,
            "Expression": "`id`",
            "Value": "id"
        },
        {
            "Name": "Iran",
            "Immutable": true,
            "Expression": "`ir`",
            "Value": "ir"
        },
        {
            "Name": "Iraq",
            "Immutable": true,
            "Expression": "`iq`",
            "Value": "iq"
        },
        {
            "Name": "Ireland",
            "Immutable": true,
            "Expression": "`ie`",
            "Value": "ie"
        },
        {
            "Name": "IslasMalvinas",
            "Immutable": true,
            "Expression": "`fk`",
            "Value": "fk"
        },
        {
            "Name": "IsleOfMan",
            "Immutable": true,
            "Expression": "`im`",
            "Value": "im"
        },
        {
            "Name": "Israel",
            "Immutable": true,
            "Expression": "`il`",
            "Value": "il"
        },
        {
            "Name": "Italy",
            "Immutable": true,
            "Expression": "`it`",
            "Value": "it"
        },
        {
            "Name": "Jamaica",
            "Immutable": true,
            "Expression": "`jm`",
            "Value": "jm"
        },
        {
            "Name": "JanMayen",
            "Immutable": true,
            "Expression": "`sj`",
            "Value": "sj"
        },
        {
            "Name": "Japan",
            "Immutable": true,
            "Expression": "`jp`",
            "Value": "jp"
        },
        {
            "Name": "Jersey",
            "Immutable": true,
            "Expression": "`je`",
            "Value": "je"
        },
        {
            "Name": "Jordan",
            "Immutable": true,
            "Expression": "`jo`",
            "Value": "jo"
        },
        {
            "Name": "KPH",
            "Immutable": true,
            "Expression": "0.277778"
        },
        {
            "Name": "Kazakhstan",
            "Immutable": true,
            "Expression": "`kz`",
            "Value": "kz"
        },
        {
            "Name": "Kenya",
            "Immutable": true,
            "Expression": "`ke`",
            "Value": "ke"
        },
        {
            "Name": "Kilometer",
            "Immutable": true,
            "Expression": "1000"
        },
        {
            "Name": "Kiribati",
            "Immutable": true,
            "Expression": "`ki`",
            "Value": "ki"
        },
        {
            "Name": "Kosovo",
            "Immutable": true,
            "Expression": "`xk`",
            "Value": "xk"
        },
        {
            "Name": "Kuwait",
            "Immutable": true,
            "Expression": "`kw`",
            "Value": "kw"
        },
        {
            "Name": "Kyrgyzstan",
            "Immutable": true,
            "Expression": "`kg`",
            "Value": "kg"
        },
        {
            "Name": "Laos",
            "Immutable": true,
            "Expression": "`la`",
            "Value": "la"
        },
        {
            "Name": "Latvia",
            "Immutable": true,
            "Expression": "`lv`",
            "Value": "lv"
        },
        {
            "Name": "Lebanon",
            "Immutable": true,
            "Expression": "`lb`",
            "Value": "lb"
        },
        {
            "Name": "Lesotho",
            "Immutable": true,
            "Expression": "`ls`",
            "Value": "ls"
        },
        {
            "Name": "Liberia",
            "Immutable": true,
            "Expression": "`lr`",
            "Value": "lr"
        },
        {
            "Name": "Libya",
            "Immutable": true,
            "Expression": "`ly`",
            "Value": "ly"
        },
        {
            "Name": "Liechtenstein",
            "Immutable": true,
            "Expression": "`li`",
            "Value": "li"
        },
        {
            "Name": "Lithuania",
            "Immutable": true,
            "Expression": "`lt`",
            "Value": "lt"
        },
        {
            "Name": "Luxembourg",
            "Immutable": true,
            "Expression": "`lu`",
            "Value": "lu"
        },
        {
            "Name": "MPH",
            "Immutable": true,
            "Expression": "0.44704"
        },
        {
            "Name": "Macau",
            "Immutable": true,
            "Expression": "`mo`",
            "Value": "mo"
        },
        {
            "Name": "Macedonia",
            "Immutable": true,
            "Expression": "`mk`",
            "Value": "mk"
        },
        {
            "Name": "Mach",
            "Immutable": true,
            "Expression": "340.29"
        },
        {
            "Name": "Madagascar",
            "Immutable": true,
            "Expression": "`mg`",
            "Value": "mg"
        },
        {
            "Name": "Malawi",
            "Immutable": true,
            "Expression": "`mw`",
            "Value": "mw"
        },
        {
            "Name": "Malaysia",
            "Immutable": true,
            "Expression": "`my`",
            "Value": "my"
        },
        {
            "Name": "Maldives",
            "Immutable": true,
            "Expression": "`mv`",
            "Value": "mv"
        },
        {
            "Name": "Mali",
            "Immutable": true,
            "Expression": "`ml`",
            "Value": "ml"
        },
        {
            "Name": "Malta",
            "Immutable": true,
            "Expression": "`mt`",
            "Value": "mt"
        },
        {
            "Name": "MarshallIslands",
            "Immutable": true,
            "Expression": "`mh`",
            "Value": "mh"
        },
        {
            "Name": "Martinique",
            "Immutable": true,
            "Expression": "`mq`",
            "Value": "mq"
        },
        {
            "Name": "Mauritania",
            "Immutable": true,
            "Expression": "`mr`",
            "Value": "mr"
        },
        {
            "Name": "Mauritius",
            "Immutable": true,
            "Expression": "`mu`",
            "Value": "mu"
        },
        {
            "Name": "Mayotte",
            "Immutable": true,
            "Expression": "`yt`",
            "Value": "yt"
        },
        {
            "Name": "Meter",
            "Immutable": true,
            "Expression": "1"
        },
        {
            "Name": "MetersPerSecond",
            "Immutable": true,
            "Expression": "1"
        },
        {
            "Name": "Metric",
            "Type": "MeasurementSystem",
            "Immutable": true,
            "Expression": "`metric`",
            "Value": "metric"
        },
        {
            "Name": "Mexico",
            "Immutable": true,
            "Expression": "`mx`",
            "Value": "mx"
        },
        {
            "Name": "Micronesia",
            "Immutable": true,
            "Expression": "`fm`",
            "Value": "fm"
        },
        {
            "Name": "Mile",
            "Immutable": true,
            "Expression": "1609.344"
        },
        {
            "Name": "Miquelon",
            "Immutable": true,
            "Expression": "`pm`",
            "Value": "pm"
        },
        {
            "Name": "Moldova",
            "Immutable": true,
            "Expression": "`md`",
            "Value": "md"
        },
        {
            "Name": "Monaco",
            "Immutable": true,
            "Expression": "`mc`",
            "Value": "mc"
        },
        {
            "Name": "Mongolia",
            "Immutable": true,
            "Expression": "`mn`",
            "Value": "mn"
        },
        {
            "Name": "Montenegro",
            "Immutable": true,
            "Expression": "`me`",
            "Value": "me"
        },
        {
            "Name": "Montserrat",
            "Immutable": true,
            "Expression": "`ms`",
            "Value": "ms"
        },
        {
            "Name": "Morocco",
            "Immutable": true,
            "Expression": "`ma`",
            "Value": "ma"
        },
        {
            "Name": "Mozambique",
            "Immutable": true,
            "Expression": "`mz`",
            "Value": "mz"
        },
        {
            "Name": "Myanmar",
            "Immutable": true,
            "Expression": "`mm`",
            "Value": "mm"
        },
        {
            "Name": "Namibia",
            "Immutable": true,
            "Expression": "`na`",
            "Value": "na"
        },
        {
            "Name": "Nauru",
            "Immutable": true,
            "Expression": "`nr`",
            "Value": "nr"
        },
        {
            "Name": "NauticalMile",
            "Immutable": true,
            "Expression": "1852"
        },
        {
            "Name": "Nepal",
            "Immutable": true,
            "Expression": "`np`",
            "Value": "np"
        },
        {
            "Name": "Netherlands",
            "Immutable": true,
            "Expression": "`nl`",
            "Value": "nl"
        },
        {
            "Name": "NetherlandsAntilles",
            "Immutable": true,
            "Expression": "`an`",
            "Value": "an"
        },
        {
            "Name": "NewCaledonia",
            "Immutable": true,
            "Expression": "`nc`",
            "Value": "nc"
        },
        {
            "Name": "NewZealand",
            "Immutable": true,
            "Expression": "`nz`",
            "Value": "nz"
        },
        {
            "Name": "Nicaragua",
            "Immutable": true,
            "Expression": "`ni`",
            "Value": "ni"
        },
        {
            "Name": "Niger",
            "Immutable": true,
            "Expression": "`ne`",
            "Value": "ne"
        },
        {
            "Name": "Nigeria",
            "Immutable": true,
            "Expression": "`ng`",
            "Value": "ng"
        },
        {
            "Name": "Niue",
            "Immutable": true,
            "Expression": "`nu`",
            "Value": "nu"
        },
        {
            "Name": "NorfolkIsland",
            "Immutable": true,
            "Expression": "`nf`",
            "Value": "nf"
        },
        {
            "Name": "North",
            "Type": "CardinalDirection",
            "Immutable": true,
            "Expression": "`N`",
            "Value": "N"
        },
        {
            "Name": "NorthEast",
            "Immutable": true,
            "Expression": "`NE`",
            "Value": "NE"
        },
        {
            "Name": "NorthKorea",
            "Immutable": true,
            "Expression": "`kp`",
            "Value": "kp"
        },
        {
            "Name": "NorthWest",
            "Immutable": true,
            "Expression": "`NW`",
            "Value": "NW"
        },
        {
            "Name": "NorthernMarianaIslands",
            "Immutable": true,
            "Expression": "`mp`",
            "Value": "mp"
        },
        {
            "Name": "Norway",
            "Immutable": true,
            "Expression": "`no`",
            "Value": "no"
        },
        {
            "Name": "Oman",
            "Immutable": true,
            "Expression": "`om`",
            "Value": "om"
        },
        {
            "Name": "Pakistan",
            "Immutable": true,
            "Expression": "`pk`",
            "Value": "pk"
        },
        {
            "Name": "Palau",
            "Immutable": true,
            "Expression": "`pw`",
            "Value": "pw"
        },
        {
            "Name": "Palestine",
            "Immutable": true,
            "Expression": "`ps`",
            "Value": "ps"
        },
        {
            "Name": "Panama",
            "Immutable": true,
            "Expression": "`pa`",
            "Value": "pa"
        },
        {
            "Name": "PapuaNewGuinea",
            "Immutable": true,
            "Expression": "`pg`",
            "Value": "pg"
        },
        {
            "Name": "Paraguay",
            "Immutable": true,
            "Expression": "`py`",
            "Value": "py"
        },
        {
            "Name": "Peru",
            "Immutable": true,
            "Expression": "`pe`",
            "Value": "pe"
        },
        {
            "Name": "Philippines",
            "Immutable": true,
            "Expression": "`ph`",
            "Value": "ph"
        },
        {
            "Name": "PitcairnIslands",
            "Immutable": true,
            "Expression": "`pn`",
            "Value": "pn"
        },
        {
            "Name": "Poland",
            "Immutable": true,
            "Expression": "`pl`",
            "Value": "pl"
        },
        {
            "Name": "Portugal",
            "Immutable": true,
            "Expression": "`pt`",
            "Value": "pt"
        },
        {
            "Name": "PuertoRico",
            "Immutable": true,
            "Expression": "`pr`",
            "Value": "pr"
        },
        {
            "Name": "Qatar",
            "Immutable": true,
            "Expression": "`qa`",
            "Value": "qa"
        },
        {
            "Name": "Reunion",
            "Immutable": true,
            "Expression": "`re`",
            "Value": "re"
        },
        {
            "Name": "Romania",
            "Immutable": true,
            "Expression": "`ro`",
            "Value": "ro"
        },
        {
            "Name": "Russia",
            "Immutable": true,
            "Expression": "`ru`",
            "Value": "ru"
        },
        {
            "Name": "Rwanda",
            "Immutable": true,
            "Expression": "`rw`",
            "Value": "rw"
        },
        {
            "Name": "Réunion",
            "Immutable": true,
            "Expression": "`re`",
            "Value": "re"
        },
        {
            "Name": "SaintHelena",
            "Immutable": true,
            "Expression": "`sh`",
            "Value": "sh"
        },
        {
            "Name": "SaintKittsAndNevis",
            "Immutable": true,
            "Expression": "`kn`",
            "Value": "kn"
        },
        {
            "Name": "SaintLucia",
            "Immutable": true,
            "Expression": "`lc`",
            "Value": "lc"
        },
        {
            "Name": "SaintPierre",
            "Immutable": true,
            "Expression": "`pm`",
            "Value": "pm"
        },
        {
            "Name": "SaintPierreAndMiquelon",
            "Immutable": true,
            "Expression": "`pm`",
            "Value": "pm"
        },
        {
            "Name": "SaintVincent",
            "Immutable": true,
            "Expression": "`vc`",
            "Value": "vc"
        },
        {
            "Name": "SaintVincentAndTheGrenadines",
            "Immutable": true,
            "Expression": "`vc`",
            "Value": "vc"
        },
        {
            "Name": "Samoa",
            "Immutable": true,
            "Expression": "`ws`",
            "Value": "ws"
        },
        {
            "Name": "SanMarino",
            "Immutable": true,
            "Expression": "`sm`",
            "Value": "sm"
        },
        {
            "Name": "SaoTomeAndPrincipe",
            "Immutable": true,
            "Expression": "`st`",
            "Value": "st"
        },
        {
            "Name": "SaudiArabia",
            "Immutable": true,
            "Expression": "`sa`",
            "Value": "sa"
        },
        {
            "Name": "Senegal",
            "Immutable": true,
            "Expression": "`sn`",
            "Value": "sn"
        },
        {
            "Name": "Serbia",
            "Immutable": true,
            "Expression": "`rs`",
            "Value": "rs"
        },
        {
            "Name": "Seychelles",
            "Immutable": true,
            "Expression": "`sc`",
            "Value": "sc"
        },
        {
            "Name": "SierraLeone",
            "Immutable": true,
            "Expression": "`sl`",
            "Value": "sl"
        },
        {
            "Name": "Singapore",
            "Immutable": true,
            "Expression": "`sg`",
            "Value": "sg"
        },
        {
            "Name": "Slovakia",
            "Immutable": true,
            "Expression": "`sk`",
            "Value": "sk"
        },
        {
            "Name": "Slovenia",
            "Immutable": true,
            "Expression": "`si`",
            "Value": "si"
        },
        {
            "Name": "SolomonIslands",
            "Immutable": true,
            "Expression": "`sb`",
            "Value": "sb"
        },
        {
            "Name": "Somalia",
            "Immutable": true,
            "Expression": "`so`",
            "Value": "so"
        },
        {
            "Name": "South",
            "Immutable": true,
            "Expression": "`S`",
            "Value": "S"
        },
        {
            "Name": "SouthAfrica",
            "Immutable": true,
            "Expression": "`za`",
            "Value": "za"
        },
        {
            "Name": "SouthEast",
            "Immutable": true,
            "Expression": "`SE`",
            "Value": "SE"
        },
        {
            "Name": "SouthGeorgia",
            "Immutable": true,
            "Expression": "`gs`",
            "Value": "gs"
        },
        {
            "Name": "SouthGeorgiaAndTheSouthSandwichIslands",
            "Immutable": true,
            "Expression": "`gs`",
            "Value": "gs"
        },
        {
            "Name": "SouthKorea",
            "Immutable": true,
            "Expression": "`kr`",
            "Value": "kr"
        },
        {
            "Name": "SouthSandwichIslands",
            "Immutable": true,
            "Expression": "`gs`",
            "Value": "gs"
        },
        {
            "Name": "SouthSudan",
            "Immutable": true,
            "Expression": "`ss`",
            "Value": "ss"
        },
        {
            "Name": "SouthWest",
            "Immutable": true,
            "Expression": "`SW`",
            "Value": "SW"
        },
        {
            "Name": "SovietUnion",
            "Immutable": true,
            "Expression": "`su`",
            "Value": "su"
        },
        {
            "Name": "Spain",
            "Immutable": true,
            "Expression": "`es`",
            "Value": "es"
        },
        {
            "Name": "SriLanka",
            "Immutable": true,
            "Expression": "`lk`",
            "Value": "lk"
        },
        {
            "Name": "Sudan",
            "Immutable": true,
            "Expression": "`sd`",
            "Value": "sd"
        },
        {
            "Name": "Suriname",
            "Immutable": true,
            "Expression": "`sr`",
            "Value": "sr"
        },
        {
            "Name": "Svalbard",
            "Immutable": true,
            "Expression": "`sj`",
            "Value": "sj"
        },
        {
            "Name": "SvalbardAndJanMayen",
            "Immutable": true,
            "Expression": "`sj`",
            "Value": "sj"
        },
        {
            "Name": "Swaziland",
            "Immutable": true,
            "Expression": "`sz`",
            "Value": "sz"
        },
        {
            "Name": "Sweden",
            "Immutable": true,
            "Expression": "`se`",
            "Value": "se"
        },
        {
            "Name": "Switzerland",
            "Immutable": true,
            "Expression": "`ch`",
            "Value": "ch"
        },
        {
            "Name": "Syria",
            "Immutable": true,
            "Expression": "`sy`",
            "Value": "sy"
        },
        {
            "Name": "SãoToméAndPríncipe",
            "Immutable": true,
            "Expression": "`st`",
            "Value": "st"
        },
        {
            "Name": "Taiwan",
            "Immutable": true,
            "Expression": "`tw`",
            "Value": "tw"
        },
        {
            "Name": "Tajikistan",
            "Immutable": true,
            "Expression": "`tj`",
            "Value": "tj"
        },
        {
            "Name": "Tanzania",
            "Immutable": true,
            "Expression": "`tz`",
            "Value": "tz"
        },
        {
            "Name": "Thailand",
            "Immutable": true,
            "Expression": "`th`",
            "Value": "th"
        },
        {
            "Name": "TheGrenadines",
            "Immutable": true,
            "Expression": "`vc`",
            "Value": "vc"
        },
        {
            "Name": "TimorLeste",
            "Immutable": true,
            "Expression": "`tl`",
            "Value": "tl"
        },
        {
            "Name": "Togo",
            "Immutable": true,
            "Expression": "`tg`",
            "Value": "tg"
        },
        {
            "Name": "Tokelau",
            "Immutable": true,
            "Expression": "`tk`",
            "Value": "tk"
        },
        {
            "Name": "Tonga",
            "Immutable": true,
            "Expression": "`to`",
            "Value": "to"
        },
        {
            "Name": "TrinidadAndTobago",
            "Immutable": true,
            "Expression": "`tt`",
            "Value": "tt"
        },
        {
            "Name": "Tunisia",
            "Immutable": true,
            "Expression": "`tn`",
            "Value": "tn"
        },
        {
            "Name": "Turkey",
            "Immutable": true,
            "Expression": "`tr`",
            "Value": "tr"
        },
        {
            "Name": "Turkmenistan",
            "Immutable": true,
            "Expression": "`tm`",
            "Value": "tm"
        },
        {
            "Name": "TurksAndCaicosIslands",
            "Immutable": true,
            "Expression": "`tc`",
            "Value": "tc"
        },
        {
            "Name": "Tuvalu",
            "Immutable": true,
            "Expression": "`tv`",
            "Value": "tv"
        },
        {
            "Name": "UK",
            "Immutable": true,
            "Expression": "`gb`",
            "Value": "gb"
        },
        {
            "Name": "Uganda",
            "Immutable": true,
            "Expression": "`ug`",
            "Value": "ug"
        },
        {
            "Name": "Ukraine",
            "Immutable": true,
            "Expression": "`ua`",
            "Value": "ua"
        },
        {
            "Name": "UnitedArabEmirates",
            "Immutable": true,
            "Expression": "`ae`",
            "Value": "ae"
        },
        {
            "Name": "UnitedKingdom",
            "Immutable": true,
            "Expression": "`gb`",
            "Value": "gb"
        },
        {
            "Name": "UnitedStates",
            "Immutable": true,
            "Expression": "`us`",
            "Value": "us"
        },
        {
            "Name": "UnitedStatesMinorOutlyingIslands",
            "Immutable": true,
            "Expression": "`um`",
            "Value": "um"
        },
        {
            "Name": "UnitedStatesVirginIslands",
            "Immutable": true,
            "Expression": "`vi`",
            "Value": "vi"
        },
        {
            "Name": "Uruguay",
            "Immutable": true,
            "Expression": "`uy`",
            "Value": "uy"
        },
        {
            "Name": "Uzbekistan",
            "Immutable": true,
            "Expression": "`uz`",
            "Value": "uz"
        },
        {
            "Name": "Vanuatu",
            "Immutable": true,
            "Expression": "`vu`",
            "Value": "vu"
        },
        {
            "Name": "VaticanCity",
            "Immutable": true,
            "Expression": "`va`",
            "Value": "va"
        },
        {
            "Name": "Venezuela",
            "Immutable": true,
            "Expression": "`ve`",
            "Value": "ve"
        },
        {
            "Name": "Vietnam",
            "Immutable": true,
            "Expression": "`vn`",
            "Value": "vn"
        },
        {
            "Name": "WallisAndFutuna",
            "Immutable": true,
            "Expression": "`wf`",
            "Value": "wf"
        },
        {
            "Name": "West",
            "Immutable": true,
            "Expression": "`W`",
            "Value": "W"
        },
        {
            "Name": "WesternSahara",
            "Immutable": true,
            "Expression": "`eh`",
            "Value": "eh"
        },
        {
            "Name": "Yard",
            "Immutable": true,
            "Expression": "0.9144"
        },
        {
            "Name": "Yemen",
            "Immutable": true,
            "Expression": "`ye`",
            "Value": "ye"
        },
        {
            "Name": "Zambia",
            "Immutable": true,
            "Expression": "`zm`",
            "Value": "zm"
        },
        {
            "Name": "Zimbabwe",
            "Immutable": true,
            "Expression": "`zw`",
            "Value": "zw"
        }
    ],
    "Variables": [
        {
            "Name": "Countries",
            "Comment": "A data structure that exposes standard information about countries of the world, keyed on their ISO3166-1 Alpha2 abbreviation (e.g.: \"us\", \"gb\", \"de\", etc.)"
        },
        {
            "Name": "DistanceDisplayUnit",
            "Expression": "MeasurementSystem(Imperial)"
        },
        {
            "Name": "SpeedDisplayUnit",
            "Expression": "MeasurementSystem(Imperial)"
        }
    ],
    "Tests": [
        {
            "Name": "TestCountriesGet",
            "Arguments": [
                {
                    "Name": "t",
                    "Type": "*testing.T"
                }
            ],
            "Signature": "TestCountriesGet(t *testing.T)",
            "Source": "ewoJYXNzZXJ0LkVxdWFsKHQsIGBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2FgLCBDb3VudHJpZXMuR2V0KFVuaXRlZFN0YXRlcykuTmFtZSkKCWFzc2VydC5FcXVhbCh0LCBgVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhYCwgQ291bnRyaWVzLkdldChgdXNgKS5OYW1lKQoJYXNzZXJ0LkVxdWFsKHQsIGBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2FgLCBDb3VudHJpZXMuR2V0KGBVU2ApLk5hbWUpCglhc3NlcnQuRXF1YWwodCwgYFVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYWAsIENvdW50cmllcy5HZXQoYHVTYCkuTmFtZSkKCWFzc2VydC5FcXVhbCh0LCBgVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhYCwgQ291bnRyaWVzLkdldChgVXNgKS5OYW1lKQoJYXNzZXJ0LkZhbHNlKHQsIENvdW50cmllcy5HZXQoYHp6YCkuSXNWYWxpZCgpKQp9",
            "IsPackageLevel": true
        },
        {
            "Name": "TestLocationSpeedFrom",
            "Arguments": [
                {
                    "Name": "t",
                    "Type": "*testing.T"
                }
            ],
            "Signature": "TestLocationSpeedFrom(t *testing.T)",
            "Source": "ewoJdmFyIGFzc2VydCA9IHJlcXVpcmUuTmV3KHQpCglhc3NlcnQuWmVybyhOdWxsSXNsYW5kKCkuU3BlZWRGcm9tKE51bGxJc2xhbmQoKSkpCgl2YXIgZnJvbSA9ICZMb2NhdGlvbntMYXRpdHVkZTogMCwgTG9uZ2l0dWRlOiAxLCBUaW1lc3RhbXA6IHRpbWUuRGF0ZSgyMDEwLCAxLCAxLCAwLCAwLCAwLCAwLCB0aW1lLlVUQyl9Cgl2YXIgdG8gPSAmTG9jYXRpb257TGF0aXR1ZGU6IDAsIExvbmdpdHVkZTogMiwgVGltZXN0YW1wOiB0aW1lLkRhdGUoMjAxMCwgMSwgMSwgMSwgMCwgMCwgMCwgdGltZS5VVEMpfQoJYXNzZXJ0LkVxdWFsKFNwZWVkKDExMS4xOTQ4Mzc2ODg2ODg1NypLUEgpLCB0by5TcGVlZEZyb20oZnJvbSkpCn0=",
            "IsPackageLevel": true
        },
        {
            "Name": "TestParseDistance",
            "Arguments": [
                {
                    "Name": "t",
                    "Type": "*testing.T"
                }
            ],
            "Signature": "TestParseDistance(t *testing.T)",
            "Source": "ewoJdmFyIGFzc2VydCA9IHJlcXVpcmUuTmV3KHQpCglhc3NlcnQuWmVybyhNdXN0UGFyc2VEaXN0YW5jZShgYCkpCglhc3NlcnQuWmVybyhNdXN0UGFyc2VEaXN0YW5jZShgMG1gKSkKCWFzc2VydC5aZXJvKE11c3RQYXJzZURpc3RhbmNlKGAwIG1ldGVyYCkpCglhc3NlcnQuWmVybyhNdXN0UGFyc2VEaXN0YW5jZShgMCBtZXRlcnNgKSkKCWFzc2VydC5aZXJvKE11c3RQYXJzZURpc3RhbmNlKGAwbWV0ZXJgKSkKCWFzc2VydC5aZXJvKE11c3RQYXJzZURpc3RhbmNlKGAwbWV0ZXJzYCkpCglhc3NlcnQuRXF1YWxWYWx1ZXMoMSwgTXVzdFBhcnNlRGlzdGFuY2UoYDFtYCkpCglhc3NlcnQuRXF1YWxWYWx1ZXMoMSwgTXVzdFBhcnNlRGlzdGFuY2UoYDEgbWV0ZXJgKSkKCWFzc2VydC5FcXVhbFZhbHVlcygxLCBNdXN0UGFyc2VEaXN0YW5jZShgMSBtZXRlcnNgKSkKCWFzc2VydC5FcXVhbFZhbHVlcygxLCBNdXN0UGFyc2VEaXN0YW5jZShgMW1ldGVyYCkpCglhc3NlcnQuRXF1YWxWYWx1ZXMoMSwgTXVzdFBhcnNlRGlzdGFuY2UoYDFtZXRlcnNgKSkKCWFzc2VydC5FcXVhbFZhbHVlcyhEaXN0YW5jZSgzLjE0MTU5NzYyNSkqS2lsb21ldGVyLCBNdXN0UGFyc2VEaXN0YW5jZShgMy4xNDE1OTc2MjVrbWApKQoJYXNzZXJ0LkVxdWFsVmFsdWVzKERpc3RhbmNlKDMuMTQxNTk3NjI1KSpLaWxvbWV0ZXIsIE11c3RQYXJzZURpc3RhbmNlKGAzLjE0MTU5NzYyNSBrbWApKQoJYXNzZXJ0LkVxdWFsVmFsdWVzKERpc3RhbmNlKDMuMTQxNTk3NjI1KSpLaWxvbWV0ZXIsIE11c3RQYXJzZURpc3RhbmNlKGAzLjE0MTU5NzYyNSBrbS5gKSkKCWFzc2VydC5FcXVhbFZhbHVlcyhEaXN0YW5jZSgzLjE0MTU5NzYyNSkqS2lsb21ldGVyLCBNdXN0UGFyc2VEaXN0YW5jZShgMy4xNDE1OTc2MjUga2lsb21ldGVyYCkpCglhc3NlcnQuRXF1YWxWYWx1ZXMoRGlzdGFuY2UoMy4xNDE1OTc2MjUpKktpbG9tZXRlciwgTXVzdFBhcnNlRGlzdGFuY2UoYDMuMTQxNTk3NjI1IGtpbG9tZXRlcnNgKSkKCWFzc2VydC5FcXVhbFZhbHVlcyhEaXN0YW5jZSgzLjE0MTU5NzYyNSkqS2lsb21ldGVyLCBNdXN0UGFyc2VEaXN0YW5jZShgMy4xNDE1OTc2MjVraWxvbWV0ZXJgKSkKCWFzc2VydC5FcXVhbFZhbHVlcyhEaXN0YW5jZSgzLjE0MTU5NzYyNSkqS2lsb21ldGVyLCBNdXN0UGFyc2VEaXN0YW5jZShgMy4xNDE1OTc2MjVraWxvbWV0ZXJzYCkpCglhc3NlcnQuRXF1YWxWYWx1ZXMoRGlzdGFuY2UoMjYuMikqTWlsZSwgTXVzdFBhcnNlRGlzdGFuY2UoYDI2LjJtaWApKQoJYXNzZXJ0LkVxdWFsVmFsdWVzKERpc3RhbmNlKDI2LjIpKk1pbGUsIE11c3RQYXJzZURpc3RhbmNlKGAyNi4yIG1pbGVzYCkpCglhc3NlcnQuRXF1YWxWYWx1ZXMoRGlzdGFuY2UoNTI4MCkqRm9vdCwgTXVzdFBhcnNlRGlzdGFuY2UoYDUyODBmdGApKQoJYXNzZXJ0LkVxdWFsVmFsdWVzKERpc3RhbmNlKDUyODApKkZvb3QsIE11c3RQYXJzZURpc3RhbmNlKGA1MjgwIGZ0YCkpCglhc3NlcnQuRXF1YWxWYWx1ZXMoRGlzdGFuY2UoNTI4MCkqRm9vdCwgTXVzdFBhcnNlRGlzdGFuY2UoYDUyODAgZnQuYCkpCglhc3NlcnQuRXF1YWxWYWx1ZXMoRGlzdGFuY2UoNTI4MCkqRm9vdCwgTXVzdFBhcnNlRGlzdGFuY2UoYDUyODAgZmVldGApKQoJYXNzZXJ0LkVxdWFsVmFsdWVzKERpc3RhbmNlKDUyODApKkZvb3QsIE11c3RQYXJzZURpc3RhbmNlKGA1MjgwZmVldGApKQoJYXNzZXJ0LkVxdWFsVmFsdWVzKERpc3RhbmNlKDEwMCkqWWFyZCwgTXVzdFBhcnNlRGlzdGFuY2UoYDEwMHlkLmApKQoJYXNzZXJ0LkVxdWFsVmFsdWVzKERpc3RhbmNlKDEwMCkqWWFyZCwgTXVzdFBhcnNlRGlzdGFuY2UoYDEwMCB5ZC5gKSkKCWFzc2VydC5FcXVhbFZhbHVlcyhEaXN0YW5jZSgxMDApKllhcmQsIE11c3RQYXJzZURpc3RhbmNlKGAxMDAgeWRgKSkKCWFzc2VydC5FcXVhbFZhbHVlcyhEaXN0YW5jZSgxMDApKllhcmQsIE11c3RQYXJzZURpc3RhbmNlKGAxMDB5ZGApKQoJYXNzZXJ0LkVxdWFsVmFsdWVzKERpc3RhbmNlKDEwMCkqWWFyZCwgTXVzdFBhcnNlRGlzdGFuY2UoYDEwMCB5YXJkc2ApKQoJYXNzZXJ0LkVxdWFsVmFsdWVzKERpc3RhbmNlKDMwMCkqTmF1dGljYWxNaWxlLCBNdXN0UGFyc2VEaXN0YW5jZShgMzAwbm1gKSkKCWFzc2VydC5FcXVhbFZhbHVlcyhEaXN0YW5jZSgzMDApKk5hdXRpY2FsTWlsZSwgTXVzdFBhcnNlRGlzdGFuY2UoYDMwMCBubS5gKSkKCWFzc2VydC5FcXVhbFZhbHVlcyhEaXN0YW5jZSgzMDApKk5hdXRpY2FsTWlsZSwgTXVzdFBhcnNlRGlzdGFuY2UoYDMwMCBubWApKQoJYXNzZXJ0LkVxdWFsVmFsdWVzKERpc3RhbmNlKDMwMCkqTmF1dGljYWxNaWxlLCBNdXN0UGFyc2VEaXN0YW5jZShgMzAwIG5hdXRpY2FsIG1pbGVzYCkpCglhc3NlcnQuRXF1YWxWYWx1ZXMoRGlzdGFuY2UoMzAwKSpOYXV0aWNhbE1pbGUsIE11c3RQYXJzZURpc3RhbmNlKGAzMDAgbmF1dGljYWwgbWlsZWApKQp9",
            "IsPackageLevel": true
        },
        {
            "Name": "TestSpeedFuncs",
            "Arguments": [
                {
                    "Name": "t",
                    "Type": "*testing.T"
                }
            ],
            "Signature": "TestSpeedFuncs(t *testing.T)",
            "Source": "ewoJdmFyIGFzc2VydCA9IHJlcXVpcmUuTmV3KHQpCglhc3NlcnQuVHJ1ZShTcGVlZChNUEgpLkZhc3RlclRoYW4oS1BIKSkKCWFzc2VydC5UcnVlKFNwZWVkKEtQSCkuU2xvd2VyVGhhbihNUEgpKQoJYXNzZXJ0LlRydWUoU3BlZWQoMzYwMCAqIE1QSCkuRXF1YWwoNTI4MCAqIEZlZXRQZXJTZWNvbmQpKQp9",
            "IsPackageLevel": true
        }
    ],
    "Types": {
        "CardinalDirection": {
            "Name": "CardinalDirection",
            "MetaType": "string",
            "Methods": [
                {
                    "Name": "GetDirectionFromBearing",
                    "Arguments": [
                        {
                            "Name": "bearing",
                            "Type": "float64"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "CardinalDirection"
                        }
                    ],
                    "Signature": "GetDirectionFromBearing(bearing float64) CardinalDirection",
                    "Source": "ewoJc3dpdGNoIHsKCWNhc2UgKGJlYXJpbmcgPj0gMCAmJiBiZWFyaW5nIDw9IDIyLjUpIHx8IChiZWFyaW5nID4gMzM3LjUgJiYgYmVhcmluZyA8PSAzNjApOgoJCXJldHVybiBOb3J0aAoJY2FzZSBiZWFyaW5nID4gMjIuNSAmJiBiZWFyaW5nIDw9IDY3LjU6CgkJcmV0dXJuIE5vcnRoRWFzdAoJY2FzZSBiZWFyaW5nID4gNjcuNSAmJiBiZWFyaW5nIDw9IDExMi41OgoJCXJldHVybiBFYXN0CgljYXNlIGJlYXJpbmcgPiAxMTIuNSAmJiBiZWFyaW5nIDw9IDE1Ny41OgoJCXJldHVybiBTb3V0aEVhc3QKCWNhc2UgYmVhcmluZyA+IDE1Ny41ICYmIGJlYXJpbmcgPD0gMjAyLjU6CgkJcmV0dXJuIFNvdXRoCgljYXNlIGJlYXJpbmcgPiAyMDIuNSAmJiBiZWFyaW5nIDw9IDI0Ny41OgoJCXJldHVybiBTb3V0aFdlc3QKCWNhc2UgYmVhcmluZyA+IDI0Ny41ICYmIGJlYXJpbmcgPD0gMjkyLjU6CgkJcmV0dXJuIFdlc3QKCWNhc2UgYmVhcmluZyA+IDI5Mi41ICYmIGJlYXJpbmcgPD0gMzM3LjU6CgkJcmV0dXJuIE5vcnRoV2VzdAoJfQoJcmV0dXJuIGBgCn0=",
                    "IsPackageLevel": true
                }
            ],
            "Source": "dHlwZSBDYXJkaW5hbERpcmVjdGlvbiBzdHJpbmc="
        },
        "Country": {
            "Name": "Country",
            "MetaType": "struct",
            "Methods": [
                {
                    "Name": "IsValid",
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "bool"
                        }
                    ],
                    "Signature": "IsValid() bool",
                    "IsPackageLevel": false
                }
            ],
            "Fields": [
                {
                    "Name": "Name",
                    "Type": "string"
                },
                {
                    "Name": "Code",
                    "Type": "string"
                },
                {
                    "Name": "CCTLD",
                    "Type": "string"
                },
                {
                    "Name": "Latitude",
                    "Type": "float64"
                },
                {
                    "Name": "Longitude",
                    "Type": "float64"
                }
            ],
            "Source": "dHlwZSBDb3VudHJ5IHN0cnVjdCB7CglOYW1lICAgICAgc3RyaW5nCglDb2RlICAgICAgc3RyaW5nCglDQ1RMRCAgICAgc3RyaW5nCglMYXRpdHVkZSAgZmxvYXQ2NAoJTG9uZ2l0dWRlIGZsb2F0NjQKfQ=="
        },
        "CountryData": {
            "Name": "CountryData",
            "Methods": [
                {
                    "Name": "Get",
                    "ReceiverName": "self",
                    "Arguments": [
                        {
                            "Name": "nameOrCode",
                            "Type": "any"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "Country"
                        }
                    ],
                    "Signature": "Get(nameOrCode any) Country",
                    "IsPackageLevel": false
                }
            ],
            "Source": "dHlwZSBDb3VudHJ5RGF0YSBtYXBbc3RyaW5nXUNvdW50cnk="
        },
        "Distance": {
            "Name": "Distance",
            "MetaType": "float64",
            "Methods": [
                {
                    "Name": "Beyond",
                    "ReceiverName": "self",
                    "Arguments": [
                        {
                            "Name": "other",
                            "Type": "Distance"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "bool"
                        }
                    ],
                    "Signature": "Beyond(other Distance) bool",
                    "IsPackageLevel": false
                },
                {
                    "Name": "Equal",
                    "ReceiverName": "self",
                    "Arguments": [
                        {
                            "Name": "other",
                            "Type": "Distance"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "bool"
                        }
                    ],
                    "Signature": "Equal(other Distance) bool",
                    "IsPackageLevel": false
                },
                {
                    "Name": "ImperialString",
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "string"
                        }
                    ],
                    "Signature": "ImperialString() string",
                    "IsPackageLevel": false
                },
                {
                    "Name": "MarshalJSON",
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "[]byte"
                        },
                        {
                            "Type": "error"
                        }
                    ],
                    "Signature": "MarshalJSON() ([]byte, error)",
                    "IsPackageLevel": false
                },
                {
                    "Name": "MetricString",
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "string"
                        }
                    ],
                    "Signature": "MetricString() string",
                    "IsPackageLevel": false
                },
                {
                    "Name": "MustParseDistance",
                    "Arguments": [
                        {
                            "Name": "in",
                            "Type": "any"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "Distance"
                        }
                    ],
                    "Signature": "MustParseDistance(in any) Distance",
                    "Source": "ewoJaWYgZGlzdGFuY2UsIGVyciA6PSBQYXJzZURpc3RhbmNlKGluKTsgZXJyID09IG5pbCB7CgkJcmV0dXJuIGRpc3RhbmNlCgl9IGVsc2UgewoJCXBhbmljKGBpbnZhbGlkIGRpc3RhbmNlOiBgICsgZXJyLkVycm9yKCkpCgl9Cn0=",
                    "IsPackageLevel": true
                },
                {
                    "Name": "ParseDistance",
                    "Arguments": [
                        {
                            "Name": "in",
                            "Type": "any"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "Distance"
                        },
                        {
                            "Type": "error"
                        }
                    ],
                    "Signature": "ParseDistance(in any) (Distance, error)",
                    "Source": "ewoJaWYgdHlwZXV0aWwuSXNaZXJvKGluKSB7CgkJcmV0dXJuIDAsIG5pbAoJfQoJaWYgbWF0Y2ggOj0gcnh1dGlsLk1hdGNoKHJ4RGlzdGFuY2VFeHRyYWN0LCBzdHJpbmdzLlRyaW1TcGFjZShmbXQuU3ByaW50ZigiJXYiLCBpbikpKTsgbWF0Y2ggIT0gbmlsIHsKCQlpZiB2IDo9IHR5cGV1dGlsLlYobWF0Y2guR3JvdXAoYG51bWJlcmApKS5GbG9hdCgpOyB2ID49IDAgewoJCQl2YXIgdW5pdCA9IG1hdGNoLkdyb3VwKGB1bml0YCkKCQkJdW5pdCA9IHN0cmluZ3MuVHJpbVNwYWNlKHVuaXQpCgkJCXVuaXQgPSBzdHJpbmdzLlRvTG93ZXIodW5pdCkKCQkJdW5pdCA9IHN0cmluZ3MuVHJpbVN1ZmZpeCh1bml0LCBgc2ApCgkJCXN3aXRjaCB1bml0IHsKCQkJY2FzZSBgbWV0ZXJgLCBgbWA6CgkJCQlyZXR1cm4gRGlzdGFuY2UodiksIG5pbAoJCQljYXNlIGBraWxvbWV0ZXJgLCBga21gOgoJCQkJcmV0dXJuIERpc3RhbmNlKHYpICogS2lsb21ldGVyLCBuaWwKCQkJY2FzZSBgbWlsZWAsIGBtaWA6CgkJCQlyZXR1cm4gRGlzdGFuY2UodikgKiBNaWxlLCBuaWwKCQkJY2FzZSBgZmVldGAsIGBmb290YCwgYGZ0YDoKCQkJCXJldHVybiBEaXN0YW5jZSh2KSAqIEZvb3QsIG5pbAoJCQljYXNlIGB5YXJkYCwgYHlkYDoKCQkJCXJldHVybiBEaXN0YW5jZSh2KSAqIFlhcmQsIG5pbAoJCQljYXNlIGBubWAsIGBuYXV0aWNhbCBtaWxlYDoKCQkJCXJldHVybiBEaXN0YW5jZSh2KSAqIE5hdXRpY2FsTWlsZSwgbmlsCgkJCWRlZmF1bHQ6CgkJCQlyZXR1cm4gMCwgZm10LkVycm9yZigiVW5yZWNvZ25pemVkIGRpc3RhbmNlIHVuaXQgJXEiLCB1bml0KQoJCQl9CgkJfSBlbHNlIHsKCQkJcmV0dXJuIDAsIGZtdC5FcnJvcmYoIlVuYWJsZSB0byBleHRyYWN0IG51bWJlciBmcm9tIGRpc3RhbmNlIHZhbHVlIikKCQl9Cgl9IGVsc2UgaWYgdiA6PSB0eXBldXRpbC5WKGluKS5GbG9hdCgpOyB2ID49IDAgewoJCXJldHVybiBEaXN0YW5jZSh2KSwgbmlsCgl9IGVsc2UgewoJCXJldHVybiAwLCBmbXQuRXJyb3JmKCJ1bmFibGUgdG8gcGFyc2UgZGlzdGFuY2UgdmFsdWUiKQoJfQp9",
                    "IsPackageLevel": true
                },
                {
                    "Name": "String",
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "string"
                        }
                    ],
                    "Signature": "String() string",
                    "IsPackageLevel": false
                },
                {
                    "Name": "UnmarshalJSON",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Arguments": [
                        {
                            "Name": "data",
                            "Type": "[]byte"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "error"
                        }
                    ],
                    "Signature": "UnmarshalJSON(data []byte) error",
                    "IsPackageLevel": false
                },
                {
                    "Name": "Within",
                    "ReceiverName": "self",
                    "Arguments": [
                        {
                            "Name": "other",
                            "Type": "Distance"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "bool"
                        }
                    ],
                    "Signature": "Within(other Distance) bool",
                    "IsPackageLevel": false
                }
            ],
            "Source": "dHlwZSBEaXN0YW5jZSBmbG9hdDY0"
        },
        "Locatable": {
            "Name": "Locatable",
            "Source": "dHlwZSBMb2NhdGFibGUgaW50ZXJmYWNlIHsKCUdldENvb3JkaW5hdGVzKCkgKGZsb2F0NjQsIGZsb2F0NjQsIHRpbWUuVGltZSkKfQ=="
        },
        "Location": {
            "Name": "Location",
            "MetaType": "struct",
            "Methods": [
                {
                    "Name": "BearingTo",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Arguments": [
                        {
                            "Name": "other",
                            "Type": "Locatable"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "float64"
                        }
                    ],
                    "Signature": "BearingTo(other Locatable) float64",
                    "IsPackageLevel": false
                },
                {
                    "Name": "CardinalDirection",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "CardinalDirection"
                        }
                    ],
                    "Signature": "CardinalDirection() CardinalDirection",
                    "IsPackageLevel": false
                },
                {
                    "Name": "GetCoordinates",
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "float64"
                        },
                        {
                            "Type": "float64"
                        },
                        {
                            "Type": "time.Time"
                        }
                    ],
                    "Signature": "GetCoordinates() (float64, float64, time.Time)",
                    "IsPackageLevel": false
                },
                {
                    "Name": "HasCoordinates",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "bool"
                        }
                    ],
                    "Signature": "HasCoordinates() bool",
                    "IsPackageLevel": false
                },
                {
                    "Name": "HaversineDistance",
                    "Comment": "Return the distance (in meters) between this point and another.  This calulates the\ngreat-circle distance (shortest distance two points on the surface of a sphere) between\nthis Location and another.  Since this (incorrectly) assumes the Earth to be a true\nsphere, this is only reasonably accurate for short-ish distances (is only accurate to\nwithin ~0.5%).",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Arguments": [
                        {
                            "Name": "other",
                            "Type": "Locatable"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "Distance"
                        }
                    ],
                    "Signature": "HaversineDistance(other Locatable) Distance",
                    "IsPackageLevel": false
                },
                {
                    "Name": "MarshalJSON",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "[]byte"
                        },
                        {
                            "Type": "error"
                        }
                    ],
                    "Signature": "MarshalJSON() ([]byte, error)",
                    "IsPackageLevel": false
                },
                {
                    "Name": "NewLocation",
                    "Arguments": [
                        {
                            "Name": "latitude",
                            "Type": "float64"
                        },
                        {
                            "Name": "longitude",
                            "Type": "float64"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "*Location"
                        }
                    ],
                    "Signature": "NewLocation(latitude float64, longitude float64) *Location",
                    "Source": "ewoJcmV0dXJuICZMb2NhdGlvbntMYXRpdHVkZTogbGF0aXR1ZGUsIExvbmdpdHVkZTogbG9uZ2l0dWRlLCBQcm9wZXJ0aWVzOiBtYWtlKG1hcFtzdHJpbmddYW55KX0KfQ==",
                    "IsPackageLevel": true
                },
                {
                    "Name": "SpeedFrom",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Arguments": [
                        {
                            "Name": "other",
                            "Type": "Locatable"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "Speed"
                        }
                    ],
                    "Signature": "SpeedFrom(other Locatable) Speed",
                    "IsPackageLevel": false
                },
                {
                    "Name": "String",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "string"
                        }
                    ],
                    "Signature": "String() string",
                    "IsPackageLevel": false
                },
                {
                    "Name": "NullIsland",
                    "Returns": [
                        {
                            "Type": "*Location"
                        }
                    ],
                    "Signature": "NullIsland() *Location",
                    "Source": "ewoJcmV0dXJuICZMb2NhdGlvbntMYXRpdHVkZTogMCwgTG9uZ2l0dWRlOiAwLCBCZWFyaW5nOiAwLCBBbHRpdHVkZTogMCwgQWNjdXJhY3k6IDEsIFNvdXJjZTogYG51bGxgLCBUaW1lc3RhbXA6IHRpbWUuTm93KCl9Cn0=",
                    "IsPackageLevel": true
                }
            ],
            "Fields": [
                {
                    "Name": "Latitude",
                    "Type": "float64"
                },
                {
                    "Name": "Longitude",
                    "Type": "float64"
                },
                {
                    "Name": "Bearing",
                    "Type": "float64"
                },
                {
                    "Name": "Timestamp",
                    "Type": "time.Time"
                },
                {
                    "Name": "Altitude",
                    "Type": "Distance"
                },
                {
                    "Name": "Speed",
                    "Type": "Speed"
                },
                {
                    "Name": "Accuracy",
                    "Type": "float64"
                },
                {
                    "Name": "Error",
                    "Type": "*LocationError"
                },
                {
                    "Name": "Direction",
                    "Type": "CardinalDirection"
                },
                {
                    "Name": "Source",
                    "Type": "string"
                },
                {
                    "Name": "Properties",
                    "Type": "map[string]any"
                }
            ],
            "Comment": "Specifies a three-dimensional location within a coordinate reference system.",
            "Source": "dHlwZSBMb2NhdGlvbiBzdHJ1Y3QgewoJTGF0aXR1ZGUgICAgZmxvYXQ2NCAgICAgICAgICAgYGpzb246ImxhdGl0dWRlLG9taXRlbXB0eSJgCglMb25naXR1ZGUgICBmbG9hdDY0ICAgICAgICAgICBganNvbjoibG9uZ2l0dWRlLG9taXRlbXB0eSJgCglCZWFyaW5nICAgICBmbG9hdDY0ICAgICAgICAgICBganNvbjoiYmVhcmluZyxvbWl0ZW1wdHkiYAoJVGltZXN0YW1wICAgdGltZS5UaW1lICAgICAgICAgYGpzb246InRpbWVzdGFtcCxvbWl0ZW1wdHkiYAoJQWx0aXR1ZGUgICAgRGlzdGFuY2UgICAgICAgICAgYGpzb246ImFsdGl0dWRlLG9taXRlbXB0eSJgCglTcGVlZCAgICAgICBTcGVlZCAgICAgICAgICAgICBganNvbjoic3BlZWQsb21pdGVtcHR5ImAKCUFjY3VyYWN5ICAgIGZsb2F0NjQgICAgICAgICAgIGBqc29uOiJhY2N1cmFjeSxvbWl0ZW1wdHkiYAoJRXJyb3IgICAgICAgKkxvY2F0aW9uRXJyb3IgICAgYGpzb246ImVycm9yLG9taXRlbXB0eSJgCglEaXJlY3Rpb24gICBDYXJkaW5hbERpcmVjdGlvbiBganNvbjoiZGlyZWN0aW9uLG9taXRlbXB0eSJgCglTb3VyY2UgICAgICBzdHJpbmcgICAgICAgICAgICBganNvbjoic291cmNlLG9taXRlbXB0eSJgCglQcm9wZXJ0aWVzICBtYXAgLy8gU3BlY2lmaWVzIGEgdGhyZWUtZGltZW5zaW9uYWwgbG9jYXRpb24gd2l0aGluIGEgY29vcmRpbmF0ZSByZWZlcmVuY2Ugc3lzdGVtLgoJW3N0cmluZ11hbnkgYGpzb246InByb3BlcnRpZXMsb21pdGVtcHR5ImAKfQ=="
        },
        "LocationError": {
            "Name": "LocationError",
            "MetaType": "struct",
            "Fields": [
                {
                    "Name": "Latitude",
                    "Type": "Distance"
                },
                {
                    "Name": "Longitude",
                    "Type": "Distance"
                },
                {
                    "Name": "Altitude",
                    "Type": "Distance"
                },
                {
                    "Name": "Bearing",
                    "Type": "float64"
                },
                {
                    "Name": "Speed",
                    "Type": "Speed"
                },
                {
                    "Name": "Timestamp",
                    "Type": "float64"
                }
            ],
            "Comment": "Describes the error margin (+/-) for each of the named values.",
            "Source": "dHlwZSBMb2NhdGlvbkVycm9yIHN0cnVjdCB7CglMYXRpdHVkZSAgRGlzdGFuY2UgYGpzb246ImxhdGl0dWRlImAKCUxvbmdpdHVkZSBEaXN0YW5jZSBganNvbjoibG9uZ2l0dWRlImAKCUFsdGl0dWRlICBEaXN0YW5jZSBganNvbjoiYWx0aXR1ZGUiYAoJQmVhcmluZyAgIGZsb2F0NjQgIGBqc29uOiJiZWFyaW5nImAKCVNwZWVkICAgICBTcGVlZCAgICBganNvbjoic3BlZWQiYAoJVGltZXN0YW1wIGZsb2F0NjQgIGBqc29uOiJ0aW1lc3RhbXAiYAp9Ly8gRGVzY3JpYmVzIHRoZSBlcnJvciBtYXJnaW4gKCsvLSkgZm9yIGVhY2ggb2YgdGhlIG5hbWVkIHZhbHVlcy4K"
        },
        "MeasurementSystem": {
            "Name": "MeasurementSystem",
            "MetaType": "string",
            "Source": "dHlwZSBNZWFzdXJlbWVudFN5c3RlbSBzdHJpbmc="
        },
        "Speed": {
            "Name": "Speed",
            "MetaType": "float64",
            "Methods": [
                {
                    "Name": "Equal",
                    "ReceiverName": "self",
                    "Arguments": [
                        {
                            "Name": "other",
                            "Type": "Speed"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "bool"
                        }
                    ],
                    "Signature": "Equal(other Speed) bool",
                    "IsPackageLevel": false
                },
                {
                    "Name": "FasterThan",
                    "ReceiverName": "self",
                    "Arguments": [
                        {
                            "Name": "other",
                            "Type": "Speed"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "bool"
                        }
                    ],
                    "Signature": "FasterThan(other Speed) bool",
                    "IsPackageLevel": false
                },
                {
                    "Name": "MarshalJSON",
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "[]byte"
                        },
                        {
                            "Type": "error"
                        }
                    ],
                    "Signature": "MarshalJSON() ([]byte, error)",
                    "IsPackageLevel": false
                },
                {
                    "Name": "SlowerThan",
                    "ReceiverName": "self",
                    "Arguments": [
                        {
                            "Name": "other",
                            "Type": "Speed"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "bool"
                        }
                    ],
                    "Signature": "SlowerThan(other Speed) bool",
                    "IsPackageLevel": false
                },
                {
                    "Name": "String",
                    "ReceiverName": "self",
                    "Returns": [
                        {
                            "Type": "string"
                        }
                    ],
                    "Signature": "String() string",
                    "IsPackageLevel": false
                },
                {
                    "Name": "UnmarshalJSON",
                    "PointerReceiver": true,
                    "ReceiverName": "self",
                    "Arguments": [
                        {
                            "Name": "data",
                            "Type": "[]byte"
                        }
                    ],
                    "Returns": [
                        {
                            "Type": "error"
                        }
                    ],
                    "Signature": "UnmarshalJSON(data []byte) error",
                    "IsPackageLevel": false
                }
            ],
            "Source": "dHlwZSBTcGVlZCBmbG9hdDY0"
        }
    }
}
